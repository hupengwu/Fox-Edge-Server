-- --------------------------------------------------------
-- 主机:                           192.168.1.21
-- 服务器版本:                        8.0.35-0ubuntu0.22.04.1 - (Ubuntu)
-- 服务器操作系统:                      Linux
-- HeidiSQL 版本:                  12.2.0.6576
-- --------------------------------------------------------

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET NAMES utf8 */;
/*!50503 SET NAMES utf8mb4 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

-- 导出  表 nacos.config_info 结构
DROP TABLE IF EXISTS `config_info`;
CREATE TABLE IF NOT EXISTS `config_info` (
  `id` bigint NOT NULL AUTO_INCREMENT COMMENT 'id',
  `data_id` varchar(255) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(255) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin DEFAULT NULL,
  `content` longtext CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT 'content',
  `md5` varchar(32) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin DEFAULT NULL COMMENT 'md5',
  `gmt_create` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `gmt_modified` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '修改时间',
  `src_user` text CHARACTER SET utf8mb3 COLLATE utf8mb3_bin COMMENT 'source user',
  `src_ip` varchar(50) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin DEFAULT NULL COMMENT 'source ip',
  `app_name` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin DEFAULT NULL,
  `tenant_id` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin DEFAULT '' COMMENT '租户字段',
  `c_desc` varchar(256) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin DEFAULT NULL,
  `c_use` varchar(64) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin DEFAULT NULL,
  `effect` varchar(64) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin DEFAULT NULL,
  `type` varchar(64) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin DEFAULT NULL,
  `c_schema` text CHARACTER SET utf8mb3 COLLATE utf8mb3_bin,
  `encrypted_data_key` text CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT '秘钥',
  PRIMARY KEY (`id`),
  UNIQUE KEY `uk_configinfo_datagrouptenant` (`data_id`,`group_id`,`tenant_id`)
) ENGINE=InnoDB AUTO_INCREMENT=157 DEFAULT CHARSET=utf8mb3 COLLATE=utf8mb3_bin COMMENT='config_info';

-- 正在导出表  nacos.config_info 的数据：~31 rows (大约)
DELETE FROM `config_info`;
INSERT INTO `config_info` (`id`, `data_id`, `group_id`, `content`, `md5`, `gmt_create`, `gmt_modified`, `src_user`, `src_ip`, `app_name`, `tenant_id`, `c_desc`, `c_use`, `effect`, `type`, `c_schema`, `encrypted_data_key`) VALUES
	(1, 'application-dev.yml', 'DEFAULT_GROUP', 'spring:\n  main:\n    allow-circular-references: true\n    allow-bean-definition-overriding: true\n  autoconfigure:\n    exclude: com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure\n  mvc:\n    pathmatch:\n      matching-strategy: ant_path_matcher\n  cloud:\n    sentinel:\n      filter:\n        # sentinel 在 springboot 2.6.x 不兼容问题的处理\n        enabled: false\n\n# feign 配置\nfeign:\n  sentinel:\n    enabled: true\n  okhttp:\n    enabled: true\n  httpclient:\n    enabled: false\n  client:\n    config:\n      default:\n        connectTimeout: 10000\n        readTimeout: 10000\n  compression:\n    request:\n      enabled: true\n    response:\n      enabled: true\n\n# 暴露监控端点\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \'*\'\n', 'e6a8dafc6fcec97f777836bea3ed5028', '2023-03-23 05:38:17', '2023-03-23 05:38:17', NULL, '192.168.3.1', '', '', NULL, NULL, NULL, 'yaml', NULL, ''),
	(2, 'ruoyi-gateway-dev.yml', 'DEFAULT_GROUP', 'spring:\n  redis:\n    host: localhost\n    port: 6379\n    password: 12345678\n  cloud:\n    gateway:\n      discovery:\n        locator:\n          lowerCaseServiceId: true\n          enabled: true\n      routes:\n        # 认证中心\n        - id: ruoyi-auth\n          uri: lb://ruoyi-auth\n          predicates:\n            - Path=/auth/**\n          filters:\n            # 验证码处理\n            - CacheRequestFilter\n            - ValidateCodeFilter\n            - StripPrefix=1\n        # 代码生成\n        - id: ruoyi-gen\n          uri: lb://ruoyi-gen\n          predicates:\n            - Path=/code/**\n          filters:\n            - StripPrefix=1\n        # 定时任务\n        - id: ruoyi-job\n          uri: lb://ruoyi-job\n          predicates:\n            - Path=/schedule/**\n          filters:\n            - StripPrefix=1\n        # 系统模块\n        - id: ruoyi-system\n          uri: lb://ruoyi-system\n          predicates:\n            - Path=/system/**\n          filters:\n            - StripPrefix=1\n        # 文件服务\n        - id: ruoyi-file\n          uri: lb://ruoyi-file\n          predicates:\n            - Path=/file/**\n          filters:\n            - StripPrefix=1\n        # fox-repository-service模块\n        - id: fox-repository-service\n          uri: lb://fox-repository-service\n          predicates:\n            - Path=/repository/**\n          filters:\n            - StripPrefix=1\n        # fox-cloud-server-aggregator-service模块\n        - id: fox-cloud-server-aggregator-service\n          uri: lb://fox-cloud-server-aggregator-service\n          predicates:\n            - Path=/aggregator/**\n          filters:\n            - StripPrefix=1\n        # fox-cloud-server-service模块\n        - id: fox-cloud-server-service\n          uri: lb://fox-cloud-server-service\n          predicates:\n            - Path=/manager/**\n          filters:\n            - StripPrefix=1\n\n# 安全配置\nsecurity:\n  # 验证码\n  captcha:\n    enabled: false\n    type: math\n  # 防止XSS攻击\n  xss:\n    enabled: false\n    excludeUrls:\n      - /system/notice\n  # 不校验白名单\n  ignore:\n    whites:\n      - /auth/logout\n      - /auth/login\n      - /auth/register\n      - /*/v2/api-docs\n      - /csrf\n      - /manager/social/**\n', '272300f8920345e1aace56f4dc824823', '2023-03-23 05:38:17', '2023-12-21 22:29:41', 'nacos', '192.168.1.8', '', '', '', '', '', 'yaml', '', ''),
	(3, 'ruoyi-auth-dev.yml', 'DEFAULT_GROUP', 'spring:\n  redis:\n    host: localhost\n    port: 6379\n    password: 12345678\n', '4c373ff0513ab375f6f67ddf0a214b18', '2023-03-23 05:38:17', '2023-03-23 06:18:03', 'nacos', '192.168.3.1', '', '', '', '', '', 'yaml', '', ''),
	(4, 'ruoyi-monitor-dev.yml', 'DEFAULT_GROUP', '# spring\r\nspring: \r\n  security:\r\n    user:\r\n      name: ruoyi\r\n      password: 123456\r\n  boot:\r\n    admin:\r\n      ui:\r\n        title: 若依服务状态监控\r\n', 'd8997d0707a2fd5d9fc4e8409da38129', '2023-03-23 05:38:17', '2023-03-23 05:38:17', NULL, '192.168.3.1', '', '', NULL, NULL, NULL, 'yaml', NULL, ''),
	(5, 'ruoyi-system-dev.yml', 'DEFAULT_GROUP', '# spring配置\nspring: \n  redis:\n    host: localhost\n    port: 6379\n    password: 12345678\n  datasource:\n    druid:\n      stat-view-servlet:\n        enabled: true\n        loginUsername: admin\n        loginPassword: 123456\n    dynamic:\n      druid:\n        initial-size: 5\n        min-idle: 5\n        maxActive: 20\n        maxWait: 60000\n        timeBetweenEvictionRunsMillis: 60000\n        minEvictableIdleTimeMillis: 300000\n        validationQuery: SELECT 1 FROM DUAL\n        testWhileIdle: true\n        testOnBorrow: false\n        testOnReturn: false\n        poolPreparedStatements: true\n        maxPoolPreparedStatementPerConnectionSize: 20\n        filters: stat,slf4j\n        connectionProperties: druid.stat.mergeSql\\=true;druid.stat.slowSqlMillis\\=5000\n      datasource:\n          # 主库数据源\n          master:\n            driver-class-name: com.mysql.cj.jdbc.Driver\n            url: jdbc:mysql://localhost:3306/ry-cloud?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8\n            username: ry-cloud\n            password: 12345678\n          # 从库数据源\n          # slave:\n            # username: \n            # password: \n            # url: \n            # driver-class-name: \n      # seata: true    # 开启seata代理，开启后默认每个数据源都代理，如果某个不需要代理可单独关闭\n\n# seata配置\nseata:\n  # 默认关闭，如需启用spring.datasource.dynami.seata需要同时开启\n  enabled: false\n  # Seata 应用编号，默认为 ${spring.application.name}\n  application-id: ${spring.application.name}\n  # Seata 事务组编号，用于 TC 集群名\n  tx-service-group: ${spring.application.name}-group\n  # 关闭自动代理\n  enable-auto-data-source-proxy: false\n  # 服务配置项\n  service:\n    # 虚拟组和分组的映射\n    vgroup-mapping:\n      ruoyi-system-group: default\n  config:\n    type: nacos\n    nacos:\n      serverAddr: localhost:8848\n      group: SEATA_GROUP\n      namespace:\n  registry:\n    type: nacos\n    nacos:\n      application: seata-server\n      server-addr: localhost:8848\n      namespace:\n\n# mybatis配置\nmybatis:\n    # 搜索指定包别名\n    typeAliasesPackage: com.ruoyi.system\n    # 配置mapper的扫描，找到所有的mapper.xml映射文件\n    mapperLocations: classpath:mapper/**/*.xml\n\n# swagger配置\nswagger:\n  title: 系统模块接口文档\n  license: Powered By ruoyi\n  licenseUrl: https://ruoyi.vip', 'f86e600ccfbbf83359a1e92d33a5c6fd', '2023-03-23 05:38:17', '2023-03-23 06:37:34', 'nacos', '192.168.3.1', '', '', '', '', '', 'yaml', '', ''),
	(6, 'ruoyi-gen-dev.yml', 'DEFAULT_GROUP', '# spring配置\nspring: \n  redis:\n    host: localhost\n    port: 6379\n    password: 12345678\n  datasource: \n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://localhost:3306/ry-cloud?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8\n    username: ry-cloud\n    password: 12345678\n\n# mybatis配置\nmybatis:\n    # 搜索指定包别名\n    typeAliasesPackage: com.ruoyi.gen.domain\n    # 配置mapper的扫描，找到所有的mapper.xml映射文件\n    mapperLocations: classpath:mapper/**/*.xml\n\n# swagger配置\nswagger:\n  title: 代码生成接口文档\n  license: Powered By ruoyi\n  licenseUrl: https://ruoyi.vip\n\n# 代码生成\ngen: \n  # 作者\n  author: ruoyi\n  # 默认生成包路径 system 需改成自己的模块名称 如 system monitor tool\n  packageName: com.ruoyi.system\n  # 自动去除表前缀，默认是false\n  autoRemovePre: false\n  # 表前缀（生成类名不会包含表前缀，多个用逗号分隔）\n  tablePrefix: sys_\n', 'ec16d16bef5f4702453ecdf63000104b', '2023-03-23 05:38:17', '2023-03-23 06:37:55', 'nacos', '192.168.3.1', '', '', '', '', '', 'yaml', '', ''),
	(7, 'ruoyi-job-dev.yml', 'DEFAULT_GROUP', '# spring配置\nspring: \n  redis:\n    host: localhost\n    port: 6379\n    password: 12345678\n  datasource:\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://192.168.3.133:3306/ry-cloud?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8\n    username: ry-cloud\n    password: 12345678\n\n# mybatis配置\nmybatis:\n    # 搜索指定包别名\n    typeAliasesPackage: com.ruoyi.job.domain\n    # 配置mapper的扫描，找到所有的mapper.xml映射文件\n    mapperLocations: classpath:mapper/**/*.xml\n\n# swagger配置\nswagger:\n  title: 定时任务接口文档\n  license: Powered By ruoyi\n  licenseUrl: https://ruoyi.vip\n', 'afb93ad354127840f1c21b9ac8165214', '2023-03-23 05:38:17', '2023-05-21 10:16:11', 'nacos', '192.168.3.1', '', '', '', '', '', 'yaml', '', ''),
	(8, 'ruoyi-file-dev.yml', 'DEFAULT_GROUP', '# 本地文件上传    \nfile:\n    domain: http://127.0.0.1:9300\n    path: D:/ruoyi/uploadPath\n    prefix: /statics\n\n# FastDFS配置\nfdfs:\n  domain: http://8.129.231.12\n  soTimeout: 3000\n  connectTimeout: 2000\n  trackerList: 8.129.231.12:22122\n\n# Minio配置\nminio:\n  url: http://192.168.88.129:9002\n  accessKey: minioadmin\n  secretKey: minioadmin\n  bucketName: test', '604607f63d223a1e632807536f18d9d9', '2023-03-23 05:38:17', '2023-03-23 05:38:17', NULL, '192.168.3.1', '', '', NULL, NULL, NULL, 'yaml', NULL, ''),
	(9, 'sentinel-ruoyi-gateway', 'DEFAULT_GROUP', '[\r\n    {\r\n        "resource": "ruoyi-auth",\r\n        "count": 500,\r\n        "grade": 1,\r\n        "limitApp": "default",\r\n        "strategy": 0,\r\n        "controlBehavior": 0\r\n    },\r\n	{\r\n        "resource": "ruoyi-system",\r\n        "count": 1000,\r\n        "grade": 1,\r\n        "limitApp": "default",\r\n        "strategy": 0,\r\n        "controlBehavior": 0\r\n    },\r\n	{\r\n        "resource": "ruoyi-gen",\r\n        "count": 200,\r\n        "grade": 1,\r\n        "limitApp": "default",\r\n        "strategy": 0,\r\n        "controlBehavior": 0\r\n    },\r\n	{\r\n        "resource": "ruoyi-job",\r\n        "count": 300,\r\n        "grade": 1,\r\n        "limitApp": "default",\r\n        "strategy": 0,\r\n        "controlBehavior": 0\r\n    }\r\n]', '9f3a3069261598f74220bc47958ec252', '2023-03-23 05:38:17', '2023-03-23 05:38:17', NULL, '192.168.3.1', '', '', NULL, NULL, NULL, 'text', NULL, ''),
	(10, 'application-prod.yml', 'DEFAULT_GROUP', 'spring:\n  main:\n    allow-circular-references: true\n    allow-bean-definition-overriding: true\n  autoconfigure:\n    exclude: com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure\n  mvc:\n    pathmatch:\n      matching-strategy: ant_path_matcher\n  cloud:\n    sentinel:\n      filter:\n        # sentinel 在 springboot 2.6.x 不兼容问题的处理\n        enabled: false\n\n# feign 配置\nfeign:\n  sentinel:\n    enabled: true\n  okhttp:\n    enabled: true\n  httpclient:\n    enabled: false\n  client:\n    config:\n      default:\n        connectTimeout: 10000\n        readTimeout: 10000\n  compression:\n    request:\n      enabled: true\n    response:\n      enabled: true\n\n# 暴露监控端点\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \'*\'\n', 'e6a8dafc6fcec97f777836bea3ed5028', '2023-03-23 05:38:17', '2023-03-23 05:38:17', NULL, '192.168.3.1', '', '', NULL, NULL, NULL, 'yaml', NULL, ''),
	(11, 'application-test.yml', 'DEFAULT_GROUP', 'spring:\n  main:\n    allow-circular-references: true\n    allow-bean-definition-overriding: true\n  autoconfigure:\n    exclude: com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure\n  mvc:\n    pathmatch:\n      matching-strategy: ant_path_matcher\n  cloud:\n    sentinel:\n      filter:\n        # sentinel 在 springboot 2.6.x 不兼容问题的处理\n        enabled: false\n\n# feign 配置\nfeign:\n  sentinel:\n    enabled: true\n  okhttp:\n    enabled: true\n  httpclient:\n    enabled: false\n  client:\n    config:\n      default:\n        connectTimeout: 10000\n        readTimeout: 10000\n  compression:\n    request:\n      enabled: true\n    response:\n      enabled: true\n\n# 暴露监控端点\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \'*\'\n', 'e6a8dafc6fcec97f777836bea3ed5028', '2023-03-23 05:38:17', '2023-03-23 05:38:17', NULL, '192.168.3.1', '', '', NULL, NULL, NULL, 'yaml', NULL, ''),
	(12, 'ruoyi-auth-prod.yml', 'DEFAULT_GROUP', 'spring: \n  redis:\n    database: 1\n    cluster:\n      #设置key的生存时间，当key过期时，它会被自动删除；\n      expire-seconds: 120\n      #设置命令的执行时间，如果超过这个时间，则报错;\n      command-timeout: 5000\n      #设置最大重试次数，如果超过这个次数，则报错\n      max-redirects: 3\n      #设置redis集群的节点信息，其中namenode为域名解析，通过解析域名来获取相应的地址;\n      nodes: 172.16.50.35:7000,172.16.50.35:7001,172.27.67.186:7000,172.27.67.186:7001,172.16.50.34:7000,172.16.50.34:7001\n    password: 12345678\n    timeout: 6000ms  # 连接超时时长（毫秒）\n    lettuce:\n      pool:\n        max-active: 1000  # 连接池最大连接数（使用负值表示没有限制）\n        max-wait: -1ms      # 连接池最大阻塞等待时间（使用负值表示没有限制）\n        max-idle: 10      # 连接池中的最大空闲连接\n        min-idle: 5       # 连接池中的最小空闲连接\n', '0484ce407e8b52fe8b4440d40f9e50ea', '2023-03-23 05:38:17', '2023-03-23 05:38:17', NULL, '192.168.3.1', '', '', NULL, NULL, NULL, 'yaml', NULL, ''),
	(13, 'ruoyi-auth-test.yml', 'DEFAULT_GROUP', 'spring:\n  redis:\n    host: 120.79.69.201\n    port: 7379\n    password: 12345678\n', '5a5b96bc291e2b8aa666c0ba8592aacf', '2023-03-23 05:38:17', '2023-03-23 05:38:17', NULL, '192.168.3.1', '', '', NULL, NULL, NULL, 'yaml', NULL, ''),
	(14, 'ruoyi-file-prod.yml', 'DEFAULT_GROUP', '# 本地文件上传    \nfile:\n    domain: http://127.0.0.1:9300\n    path: D:/ruoyi/uploadPath\n    prefix: /statics\n\n# FastDFS配置\nfdfs:\n  domain: http://8.129.231.12\n  soTimeout: 3000\n  connectTimeout: 2000\n  trackerList: 8.129.231.12:22122\n\n# Minio配置\nminio:\n  url: http://192.168.88.129:9002\n  accessKey: minioadmin\n  secretKey: minioadmin\n  bucketName: test', '604607f63d223a1e632807536f18d9d9', '2023-03-23 05:38:17', '2023-03-23 05:38:17', NULL, '192.168.3.1', '', '', NULL, NULL, NULL, 'yaml', NULL, ''),
	(15, 'ruoyi-file-test.yml', 'DEFAULT_GROUP', '# 本地文件上传    \nfile:\n    domain: http://127.0.0.1:9300\n    path: D:/ruoyi/uploadPath\n    prefix: /statics\n\n# FastDFS配置\nfdfs:\n  domain: http://8.129.231.12\n  soTimeout: 3000\n  connectTimeout: 2000\n  trackerList: 8.129.231.12:22122\n\n# Minio配置\nminio:\n  url: http://120.79.69.201:9002\n  accessKey: admin\n  secretKey: 12345678\n  bucketName: avatar', 'e74bb26bd19b3190fd3b5dadda924fd2', '2023-03-23 05:38:17', '2023-03-23 05:38:17', NULL, '192.168.3.1', '', '', NULL, NULL, NULL, 'yaml', NULL, ''),
	(16, 'ruoyi-gateway-prod.yml', 'DEFAULT_GROUP', 'spring:\n  redis:\n    database: 1\n    cluster:\n      #设置key的生存时间，当key过期时，它会被自动删除；\n      expire-seconds: 120\n      #设置命令的执行时间，如果超过这个时间，则报错;\n      command-timeout: 5000\n      #设置最大重试次数，如果超过这个次数，则报错\n      max-redirects: 3\n      #设置redis集群的节点信息，其中namenode为域名解析，通过解析域名来获取相应的地址;\n      nodes: 172.16.50.35:7000,172.16.50.35:7001,172.27.67.186:7000,172.27.67.186:7001,172.16.50.34:7000,172.16.50.34:7001\n    password: 12345678\n    timeout: 6000ms  # 连接超时时长（毫秒）\n    lettuce:\n      pool:\n        max-active: 1000  # 连接池最大连接数（使用负值表示没有限制）\n        max-wait: -1ms      # 连接池最大阻塞等待时间（使用负值表示没有限制）\n        max-idle: 10      # 连接池中的最大空闲连接\n        min-idle: 5       # 连接池中的最小空闲连接\n  cloud:\n    gateway:\n      discovery:\n        locator:\n          lowerCaseServiceId: true\n          enabled: true\n      routes:\n        # 认证中心\n        - id: ruoyi-auth\n          uri: lb://ruoyi-auth\n          predicates:\n            - Path=/auth/**\n          filters:\n            # 验证码处理\n            - CacheRequestFilter\n            - ValidateCodeFilter\n            - StripPrefix=1\n        # 代码生成\n        - id: ruoyi-gen\n          uri: lb://ruoyi-gen\n          predicates:\n            - Path=/code/**\n          filters:\n            - StripPrefix=1\n        # 定时任务\n        - id: ruoyi-job\n          uri: lb://ruoyi-job\n          predicates:\n            - Path=/schedule/**\n          filters:\n            - StripPrefix=1\n        # 系统模块\n        - id: ruoyi-system\n          uri: lb://ruoyi-system\n          predicates:\n            - Path=/system/**\n          filters:\n            - StripPrefix=1\n        # 文件服务\n        - id: ruoyi-file\n          uri: lb://ruoyi-file\n          predicates:\n            - Path=/file/**\n          filters:\n            - StripPrefix=1\n        # 商品服务\n        - id: ruoyi-goods\n          uri: lb://ruoyi-goods\n          predicates:\n            - Path=/goods/**\n          filters:\n            - StripPrefix=1\n\n# 安全配置\nsecurity:\n  # 验证码\n  captcha:\n    enabled: true\n    type: math\n  # 防止XSS攻击\n  xss:\n    enabled: true\n    excludeUrls:\n      - /system/notice\n  # 不校验白名单\n  ignore:\n    whites:\n      - /auth/logout\n      - /auth/login\n      - /auth/register\n      - /*/v2/api-docs\n      - /csrf\n', 'f81c445270bb1500ca325a2c7654b37b', '2023-03-23 05:38:17', '2023-03-23 05:38:17', NULL, '192.168.3.1', '', '', NULL, NULL, NULL, 'yaml', NULL, ''),
	(17, 'ruoyi-gateway-test.yml', 'DEFAULT_GROUP', 'spring:\n  redis:\n    host: 120.79.69.201\n    port: 7379\n    password: 12345678\n  cloud:\n    gateway:\n      discovery:\n        locator:\n          lowerCaseServiceId: true\n          enabled: true\n      routes:\n        # 认证中心\n        - id: ruoyi-auth\n          uri: lb://ruoyi-auth\n          predicates:\n            - Path=/auth/**\n          filters:\n            # 验证码处理\n            - CacheRequestFilter\n            - ValidateCodeFilter\n            - StripPrefix=1\n        # 代码生成\n        - id: ruoyi-gen\n          uri: lb://ruoyi-gen\n          predicates:\n            - Path=/code/**\n          filters:\n            - StripPrefix=1\n        # 定时任务\n        - id: ruoyi-job\n          uri: lb://ruoyi-job\n          predicates:\n            - Path=/schedule/**\n          filters:\n            - StripPrefix=1\n        # 系统模块\n        - id: ruoyi-system\n          uri: lb://ruoyi-system\n          predicates:\n            - Path=/system/**\n          filters:\n            - StripPrefix=1\n        # 文件服务\n        - id: ruoyi-file\n          uri: lb://ruoyi-file\n          predicates:\n            - Path=/file/**\n          filters:\n            - StripPrefix=1\n        # 公网鉴权服务\n        - id: ruoyi-pubauth\n          uri: lb://ruoyi-pubauth\n          predicates:\n            - Path=/pubauth/**\n          filters:\n            - StripPrefix=1\n\n# 安全配置\nsecurity:\n  # 验证码\n  captcha:\n    enabled: true\n    type: math\n  # 防止XSS攻击\n  xss:\n    enabled: true\n    excludeUrls:\n      - /system/notice\n  # 不校验白名单\n  ignore:\n    whites:\n      - /auth/logout\n      - /auth/login\n      - /auth/register\n      - /*/v2/api-docs\n      - /csrf\n      - /pubauth/logout\n      - /pubauth/login\n      - /pubauth/register\n', 'ebe18901d29e83094e799e9c88e6235c', '2023-03-23 05:38:17', '2023-03-23 05:38:17', NULL, '192.168.3.1', '', '', NULL, NULL, NULL, 'yaml', NULL, ''),
	(18, 'ruoyi-gen-prod.yml', 'DEFAULT_GROUP', '# spring配置\nspring: \n  redis:\n    database: 1\n    cluster:\n      #设置key的生存时间，当key过期时，它会被自动删除；\n      expire-seconds: 120\n      #设置命令的执行时间，如果超过这个时间，则报错;\n      command-timeout: 5000\n      #设置最大重试次数，如果超过这个次数，则报错\n      max-redirects: 3\n      #设置redis集群的节点信息，其中namenode为域名解析，通过解析域名来获取相应的地址;\n      nodes: 192.168.88.129:7000,192.168.88.129:7001,192.168.88.130:7000,192.168.88.130:7001,192.168.88.131:7000,192.168.88.131:7001\n    password: 12345678\n    timeout: 6000ms  # 连接超时时长（毫秒）\n    lettuce:\n      pool:\n        max-active: 1000  # 连接池最大连接数（使用负值表示没有限制）\n        max-wait: -1ms      # 连接池最大阻塞等待时间（使用负值表示没有限制）\n        max-idle: 10      # 连接池中的最大空闲连接\n        min-idle: 5       # 连接池中的最小空闲连接\n  datasource: \n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://192.168.88.129:3306/ry-cloud?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8\n    username: root\n    password: 12345678\n\n# mybatis配置\nmybatis:\n    # 搜索指定包别名\n    typeAliasesPackage: com.ruoyi.gen.domain\n    # 配置mapper的扫描，找到所有的mapper.xml映射文件\n    mapperLocations: classpath:mapper/**/*.xml\n\n# swagger配置\nswagger:\n  title: 代码生成接口文档\n  license: Powered By ruoyi\n  licenseUrl: https://ruoyi.vip\n\n# 代码生成\ngen: \n  # 作者\n  author: ruoyi\n  # 默认生成包路径 system 需改成自己的模块名称 如 system monitor tool\n  packageName: com.ruoyi.system\n  # 自动去除表前缀，默认是false\n  autoRemovePre: false\n  # 表前缀（生成类名不会包含表前缀，多个用逗号分隔）\n  tablePrefix: sys_\n', '012b74297ab6c719dca36c3de53c18ff', '2023-03-23 05:38:17', '2023-03-23 05:38:17', NULL, '192.168.3.1', '', '', NULL, NULL, NULL, 'yaml', NULL, ''),
	(19, 'ruoyi-gen-test.yml', 'DEFAULT_GROUP', '# spring配置\nspring: \n  redis:\n    host: 120.79.69.201\n    port: 7379\n    password: 12345678\n  datasource: \n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://120.79.69.201:3306/ry-cloud?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8\n    username: ruoyi\n    password: RuoYi@12345678\n\n# mybatis配置\nmybatis:\n    # 搜索指定包别名\n    typeAliasesPackage: com.ruoyi.gen.domain\n    # 配置mapper的扫描，找到所有的mapper.xml映射文件\n    mapperLocations: classpath:mapper/**/*.xml\n\n# swagger配置\nswagger:\n  title: 代码生成接口文档\n  license: Powered By ruoyi\n  licenseUrl: https://ruoyi.vip\n\n# 代码生成\ngen: \n  # 作者\n  author: ruoyi\n  # 默认生成包路径 system 需改成自己的模块名称 如 system monitor tool\n  packageName: com.ruoyi.system\n  # 自动去除表前缀，默认是false\n  autoRemovePre: false\n  # 表前缀（生成类名不会包含表前缀，多个用逗号分隔）\n  tablePrefix: sys_\n', '967da895e065da7a5e8b5320074dbf6e', '2023-03-23 05:38:17', '2023-03-23 05:38:17', NULL, '192.168.3.1', '', '', NULL, NULL, NULL, 'yaml', NULL, ''),
	(20, 'ruoyi-goods-test.yml', 'DEFAULT_GROUP', '# spring配置\nspring: \n  data:\n    mongodb:\n      uri: mongodb://admin:12345678@120.25.241.120:27000/demo?connect=replicaSet&replSetName=configsvr&authSource=demo&safe=true&slaveOk=true\n      print: true  #是否打印查询语句\n      slowQuery: true  #是否记录慢查询到数据库中\n      slowTime: 1000 #慢查询最短时间,默认为1000毫秒\n  redis:\n    host: 120.79.69.201\n    port: 7379\n    password: 12345678\n    \n# 取消mysql的健康检查   \nmanagement:\n  health:\n    db:\n      enabled: false\n\n# seata配置\nseata:\n  # 默认关闭，如需启用spring.datasource.dynami.seata需要同时开启\n  enabled: false\n  # Seata 应用编号，默认为 ${spring.application.name}\n  application-id: ${spring.application.name}\n  # Seata 事务组编号，用于 TC 集群名\n  tx-service-group: ${spring.application.name}-group\n  # 关闭自动代理\n  enable-auto-data-source-proxy: false\n  # 服务配置项\n  service:\n    # 虚拟组和分组的映射\n    vgroup-mapping:\n      ruoyi-system-group: default\n  config:\n    type: nacos\n    nacos:\n      serverAddr: 127.0.0.1:8848\n      group: SEATA_GROUP\n      namespace:\n  registry:\n    type: nacos\n    nacos:\n      application: seata-server\n      server-addr: 127.0.0.1:8848\n      namespace:\n\n# swagger配置\nswagger:\n  title: 系统模块接口文档\n  license: Powered By ruoyi\n  licenseUrl: https://ruoyi.vip', '8a31338cd3d488d2baf9599b1d2c6939', '2023-03-23 05:38:17', '2023-03-23 05:38:17', NULL, '192.168.3.1', '', '', NULL, NULL, NULL, 'yaml', NULL, ''),
	(21, 'ruoyi-job-prod.yml', 'DEFAULT_GROUP', '# spring配置\nspring: \n  redis:\n    database: 1\n    cluster:\n      #设置key的生存时间，当key过期时，它会被自动删除；\n      expire-seconds: 120\n      #设置命令的执行时间，如果超过这个时间，则报错;\n      command-timeout: 5000\n      #设置最大重试次数，如果超过这个次数，则报错\n      max-redirects: 3\n      #设置redis集群的节点信息，其中namenode为域名解析，通过解析域名来获取相应的地址;\n      nodes: 192.168.88.129:7000,192.168.88.129:7001,192.168.88.130:7000,192.168.88.130:7001,192.168.88.131:7000,192.168.88.131:7001\n    password: 12345678\n    timeout: 6000ms  # 连接超时时长（毫秒）\n    lettuce:\n      pool:\n        max-active: 1000  # 连接池最大连接数（使用负值表示没有限制）\n        max-wait: -1ms      # 连接池最大阻塞等待时间（使用负值表示没有限制）\n        max-idle: 10      # 连接池中的最大空闲连接\n        min-idle: 5       # 连接池中的最小空闲连接\n  datasource:\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://192.168.88.129:3306/ry-cloud?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8\n    username: root\n    password: 12345678\n\n# mybatis配置\nmybatis:\n    # 搜索指定包别名\n    typeAliasesPackage: com.ruoyi.job.domain\n    # 配置mapper的扫描，找到所有的mapper.xml映射文件\n    mapperLocations: classpath:mapper/**/*.xml\n\n# swagger配置\nswagger:\n  title: 定时任务接口文档\n  license: Powered By ruoyi\n  licenseUrl: https://ruoyi.vip\n', 'c69fe54c1fa7f010cdbca00bccb5ba39', '2023-03-23 05:38:17', '2023-03-23 05:38:17', NULL, '192.168.3.1', '', '', NULL, NULL, NULL, 'yaml', NULL, ''),
	(22, 'ruoyi-job-test.yml', 'DEFAULT_GROUP', '# spring配置\nspring: \n  redis:\n    host: 120.79.69.201\n    port: 7379\n    password: 12345678\n  datasource:\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://120.79.69.201:3306/ry-cloud?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8\n    username: root\n    password: 12345678\n\n# mybatis配置\nmybatis:\n    # 搜索指定包别名\n    typeAliasesPackage: com.ruoyi.job.domain\n    # 配置mapper的扫描，找到所有的mapper.xml映射文件\n    mapperLocations: classpath:mapper/**/*.xml\n\n# swagger配置\nswagger:\n  title: 定时任务接口文档\n  license: Powered By ruoyi\n  licenseUrl: https://ruoyi.vip\n', '27945e65efc129c150cecbcf2fa17680', '2023-03-23 05:38:17', '2023-03-23 05:38:17', NULL, '192.168.3.1', '', '', NULL, NULL, NULL, 'yaml', NULL, ''),
	(23, 'ruoyi-monitor-prod.yml', 'DEFAULT_GROUP', '# spring\r\nspring: \r\n  security:\r\n    user:\r\n      name: ruoyi\r\n      password: 123456\r\n  boot:\r\n    admin:\r\n      ui:\r\n        title: 若依服务状态监控\r\n', 'd8997d0707a2fd5d9fc4e8409da38129', '2023-03-23 05:38:17', '2023-03-23 05:38:17', NULL, '192.168.3.1', '', '', NULL, NULL, NULL, 'yaml', NULL, ''),
	(24, 'ruoyi-monitor-test.yml', 'DEFAULT_GROUP', '# spring\r\nspring: \r\n  security:\r\n    user:\r\n      name: ruoyi\r\n      password: 123456\r\n  boot:\r\n    admin:\r\n      ui:\r\n        title: 若依服务状态监控\r\n', 'd8997d0707a2fd5d9fc4e8409da38129', '2023-03-23 05:38:17', '2023-03-23 05:38:17', NULL, '192.168.3.1', '', '', NULL, NULL, NULL, 'yaml', NULL, ''),
	(25, 'ruoyi-system-prod.yml', 'DEFAULT_GROUP', '# spring配置\nspring: \n  redis:\n    database: 1\n    cluster:\n      #设置key的生存时间，当key过期时，它会被自动删除；\n      expire-seconds: 120\n      #设置命令的执行时间，如果超过这个时间，则报错;\n      command-timeout: 5000\n      #设置最大重试次数，如果超过这个次数，则报错\n      max-redirects: 3\n      #设置redis集群的节点信息，其中namenode为域名解析，通过解析域名来获取相应的地址;\n      nodes: 192.168.88.129:7000,192.168.88.129:7001,192.168.88.130:7000,192.168.88.130:7001,192.168.88.131:7000,192.168.88.131:7001\n    password: 12345678\n    timeout: 6000ms  # 连接超时时长（毫秒）\n    lettuce:\n      pool:\n        max-active: 1000  # 连接池最大连接数（使用负值表示没有限制）\n        max-wait: -1ms      # 连接池最大阻塞等待时间（使用负值表示没有限制）\n        max-idle: 10      # 连接池中的最大空闲连接\n        min-idle: 5       # 连接池中的最小空闲连接\n  datasource:\n    druid:\n      stat-view-servlet:\n        enabled: true\n        loginUsername: admin\n        loginPassword: 123456\n    dynamic:\n      druid:\n        initial-size: 5\n        min-idle: 5\n        maxActive: 20\n        maxWait: 60000\n        timeBetweenEvictionRunsMillis: 60000\n        minEvictableIdleTimeMillis: 300000\n        validationQuery: SELECT 1 FROM DUAL\n        testWhileIdle: true\n        testOnBorrow: false\n        testOnReturn: false\n        poolPreparedStatements: true\n        maxPoolPreparedStatementPerConnectionSize: 20\n        filters: stat,slf4j\n        connectionProperties: druid.stat.mergeSql\\=true;druid.stat.slowSqlMillis\\=5000\n      datasource:\n          # 主库数据源\n          master:\n            driver-class-name: com.mysql.cj.jdbc.Driver\n            url: jdbc:mysql://192.168.88.129:3306/ry-cloud?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8\n            username: root\n            password: 12345678\n          # 从库数据源\n          # slave:\n            # username: \n            # password: \n            # url: \n            # driver-class-name: \n      # seata: true    # 开启seata代理，开启后默认每个数据源都代理，如果某个不需要代理可单独关闭\n\n# seata配置\nseata:\n  # 默认关闭，如需启用spring.datasource.dynami.seata需要同时开启\n  enabled: false\n  # Seata 应用编号，默认为 ${spring.application.name}\n  application-id: ${spring.application.name}\n  # Seata 事务组编号，用于 TC 集群名\n  tx-service-group: ${spring.application.name}-group\n  # 关闭自动代理\n  enable-auto-data-source-proxy: false\n  # 服务配置项\n  service:\n    # 虚拟组和分组的映射\n    vgroup-mapping:\n      ruoyi-system-group: default\n  config:\n    type: nacos\n    nacos:\n      serverAddr: 127.0.0.1:8848\n      group: SEATA_GROUP\n      namespace:\n  registry:\n    type: nacos\n    nacos:\n      application: seata-server\n      server-addr: 127.0.0.1:8848\n      namespace:\n\n# mybatis配置\nmybatis:\n    # 搜索指定包别名\n    typeAliasesPackage: com.ruoyi.system\n    # 配置mapper的扫描，找到所有的mapper.xml映射文件\n    mapperLocations: classpath:mapper/**/*.xml\n\n# swagger配置\nswagger:\n  title: 系统模块接口文档\n  license: Powered By ruoyi\n  licenseUrl: https://ruoyi.vip', '8ec99df77f1c70e7720aeac4e0aafff3', '2023-03-23 05:38:17', '2023-03-23 05:38:17', NULL, '192.168.3.1', '', '', NULL, NULL, NULL, 'yaml', NULL, ''),
	(26, 'ruoyi-system-test.yml', 'DEFAULT_GROUP', '# spring配置\nspring: \n  redis:\n    host: 120.79.69.201\n    port: 7379\n    password: 12345678\n  datasource:\n    druid:\n      stat-view-servlet:\n        enabled: true\n        loginUsername: admin\n        loginPassword: 123456\n    dynamic:\n      druid:\n        initial-size: 5\n        min-idle: 5\n        maxActive: 20\n        maxWait: 60000\n        timeBetweenEvictionRunsMillis: 60000\n        minEvictableIdleTimeMillis: 300000\n        validationQuery: SELECT 1 FROM DUAL\n        testWhileIdle: true\n        testOnBorrow: false\n        testOnReturn: false\n        poolPreparedStatements: true\n        maxPoolPreparedStatementPerConnectionSize: 20\n        filters: stat,slf4j\n        connectionProperties: druid.stat.mergeSql\\=true;druid.stat.slowSqlMillis\\=5000\n      datasource:\n          # 主库数据源\n          master:\n            driver-class-name: com.mysql.cj.jdbc.Driver\n            url: jdbc:mysql://120.79.69.201:3306/ry-cloud?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8\n            username: root\n            password: 12345678\n          # 从库数据源\n          # slave:\n            # username: \n            # password: \n            # url: \n            # driver-class-name: \n      # seata: true    # 开启seata代理，开启后默认每个数据源都代理，如果某个不需要代理可单独关闭\n\n# seata配置\nseata:\n  # 默认关闭，如需启用spring.datasource.dynami.seata需要同时开启\n  enabled: false\n  # Seata 应用编号，默认为 ${spring.application.name}\n  application-id: ${spring.application.name}\n  # Seata 事务组编号，用于 TC 集群名\n  tx-service-group: ${spring.application.name}-group\n  # 关闭自动代理\n  enable-auto-data-source-proxy: false\n  # 服务配置项\n  service:\n    # 虚拟组和分组的映射\n    vgroup-mapping:\n      ruoyi-system-group: default\n  config:\n    type: nacos\n    nacos:\n      serverAddr: 127.0.0.1:8848\n      group: SEATA_GROUP\n      namespace:\n  registry:\n    type: nacos\n    nacos:\n      application: seata-server\n      server-addr: 127.0.0.1:8848\n      namespace:\n\n# mybatis配置\nmybatis:\n    # 搜索指定包别名\n    typeAliasesPackage: com.ruoyi.system\n    # 配置mapper的扫描，找到所有的mapper.xml映射文件\n    mapperLocations: classpath:mapper/**/*.xml\n\n# swagger配置\nswagger:\n  title: 系统模块接口文档\n  license: Powered By ruoyi\n  licenseUrl: https://ruoyi.vip', 'df0ec41109a379e6f6d0ad8d0a82e92d', '2023-03-23 05:38:17', '2023-03-23 05:38:17', NULL, '192.168.3.1', '', '', NULL, NULL, NULL, 'yaml', NULL, ''),
	(27, 'ruoyi-pubauth-test.yml', 'DEFAULT_GROUP', '# spring配置\nspring: \n  data:\n    mongodb:\n      uri: mongodb://admin:12345678@120.25.241.120:27000/demo?connect=replicaSet&replSetName=configsvr&authSource=demo&safe=true&slaveOk=true\n      print: true  #是否打印查询语句\n      slowQuery: true  #是否记录慢查询到数据库中\n      slowTime: 1000 #慢查询最短时间,默认为1000毫秒\n  redis:\n    host: 120.79.69.201\n    port: 7379\n    password: 12345678\n    \n# 取消mysql的健康检查   \nmanagement:\n  health:\n    db:\n      enabled: false\n# 预定义的公网接入一级用户\nsysusers: \'[{"userId":100,"userName":"手机用户A"},{"userId":1,"userName":"admin1"}]\'\n\n# seata配置\nseata:\n  # 默认关闭，如需启用spring.datasource.dynami.seata需要同时开启\n  enabled: false\n  # Seata 应用编号，默认为 ${spring.application.name}\n  application-id: ${spring.application.name}\n  # Seata 事务组编号，用于 TC 集群名\n  tx-service-group: ${spring.application.name}-group\n  # 关闭自动代理\n  enable-auto-data-source-proxy: false\n  # 服务配置项\n  service:\n    # 虚拟组和分组的映射\n    vgroup-mapping:\n      ruoyi-system-group: default\n  config:\n    type: nacos\n    nacos:\n      serverAddr: 127.0.0.1:8848\n      group: SEATA_GROUP\n      namespace:\n  registry:\n    type: nacos\n    nacos:\n      application: seata-server\n      server-addr: 127.0.0.1:8848\n      namespace:\n\n# swagger配置\nswagger:\n  title: 系统模块接口文档\n  license: Powered By ruoyi\n  licenseUrl: https://ruoyi.vip', '0726c3109c222ff674f1513abf7c4356', '2023-03-23 05:38:17', '2023-03-23 05:38:17', NULL, '192.168.3.1', '', '', NULL, NULL, NULL, 'yaml', NULL, ''),
	(72, 'fox-repository-service-dev.yml', 'DEFAULT_GROUP', '# spring配置\nspring: \n  redis:\n    host: 192.168.3.133\n    port: 6379\n    password: 12345678\n  datasource:\n    druid:\n      stat-view-servlet:\n        enabled: true\n        loginUsername: admin\n        loginPassword: 123456\n    dynamic:\n      druid:\n        initial-size: 5\n        min-idle: 5\n        maxActive: 20\n        maxWait: 60000\n        timeBetweenEvictionRunsMillis: 60000\n        minEvictableIdleTimeMillis: 300000\n        validationQuery: SELECT 1 FROM DUAL\n        testWhileIdle: true\n        testOnBorrow: false\n        testOnReturn: false\n        poolPreparedStatements: true\n        maxPoolPreparedStatementPerConnectionSize: 20\n        filters: stat,slf4j\n        connectionProperties: druid.stat.mergeSql\\=true;druid.stat.slowSqlMillis\\=5000\n      datasource:\n          # 主库数据源\n          master:\n            driver-class-name: com.mysql.cj.jdbc.Driver\n            url: jdbc:mysql://192.168.3.133:3306/ry-cloud?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8\n            username: ry-cloud\n            password: 12345678\n          # 从库数据源\n          # slave:\n            # username: \n            # password: \n            # url: \n            # driver-class-name: \n      # seata: true    # 开启seata代理，开启后默认每个数据源都代理，如果某个不需要代理可单独关闭\n\n# seata配置\nseata:\n  # 默认关闭，如需启用spring.datasource.dynami.seata需要同时开启\n  enabled: false\n  # Seata 应用编号，默认为 ${spring.application.name}\n  application-id: ${spring.application.name}\n  # Seata 事务组编号，用于 TC 集群名\n  tx-service-group: ${spring.application.name}-group\n  # 关闭自动代理\n  enable-auto-data-source-proxy: false\n  # 服务配置项\n  service:\n    # 虚拟组和分组的映射\n    vgroup-mapping:\n      ruoyi-system-group: default\n  config:\n    type: nacos\n    nacos:\n      serverAddr: 192.168.3.133:8848\n      group: SEATA_GROUP\n      namespace:\n  registry:\n    type: nacos\n    nacos:\n      application: seata-server\n      server-addr: 192.168.3.133:8848\n      namespace:\n\n# mybatis配置\nmybatis:\n    # 搜索指定包别名\n    typeAliasesPackage: fox-repository-service\n    # 配置mapper的扫描，找到所有的mapper.xml映射文件\n    mapperLocations: classpath:mapper/**/*.xml\n\n# swagger配置\nswagger:\n  title: 系统模块接口文档\n  license: Powered By ruoyi\n  licenseUrl: https://ruoyi.vip', 'b645810b88466122a9648b1009932427', '2023-03-26 13:16:49', '2023-03-26 13:17:33', 'nacos', '192.168.3.1', '', '', '', '', '', 'yaml', '', ''),
	(77, 'fox-cloud-server-aggregator-service-dev.yml', 'DEFAULT_GROUP', '# spring配置\nspring: \n  redis:\n    host: 192.168.1.21\n    port: 6379\n    password: 12345678\n    \n  session:\n    store-type: mongodb\n  devtools:\n    restart:\n      enabled: false\n  jackson:\n    default-property-inclusion: NON_NULL\n  jmx:\n    enabled: true\n  data:\n    mongodb:\n      #公网的IP\n      uri:  mongodb://admin:12345678@192.168.1.21/fox-cloud-server-aggregator?connect=replicaSet&replSetName=configsvr&authSource=fox-cloud-server-aggregator&safe=true&slaveOk=true\n      print : true\n      slowQuery : true  #是否记录慢查询到数据库中\n      slowTime : 2000 #慢查询最短时间,默认为1000毫秒\n\nmqtt:\n  enabled: true               # 是否开启客户端，默认：true\n  ip: 39.108.137.38           # 连接的服务端 ip ，默认：127.0.0.1\n  port: 1883                  # 端口：默认：1883\n  name: Mica-Mqtt-Client      # 名称，默认：Mica-Mqtt-Client\n  clientId: 000001            # 客户端Id（非常重要，一般为设备 sn，不可重复）\n  user-name: mica             # 认证的用户名\n  password: 123456            # 认证的密码\n  timeout: 5                  # 超时时间，单位：秒，默认：5秒\n  reconnect: true             # 是否重连，默认：true\n  re-interval: 5000           # 重连时间，默认 5000 毫秒\n  version: mqtt_3_1_1         # mqtt 协议版本，可选 MQTT_3_1、mqtt_3_1_1、mqtt_5，默认：mqtt_3_1_1\n  read-buffer-size: 8KB       # 接收数据的 buffer size，默认：8k\n  max-bytes-in-message: 10MB  # 消息解析最大 bytes 长度，默认：10M\n  buffer-allocator: heap      # 堆内存和堆外内存，默认：堆内存\n  keep-alive-secs: 60         # keep-alive 时间，单位：秒\n  clean-session: true         # mqtt clean session，默认：true\n  use-ssl: false              # 是否启用 ssl，默认：false\n  topic: # 上位机的接收响应topic：设备会把数据写入这个位置，其中#是设备的ID，MqttClient可以订阅这个消息\n    subscribe: "/fox/proxy/e2c/aggregate"\n\n    # 设备的接收请求topic：设备模在这个位置等待消息，其中#是设备的ID，MqttClient可以把对设备的请求发布到这个位置\n    publish: "/fox/proxy/c2e/{edgeId}/aggregate"', '15c1a25c8352fc7cb788d5eb60d96267', '2023-05-19 13:55:24', '2023-11-23 12:22:19', 'nacos', '192.168.1.8', '', '', '', '', '', 'yaml', '', ''),
	(90, 'fox-cloud-server-scheduler-service-dev.yml', 'DEFAULT_GROUP', '# spring配置\nspring: \n  redis:\n    host: localhost\n    port: 6379\n    password: 12345678\n  datasource:\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://192.168.3.133:3306/ry-cloud?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8\n    username: ry-cloud\n    password: 12345678\n\n# mybatis配置\nmybatis:\n    # 搜索指定包别名\n    typeAliasesPackage: com.ruoyi.job.domain\n    # 配置mapper的扫描，找到所有的mapper.xml映射文件\n    mapperLocations: classpath:/**/*.xml\n\n# swagger配置\nswagger:\n  title: 定时任务接口文档\n  license: Powered By ruoyi\n  licenseUrl: https://ruoyi.vip\n', '67694b223afcc880ac1144d0bef1599e', '2023-05-21 09:41:32', '2023-05-22 10:15:43', 'nacos', '192.168.3.1', '', '', '', '', '', 'yaml', '', ''),
	(153, 'fox-cloud-server-service-dev.yml', 'DEFAULT_GROUP', '# spring配置\nspring: \n  redis:\n    host: 192.168.1.21\n    port: 6379\n    password: 12345678\n  datasource:\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://192.168.1.21:3306/ry-cloud?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8\n    username: ry-cloud\n    password: 12345678\n  \n  #文件上传大小限制\n  servlet:\n    multipart:\n      max-file-size: 100MB\n      max-request-size: 1000MB\n\n  #mongodb的配置\n  session:\n    store-type: mongodb\n  devtools:\n    restart:\n      enabled: false\n  jackson:\n    default-property-inclusion: NON_NULL\n  jmx:\n    enabled: true\n  data:\n    mongodb:\n      #公网的IP\n      uri:  mongodb://admin:12345678@192.168.1.21/fox-cloud-server-aggregator?connect=replicaSet&replSetName=configsvr&authSource=fox-cloud-server-aggregator&safe=true&slaveOk=true\n      print : true\n      slowQuery : true  #是否记录慢查询到数据库中\n      slowTime : 2000 #慢查询最短时间,默认为1000毫秒\n      \n# mybatis配置\nmybatis:\n    # 搜索指定包别名\n    typeAliasesPackage: fox-cloud-server-service\n    # 配置mapper的扫描，找到所有的mapper.xml映射文件\n    mapperLocations: classpath:mapper/**/*.xml\n\n# 应用配置\nmanager:\n  repository: \n    repoCompService:\n      verifyRepoCompVerEntity: false\n', '0d14861729fda3ff39fe77c9752c34b0', '2023-11-23 12:59:19', '2023-11-23 13:00:08', 'nacos', '192.168.1.8', '', '', '', '', '', 'yaml', '', '');

-- 导出  表 nacos.config_info_aggr 结构
DROP TABLE IF EXISTS `config_info_aggr`;
CREATE TABLE IF NOT EXISTS `config_info_aggr` (
  `id` bigint NOT NULL AUTO_INCREMENT COMMENT 'id',
  `data_id` varchar(255) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(255) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT 'group_id',
  `datum_id` varchar(255) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT 'datum_id',
  `content` longtext CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT '内容',
  `gmt_modified` datetime NOT NULL COMMENT '修改时间',
  `app_name` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin DEFAULT NULL,
  `tenant_id` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin DEFAULT '' COMMENT '租户字段',
  PRIMARY KEY (`id`),
  UNIQUE KEY `uk_configinfoaggr_datagrouptenantdatum` (`data_id`,`group_id`,`tenant_id`,`datum_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3 COLLATE=utf8mb3_bin COMMENT='增加租户字段';

-- 正在导出表  nacos.config_info_aggr 的数据：~0 rows (大约)
DELETE FROM `config_info_aggr`;

-- 导出  表 nacos.config_info_beta 结构
DROP TABLE IF EXISTS `config_info_beta`;
CREATE TABLE IF NOT EXISTS `config_info_beta` (
  `id` bigint NOT NULL AUTO_INCREMENT COMMENT 'id',
  `data_id` varchar(255) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT 'group_id',
  `app_name` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin DEFAULT NULL COMMENT 'app_name',
  `content` longtext CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT 'content',
  `beta_ips` varchar(1024) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin DEFAULT NULL COMMENT 'betaIps',
  `md5` varchar(32) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin DEFAULT NULL COMMENT 'md5',
  `gmt_create` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `gmt_modified` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '修改时间',
  `src_user` text CHARACTER SET utf8mb3 COLLATE utf8mb3_bin COMMENT 'source user',
  `src_ip` varchar(50) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin DEFAULT NULL COMMENT 'source ip',
  `tenant_id` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin DEFAULT '' COMMENT '租户字段',
  `encrypted_data_key` text CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT '秘钥',
  PRIMARY KEY (`id`),
  UNIQUE KEY `uk_configinfobeta_datagrouptenant` (`data_id`,`group_id`,`tenant_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3 COLLATE=utf8mb3_bin COMMENT='config_info_beta';

-- 正在导出表  nacos.config_info_beta 的数据：~0 rows (大约)
DELETE FROM `config_info_beta`;

-- 导出  表 nacos.config_info_tag 结构
DROP TABLE IF EXISTS `config_info_tag`;
CREATE TABLE IF NOT EXISTS `config_info_tag` (
  `id` bigint NOT NULL AUTO_INCREMENT COMMENT 'id',
  `data_id` varchar(255) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT 'group_id',
  `tenant_id` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin DEFAULT '' COMMENT 'tenant_id',
  `tag_id` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT 'tag_id',
  `app_name` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin DEFAULT NULL COMMENT 'app_name',
  `content` longtext CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT 'content',
  `md5` varchar(32) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin DEFAULT NULL COMMENT 'md5',
  `gmt_create` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `gmt_modified` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '修改时间',
  `src_user` text CHARACTER SET utf8mb3 COLLATE utf8mb3_bin COMMENT 'source user',
  `src_ip` varchar(50) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin DEFAULT NULL COMMENT 'source ip',
  PRIMARY KEY (`id`),
  UNIQUE KEY `uk_configinfotag_datagrouptenanttag` (`data_id`,`group_id`,`tenant_id`,`tag_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3 COLLATE=utf8mb3_bin COMMENT='config_info_tag';

-- 正在导出表  nacos.config_info_tag 的数据：~0 rows (大约)
DELETE FROM `config_info_tag`;

-- 导出  表 nacos.config_tags_relation 结构
DROP TABLE IF EXISTS `config_tags_relation`;
CREATE TABLE IF NOT EXISTS `config_tags_relation` (
  `id` bigint NOT NULL COMMENT 'id',
  `tag_name` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT 'tag_name',
  `tag_type` varchar(64) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin DEFAULT NULL COMMENT 'tag_type',
  `data_id` varchar(255) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT 'group_id',
  `tenant_id` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin DEFAULT '' COMMENT 'tenant_id',
  `nid` bigint NOT NULL AUTO_INCREMENT,
  PRIMARY KEY (`nid`),
  UNIQUE KEY `uk_configtagrelation_configidtag` (`id`,`tag_name`,`tag_type`),
  KEY `idx_tenant_id` (`tenant_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3 COLLATE=utf8mb3_bin COMMENT='config_tag_relation';

-- 正在导出表  nacos.config_tags_relation 的数据：~0 rows (大约)
DELETE FROM `config_tags_relation`;

-- 导出  表 nacos.group_capacity 结构
DROP TABLE IF EXISTS `group_capacity`;
CREATE TABLE IF NOT EXISTS `group_capacity` (
  `id` bigint unsigned NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `group_id` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL DEFAULT '' COMMENT 'Group ID，空字符表示整个集群',
  `quota` int unsigned NOT NULL DEFAULT '0' COMMENT '配额，0表示使用默认值',
  `usage` int unsigned NOT NULL DEFAULT '0' COMMENT '使用量',
  `max_size` int unsigned NOT NULL DEFAULT '0' COMMENT '单个配置大小上限，单位为字节，0表示使用默认值',
  `max_aggr_count` int unsigned NOT NULL DEFAULT '0' COMMENT '聚合子配置最大个数，，0表示使用默认值',
  `max_aggr_size` int unsigned NOT NULL DEFAULT '0' COMMENT '单个聚合数据的子配置大小上限，单位为字节，0表示使用默认值',
  `max_history_count` int unsigned NOT NULL DEFAULT '0' COMMENT '最大变更历史数量',
  `gmt_create` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `gmt_modified` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '修改时间',
  PRIMARY KEY (`id`),
  UNIQUE KEY `uk_group_id` (`group_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3 COLLATE=utf8mb3_bin COMMENT='集群、各Group容量信息表';

-- 正在导出表  nacos.group_capacity 的数据：~0 rows (大约)
DELETE FROM `group_capacity`;

-- 导出  表 nacos.his_config_info 结构
DROP TABLE IF EXISTS `his_config_info`;
CREATE TABLE IF NOT EXISTS `his_config_info` (
  `id` bigint unsigned NOT NULL,
  `nid` bigint unsigned NOT NULL AUTO_INCREMENT,
  `data_id` varchar(255) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL,
  `group_id` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL,
  `app_name` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin DEFAULT NULL COMMENT 'app_name',
  `content` longtext CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL,
  `md5` varchar(32) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin DEFAULT NULL,
  `gmt_create` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `gmt_modified` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `src_user` text CHARACTER SET utf8mb3 COLLATE utf8mb3_bin,
  `src_ip` varchar(50) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin DEFAULT NULL,
  `op_type` char(10) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin DEFAULT NULL,
  `tenant_id` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin DEFAULT '' COMMENT '租户字段',
  `encrypted_data_key` text CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT '秘钥',
  PRIMARY KEY (`nid`),
  KEY `idx_gmt_create` (`gmt_create`),
  KEY `idx_gmt_modified` (`gmt_modified`),
  KEY `idx_did` (`data_id`)
) ENGINE=InnoDB AUTO_INCREMENT=162 DEFAULT CHARSET=utf8mb3 COLLATE=utf8mb3_bin COMMENT='多租户改造';

-- 正在导出表  nacos.his_config_info 的数据：~7 rows (大约)
DELETE FROM `his_config_info`;
INSERT INTO `his_config_info` (`id`, `nid`, `data_id`, `group_id`, `app_name`, `content`, `md5`, `gmt_create`, `gmt_modified`, `src_user`, `src_ip`, `op_type`, `tenant_id`, `encrypted_data_key`) VALUES
	(87, 155, 'fox-cloud-server-manager-service-dev.yml', 'DEFAULT_GROUP', '', '# spring配置\nspring: \n  redis:\n    host: 192.168.3.131\n    port: 6379\n    password: 12345678\n  datasource:\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://192.168.3.131:3306/ry-cloud?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8\n    username: ry-cloud\n    password: 12345678\n  \n  #文件上传大小限制\n  servlet:\n    multipart:\n      max-file-size: 100MB\n      max-request-size: 1000MB\n\n  #mongodb的配置\n  session:\n    store-type: mongodb\n  devtools:\n    restart:\n      enabled: false\n  jackson:\n    default-property-inclusion: NON_NULL\n  jmx:\n    enabled: true\n  data:\n    mongodb:\n      #公网的IP\n      uri:  mongodb://admin:12345678@192.168.3.131/fox-cloud-server-aggregator?connect=replicaSet&replSetName=configsvr&authSource=fox-cloud-server-aggregator&safe=true&slaveOk=true\n      print : true\n      slowQuery : true  #是否记录慢查询到数据库中\n      slowTime : 2000 #慢查询最短时间,默认为1000毫秒\n      \n# mybatis配置\nmybatis:\n    # 搜索指定包别名\n    typeAliasesPackage: fox-cloud-server-manager-service\n    # 配置mapper的扫描，找到所有的mapper.xml映射文件\n    mapperLocations: classpath:mapper/**/*.xml\n\n# 应用配置\nmanager:\n  repository: \n    repoCompService:\n      verifyRepoCompVerEntity: false\n', 'fd860fcbbccf28ba58e07efd00705d52', '2023-11-23 12:21:54', '2023-11-23 12:21:54', 'nacos', '192.168.1.8', 'U', '', ''),
	(77, 156, 'fox-cloud-server-aggregator-service-dev.yml', 'DEFAULT_GROUP', '', '# spring配置\nspring: \n  redis:\n    host: 192.168.3.131\n    port: 6379\n    password: 12345678\n    \n  session:\n    store-type: mongodb\n  devtools:\n    restart:\n      enabled: false\n  jackson:\n    default-property-inclusion: NON_NULL\n  jmx:\n    enabled: true\n  data:\n    mongodb:\n      #公网的IP\n      uri:  mongodb://admin:12345678@192.168.3.131/fox-cloud-server-aggregator?connect=replicaSet&replSetName=configsvr&authSource=fox-cloud-server-aggregator&safe=true&slaveOk=true\n      print : true\n      slowQuery : true  #是否记录慢查询到数据库中\n      slowTime : 2000 #慢查询最短时间,默认为1000毫秒\n\nmqtt:\n  enabled: true               # 是否开启客户端，默认：true\n  ip: 39.108.137.38           # 连接的服务端 ip ，默认：127.0.0.1\n  port: 1883                  # 端口：默认：1883\n  name: Mica-Mqtt-Client      # 名称，默认：Mica-Mqtt-Client\n  clientId: 000001            # 客户端Id（非常重要，一般为设备 sn，不可重复）\n  user-name: mica             # 认证的用户名\n  password: 123456            # 认证的密码\n  timeout: 5                  # 超时时间，单位：秒，默认：5秒\n  reconnect: true             # 是否重连，默认：true\n  re-interval: 5000           # 重连时间，默认 5000 毫秒\n  version: mqtt_3_1_1         # mqtt 协议版本，可选 MQTT_3_1、mqtt_3_1_1、mqtt_5，默认：mqtt_3_1_1\n  read-buffer-size: 8KB       # 接收数据的 buffer size，默认：8k\n  max-bytes-in-message: 10MB  # 消息解析最大 bytes 长度，默认：10M\n  buffer-allocator: heap      # 堆内存和堆外内存，默认：堆内存\n  keep-alive-secs: 60         # keep-alive 时间，单位：秒\n  clean-session: true         # mqtt clean session，默认：true\n  use-ssl: false              # 是否启用 ssl，默认：false\n  topic: # 上位机的接收响应topic：设备会把数据写入这个位置，其中#是设备的ID，MqttClient可以订阅这个消息\n    subscribe: "/fox/proxy/e2c/aggregate"\n\n    # 设备的接收请求topic：设备模在这个位置等待消息，其中#是设备的ID，MqttClient可以把对设备的请求发布到这个位置\n    publish: "/fox/proxy/c2e/{edgeId}/aggregate"', 'd1d728af3e7a0dc77f705197847b8849', '2023-11-23 12:22:18', '2023-11-23 12:22:19', 'nacos', '192.168.1.8', 'U', '', ''),
	(0, 157, 'fox-cloud-server-service-dev.yml', 'DEFAULT_GROUP', '', '# spring配置\nspring: \n  redis:\n    host: 192.168.1.21\n    port: 6379\n    password: 12345678\n  datasource:\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://192.168.1.21:3306/ry-cloud?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8\n    username: ry-cloud\n    password: 12345678\n  \n  #文件上传大小限制\n  servlet:\n    multipart:\n      max-file-size: 100MB\n      max-request-size: 1000MB\n\n  #mongodb的配置\n  session:\n    store-type: mongodb\n  devtools:\n    restart:\n      enabled: false\n  jackson:\n    default-property-inclusion: NON_NULL\n  jmx:\n    enabled: true\n  data:\n    mongodb:\n      #公网的IP\n      uri:  mongodb://admin:12345678@192.168.1.21/fox-cloud-server-aggregator?connect=replicaSet&replSetName=configsvr&authSource=fox-cloud-server-aggregator&safe=true&slaveOk=true\n      print : true\n      slowQuery : true  #是否记录慢查询到数据库中\n      slowTime : 2000 #慢查询最短时间,默认为1000毫秒\n      \n# mybatis配置\nmybatis:\n    # 搜索指定包别名\n    typeAliasesPackage: fox-cloud-server-manager-service\n    # 配置mapper的扫描，找到所有的mapper.xml映射文件\n    mapperLocations: classpath:mapper/**/*.xml\n\n# 应用配置\nmanager:\n  repository: \n    repoCompService:\n      verifyRepoCompVerEntity: false\n', '4272122238f5c355f3734e854f95eec9', '2023-11-23 12:59:19', '2023-11-23 12:59:19', NULL, '192.168.1.8', 'I', '', ''),
	(153, 158, 'fox-cloud-server-service-dev.yml', 'DEFAULT_GROUP', '', '# spring配置\nspring: \n  redis:\n    host: 192.168.1.21\n    port: 6379\n    password: 12345678\n  datasource:\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://192.168.1.21:3306/ry-cloud?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8\n    username: ry-cloud\n    password: 12345678\n  \n  #文件上传大小限制\n  servlet:\n    multipart:\n      max-file-size: 100MB\n      max-request-size: 1000MB\n\n  #mongodb的配置\n  session:\n    store-type: mongodb\n  devtools:\n    restart:\n      enabled: false\n  jackson:\n    default-property-inclusion: NON_NULL\n  jmx:\n    enabled: true\n  data:\n    mongodb:\n      #公网的IP\n      uri:  mongodb://admin:12345678@192.168.1.21/fox-cloud-server-aggregator?connect=replicaSet&replSetName=configsvr&authSource=fox-cloud-server-aggregator&safe=true&slaveOk=true\n      print : true\n      slowQuery : true  #是否记录慢查询到数据库中\n      slowTime : 2000 #慢查询最短时间,默认为1000毫秒\n      \n# mybatis配置\nmybatis:\n    # 搜索指定包别名\n    typeAliasesPackage: fox-cloud-server-manager-service\n    # 配置mapper的扫描，找到所有的mapper.xml映射文件\n    mapperLocations: classpath:mapper/**/*.xml\n\n# 应用配置\nmanager:\n  repository: \n    repoCompService:\n      verifyRepoCompVerEntity: false\n', '4272122238f5c355f3734e854f95eec9', '2023-11-23 13:00:07', '2023-11-23 13:00:08', 'nacos', '192.168.1.8', 'U', '', ''),
	(87, 159, 'fox-cloud-server-manager-service-dev.yml', 'DEFAULT_GROUP', '', '# spring配置\nspring: \n  redis:\n    host: 192.168.1.21\n    port: 6379\n    password: 12345678\n  datasource:\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://192.168.1.21:3306/ry-cloud?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8\n    username: ry-cloud\n    password: 12345678\n  \n  #文件上传大小限制\n  servlet:\n    multipart:\n      max-file-size: 100MB\n      max-request-size: 1000MB\n\n  #mongodb的配置\n  session:\n    store-type: mongodb\n  devtools:\n    restart:\n      enabled: false\n  jackson:\n    default-property-inclusion: NON_NULL\n  jmx:\n    enabled: true\n  data:\n    mongodb:\n      #公网的IP\n      uri:  mongodb://admin:12345678@192.168.1.21/fox-cloud-server-aggregator?connect=replicaSet&replSetName=configsvr&authSource=fox-cloud-server-aggregator&safe=true&slaveOk=true\n      print : true\n      slowQuery : true  #是否记录慢查询到数据库中\n      slowTime : 2000 #慢查询最短时间,默认为1000毫秒\n      \n# mybatis配置\nmybatis:\n    # 搜索指定包别名\n    typeAliasesPackage: fox-cloud-server-manager-service\n    # 配置mapper的扫描，找到所有的mapper.xml映射文件\n    mapperLocations: classpath:mapper/**/*.xml\n\n# 应用配置\nmanager:\n  repository: \n    repoCompService:\n      verifyRepoCompVerEntity: false\n', '4272122238f5c355f3734e854f95eec9', '2023-11-23 13:11:04', '2023-11-23 13:11:04', NULL, '192.168.1.8', 'D', '', ''),
	(2, 160, 'ruoyi-gateway-dev.yml', 'DEFAULT_GROUP', '', 'spring:\n  redis:\n    host: localhost\n    port: 6379\n    password: 12345678\n  cloud:\n    gateway:\n      discovery:\n        locator:\n          lowerCaseServiceId: true\n          enabled: true\n      routes:\n        # 认证中心\n        - id: ruoyi-auth\n          uri: lb://ruoyi-auth\n          predicates:\n            - Path=/auth/**\n          filters:\n            # 验证码处理\n            - CacheRequestFilter\n            - ValidateCodeFilter\n            - StripPrefix=1\n        # 代码生成\n        - id: ruoyi-gen\n          uri: lb://ruoyi-gen\n          predicates:\n            - Path=/code/**\n          filters:\n            - StripPrefix=1\n        # 定时任务\n        - id: ruoyi-job\n          uri: lb://ruoyi-job\n          predicates:\n            - Path=/schedule/**\n          filters:\n            - StripPrefix=1\n        # 系统模块\n        - id: ruoyi-system\n          uri: lb://ruoyi-system\n          predicates:\n            - Path=/system/**\n          filters:\n            - StripPrefix=1\n        # 文件服务\n        - id: ruoyi-file\n          uri: lb://ruoyi-file\n          predicates:\n            - Path=/file/**\n          filters:\n            - StripPrefix=1\n        # fox-repository-service模块\n        - id: fox-repository-service\n          uri: lb://fox-repository-service\n          predicates:\n            - Path=/repository/**\n          filters:\n            - StripPrefix=1\n        # fox-cloud-server-aggregator-service模块\n        - id: fox-cloud-server-aggregator-service\n          uri: lb://fox-cloud-server-aggregator-service\n          predicates:\n            - Path=/aggregator/**\n          filters:\n            - StripPrefix=1\n        # fox-cloud-server-manager-service模块\n        - id: fox-cloud-server-manager-service\n          uri: lb://fox-cloud-server-manager-service\n          predicates:\n            - Path=/manager/**\n          filters:\n            - StripPrefix=1\n\n# 安全配置\nsecurity:\n  # 验证码\n  captcha:\n    enabled: false\n    type: math\n  # 防止XSS攻击\n  xss:\n    enabled: true\n    excludeUrls:\n      - /system/notice\n  # 不校验白名单\n  ignore:\n    whites:\n      - /auth/logout\n      - /auth/login\n      - /auth/register\n      - /*/v2/api-docs\n      - /csrf\n      - /manager/social/**\n', '81ba008c7249b39dffe0de6d885cd676', '2023-11-23 13:14:31', '2023-11-23 13:14:31', 'nacos', '192.168.1.8', 'U', '', ''),
	(2, 161, 'ruoyi-gateway-dev.yml', 'DEFAULT_GROUP', '', 'spring:\n  redis:\n    host: localhost\n    port: 6379\n    password: 12345678\n  cloud:\n    gateway:\n      discovery:\n        locator:\n          lowerCaseServiceId: true\n          enabled: true\n      routes:\n        # 认证中心\n        - id: ruoyi-auth\n          uri: lb://ruoyi-auth\n          predicates:\n            - Path=/auth/**\n          filters:\n            # 验证码处理\n            - CacheRequestFilter\n            - ValidateCodeFilter\n            - StripPrefix=1\n        # 代码生成\n        - id: ruoyi-gen\n          uri: lb://ruoyi-gen\n          predicates:\n            - Path=/code/**\n          filters:\n            - StripPrefix=1\n        # 定时任务\n        - id: ruoyi-job\n          uri: lb://ruoyi-job\n          predicates:\n            - Path=/schedule/**\n          filters:\n            - StripPrefix=1\n        # 系统模块\n        - id: ruoyi-system\n          uri: lb://ruoyi-system\n          predicates:\n            - Path=/system/**\n          filters:\n            - StripPrefix=1\n        # 文件服务\n        - id: ruoyi-file\n          uri: lb://ruoyi-file\n          predicates:\n            - Path=/file/**\n          filters:\n            - StripPrefix=1\n        # fox-repository-service模块\n        - id: fox-repository-service\n          uri: lb://fox-repository-service\n          predicates:\n            - Path=/repository/**\n          filters:\n            - StripPrefix=1\n        # fox-cloud-server-aggregator-service模块\n        - id: fox-cloud-server-aggregator-service\n          uri: lb://fox-cloud-server-aggregator-service\n          predicates:\n            - Path=/aggregator/**\n          filters:\n            - StripPrefix=1\n        # fox-cloud-server-service模块\n        - id: fox-cloud-server-service\n          uri: lb://fox-cloud-server-service\n          predicates:\n            - Path=/manager/**\n          filters:\n            - StripPrefix=1\n\n# 安全配置\nsecurity:\n  # 验证码\n  captcha:\n    enabled: false\n    type: math\n  # 防止XSS攻击\n  xss:\n    enabled: true\n    excludeUrls:\n      - /system/notice\n  # 不校验白名单\n  ignore:\n    whites:\n      - /auth/logout\n      - /auth/login\n      - /auth/register\n      - /*/v2/api-docs\n      - /csrf\n      - /manager/social/**\n', '1bacc6868b009949402cdd9555163d21', '2023-12-21 22:29:40', '2023-12-21 22:29:41', 'nacos', '192.168.1.8', 'U', '', '');

-- 导出  表 nacos.permissions 结构
DROP TABLE IF EXISTS `permissions`;
CREATE TABLE IF NOT EXISTS `permissions` (
  `role` varchar(50) NOT NULL,
  `resource` varchar(255) NOT NULL,
  `action` varchar(8) NOT NULL,
  UNIQUE KEY `uk_role_permission` (`role`,`resource`,`action`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;

-- 正在导出表  nacos.permissions 的数据：~0 rows (大约)
DELETE FROM `permissions`;

-- 导出  表 nacos.roles 结构
DROP TABLE IF EXISTS `roles`;
CREATE TABLE IF NOT EXISTS `roles` (
  `username` varchar(50) NOT NULL,
  `role` varchar(50) NOT NULL,
  UNIQUE KEY `idx_user_role` (`username`,`role`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;

-- 正在导出表  nacos.roles 的数据：~0 rows (大约)
DELETE FROM `roles`;
INSERT INTO `roles` (`username`, `role`) VALUES
	('nacos', 'ROLE_ADMIN');

-- 导出  表 nacos.tenant_capacity 结构
DROP TABLE IF EXISTS `tenant_capacity`;
CREATE TABLE IF NOT EXISTS `tenant_capacity` (
  `id` bigint unsigned NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `tenant_id` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL DEFAULT '' COMMENT 'Tenant ID',
  `quota` int unsigned NOT NULL DEFAULT '0' COMMENT '配额，0表示使用默认值',
  `usage` int unsigned NOT NULL DEFAULT '0' COMMENT '使用量',
  `max_size` int unsigned NOT NULL DEFAULT '0' COMMENT '单个配置大小上限，单位为字节，0表示使用默认值',
  `max_aggr_count` int unsigned NOT NULL DEFAULT '0' COMMENT '聚合子配置最大个数',
  `max_aggr_size` int unsigned NOT NULL DEFAULT '0' COMMENT '单个聚合数据的子配置大小上限，单位为字节，0表示使用默认值',
  `max_history_count` int unsigned NOT NULL DEFAULT '0' COMMENT '最大变更历史数量',
  `gmt_create` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `gmt_modified` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '修改时间',
  PRIMARY KEY (`id`),
  UNIQUE KEY `uk_tenant_id` (`tenant_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3 COLLATE=utf8mb3_bin COMMENT='租户容量信息表';

-- 正在导出表  nacos.tenant_capacity 的数据：~0 rows (大约)
DELETE FROM `tenant_capacity`;

-- 导出  表 nacos.tenant_info 结构
DROP TABLE IF EXISTS `tenant_info`;
CREATE TABLE IF NOT EXISTS `tenant_info` (
  `id` bigint NOT NULL AUTO_INCREMENT COMMENT 'id',
  `kp` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin NOT NULL COMMENT 'kp',
  `tenant_id` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin DEFAULT '' COMMENT 'tenant_id',
  `tenant_name` varchar(128) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin DEFAULT '' COMMENT 'tenant_name',
  `tenant_desc` varchar(256) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin DEFAULT NULL COMMENT 'tenant_desc',
  `create_source` varchar(32) CHARACTER SET utf8mb3 COLLATE utf8mb3_bin DEFAULT NULL COMMENT 'create_source',
  `gmt_create` bigint NOT NULL COMMENT '创建时间',
  `gmt_modified` bigint NOT NULL COMMENT '修改时间',
  PRIMARY KEY (`id`),
  UNIQUE KEY `uk_tenant_info_kptenantid` (`kp`,`tenant_id`),
  KEY `idx_tenant_id` (`tenant_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3 COLLATE=utf8mb3_bin COMMENT='tenant_info';

-- 正在导出表  nacos.tenant_info 的数据：~0 rows (大约)
DELETE FROM `tenant_info`;

-- 导出  表 nacos.users 结构
DROP TABLE IF EXISTS `users`;
CREATE TABLE IF NOT EXISTS `users` (
  `username` varchar(50) NOT NULL,
  `password` varchar(500) NOT NULL,
  `enabled` tinyint(1) NOT NULL,
  PRIMARY KEY (`username`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb3;

-- 正在导出表  nacos.users 的数据：~0 rows (大约)
DELETE FROM `users`;
INSERT INTO `users` (`username`, `password`, `enabled`) VALUES
	('nacos', '$2a$10$EuWPZHzz32dJN7jexM34MOeYirDdFAZm2kuWj7VEOJhhZkDrxfvUu', 1);

/*!40103 SET TIME_ZONE=IFNULL(@OLD_TIME_ZONE, 'system') */;
/*!40101 SET SQL_MODE=IFNULL(@OLD_SQL_MODE, '') */;
/*!40014 SET FOREIGN_KEY_CHECKS=IFNULL(@OLD_FOREIGN_KEY_CHECKS, 1) */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40111 SET SQL_NOTES=IFNULL(@OLD_SQL_NOTES, 1) */;
