-- --------------------------------------------------------
-- 主机:                           192.168.1.23
-- 服务器版本:                        10.3.39-MariaDB-0ubuntu0.20.04.2 - Ubuntu 20.04
-- 服务器操作系统:                      debian-linux-gnu
-- HeidiSQL 版本:                  12.2.0.6576
-- --------------------------------------------------------

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET NAMES utf8 */;
/*!50503 SET NAMES utf8mb4 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

-- 正在导出表  fox_edge.tb_channel 的数据：~54 rows (大约)
DELETE FROM `tb_channel`;
INSERT INTO `tb_channel` (`id`, `channel_name`, `channel_type`, `channel_param`, `extend_param`, `create_time`, `update_time`) VALUES
	(12, 'COM3', 'serialport_linker', '{"parity": "E", "databits": 8, "stopbits": 1, "baud_rate": 2440, "serial_name": "COM3", "link-encoder": "omron-fins"}', '{}', 1651843479358, 1664597030402),
	(13, 'slaver1', 'omron-fins', '{"host": "127.0.0.1", "port": 2404}', '{}', 1651843479427, 1651843479427),
	(14, 'slaver1', 'iec104-master', '{"host": "192.168.1.3", "port": 2404}', '{}', 1651843479427, 1651843479427),
	(15, 'Win32 COM3', 'serialport', '{"parity": "E", "baudRate": 9600, "databits": 8, "stopbits": 1, "serialName": "COM3", "commTimeOuts": 0}', '{}', 1651843479358, 1695391815948),
	(16, 'channel-simulator', 'simulator', '{"clientNode": 113, "link-encoder": "omron-fins"}', '{}', 1651843479427, 1651843479427),
	(25, '127.0.0.1:502', 'tcpsocket', '{"host": "127.0.0.1", "port": 502}', '{}', 1651843479427, 1651843479427),
	(27, 'Win32 COM4', 'serialport', '{"parity": "E", "baudRate": 2440, "databits": 8, "stopbits": 1, "serialName": "COM4"}', '{}', 1664596586472, 1693545722731),
	(28, 'Win32 COM5', 'serialport', '{"parity": "E", "baudRate": 2440, "databits": 8, "stopbits": 1, "serialName": "COM5"}', '{}', 1664599290836, 1693545761302),
	(29, 'COM3', 'gdana-digester', '{"parity": "N", "databits": 8, "stopbits": 1, "baud_rate": 9600, "serial_name": "COM3"}', '{}', 1664600006938, 1664600006938),
	(34, '192.168.1.21', 'snmp', '{"version": "v2c", "targetIp": "192.168.1.21", "community": "public", "localPort": 162, "targetPort": 161}', '{}', 1676462581097, 1676521528835),
	(36, 'CJT188-01', 'simulator', '{}', '{}', 1677307627424, 1677307627424),
	(42, 'Linux COM1', 'serialport', '{"parity": "N", "baudRate": 9600, "databits": 8, "stopbits": 1, "fullDuplex": false, "serialName": "ttyUSB0", "packInterval": 100}', '{}', 1678193909465, 1700137155057),
	(43, 'Linux COM2', 'serialport', '{"parity": "E", "baudRate": 9600, "databits": 8, "stopbits": 1, "serialName": "ttyUSB2"}', '{}', 1678193922443, 1698040257677),
	(47, 'Win32 COM2', 'serialport', '{"parity": "E", "baudRate": 2440, "databits": 8, "stopbits": 1, "fullDuplex": false, "serialName": "COM2"}', '{}', 1678194302950, 1711687115892),
	(49, 'channel-opc-ua-1', 'opc-ua', '{"appUri": "urn:fox-edge:UnifiedAutomation:UaExpert@fox-edge", "appName": "fox-edge-OpcUaClient", "certificate": {"file": "fox-edge-client.pfx", "path": "", "alias": "fox-edge-ai", "dnsName": "fox-edge", "ipAddress": "192.168.1.9", "stateName": "GuangDong", "commonName": "UaClient@fox-edge", "countryCode": "CN", "localityName": "fox-edge", "organization": "fox-edge", "keystorePassword": "123456", "organizationUnit": "per"}, "endpointUrl": "opc.tcp://192.168.1.9:53530/OPCUA/SimulationServer", "idpPassword": "", "idpUsername": "fox-edge"}', '{}', 1688883035931, 1697513663855),
	(53, 'channel-opc-ua-2', 'opc-ua', '{"appUri": "urn:fox-edge:UnifiedAutomation:UaExpert@fox-edge", "appName": "fox-edge-OpcUaClient", "certificate": {"file": "fox-edge-client.pfx", "path": "", "alias": "fox-edge-ai", "dnsName": "fox-edge", "ipAddress": "192.168.1.9", "stateName": "GuangDong", "commonName": "UaClient@fox-edge", "countryCode": "CN", "localityName": "fox-edge", "organization": "fox-edge", "keystorePassword": "123456", "organizationUnit": "per"}, "endpointUrl": "opc.tcp://USER-20221006EY:53530/OPCUA/SimulationServer", "idpPassword": "", "idpUsername": "fox-edge"}', '{}', 1688959218011, 1697521358062),
	(54, '中科图灵空气六合一', 'tcp-server', '{"serviceKey": "air6in1=NB:六合一空气监测:867572058700527:89861121245014174191"}', '{}', 1694408169721, 1704978128285),
	(55, '中科图灵空气五合一', 'tcp-server', '{"serviceKey": "air5in1=NB:消火栓:867572058700527:89861121245014174191"}', '{}', 1694513985923, 1694514177729),
	(56, 'Udp空气六合一', 'udp-server', '{"serviceKey": "air6in1=NB:六合一空气监测:867572058700527:89861121245014174191"}', '{}', 1694695494607, 1694695633724),
	(59, '西门子-S7-PLC-1', 's7plc', '{"ip": "127.0.0.1", "port": 102, "rack": 0, "slot": 1, "plcType": "S1200"}', '{"remark": "S1202"}', 1696820977407, 1698317189089),
	(60, 'TCP-监听器', 'tcp-listener', '{"host": "127.0.0.1", "mode": "full-duplex", "port": 502, "handler": {"serviceKey": "air6in1=NB:六合一空气监测:867572058700527:89861121245014174191", "serviceKeyHandler": "cn.foxtech.device.protocol.v1.zktl.air6in1.handler.ZktlServiceKeyHandler", "splitMessageHandler": "cn.foxtech.device.protocol.v1.zktl.air6in1.handler.ZktlSplitMessageHandler"}}', '{}', 1699004885244, 1699071740936),
	(61, 'Tcp-Client', 'tcp-client', '{"host": "127.0.0.1", "mode": "half-duplex", "port": 501, "handler": {"splitMessageHandler": "cn.foxtech.device.protocol.v1.zktl.air6in1.handler.ZktlSplitMessageHandler"}}', '{}', 1699157634266, 1699527505521),
	(63, 'DOBOT-MG400-TCP', 'tcp-client', '{"host": "127.0.0.1", "port": 502}', '{}', 1699517478158, 1699517617071),
	(64, '配置范例：全双工TCP客户端', 'tcp-client', '{"host": "127.0.0.1", "mode": "full-duplex", "port": 503, "handler": {"splitMessageHandler": "cn.foxtech.device.protocol.v1.zktl.air6in1.handler.ZktlSplitMessageHandler"}}', '{}', 1699517794413, 1699527518230),
	(65, '配置范例：半双工TCP客户端', 'tcp-client', '{"host": "127.0.0.1", "port": 504}', '{}', 1699518150961, 1699527524426),
	(66, '范例：UDP空气五合一', 'udp-server', '{}', '{}', 1699710675333, 1699710675333),
	(68, 'channel-五合一LORAWAN', 'simulator', '{}', '{}', 1699713817457, 1699713817457),
	(69, '范例：MQTT客户端', 'mqtt-client', '{"topics": ["/v1/device/response/12345", "/v1/device/response/12346", "/v1/device/response/12347", "/v1/device/response/12348"]}', '{}', 1700039934213, 1700044702037),
	(71, '配置范例：半双工TCP客户端505', 'tcp-client', '{"host": "127.0.0.1", "port": 505}', '{}', 1701851689940, 1701851689940),
	(72, '配置范例：半双工TCP客户端506', 'tcp-client', '{"host": "127.0.0.1", "port": 506}', '{}', 1701851721571, 1701851721571),
	(73, 'JB-QB-GST9000', 'serialport-analyzer', '{"deviceType": "JB-QB-GST9000", "returnText": "GB2312", "manufacturer": "海湾安全技术有限公司", "splitHandler": "splitHandler"}', '{}', 1703216401149, 1703216423769),
	(80, '海康威视-F6380C000000', 'hikvision-fire', '{"serviceKey": "F6380C000000"}', '{}', 1705145325388, 1705145325388),
	(81, '范例：消防用水五合一（LoRaWan）', 'tcp-server', '{"serviceKey": "868591058136218"}', '{}', 1705313723808, 1705313741241),
	(82, '消防用水五合一-868591058136218', 'tcp-server', '{"serviceKey": "868591058136218"}', '{}', 1705315744482, 1705315744482),
	(83, 'HJ212-2017-81733553213013', 'tcp-server', '{"serviceKey": "81733553213013"}', '{}', 1705323898035, 1705323898035),
	(84, '范例：海湾JB-QB-GST200', 'serialport-analyzer', '{"deviceType":"JB-QB-GST200","returnText":"","manufacturer":"海湾安全技术有限公司","splitHandler":"splitHandler"}', '{}', 1712729870039, 1712732620264),
	(85, '范例：海湾JB-QB-GST1500H', 'serialport-analyzer', '{"deviceType":"JB-QB-GST1500H","returnText":"GB2312","manufacturer":"海湾安全技术有限公司","splitHandler":"splitHandler"}', '{}', 1712751115813, 1712751944066),
	(86, '范例：利达JB-QG-LD128E(Q)I', 'serialport-analyzer', '{"deviceType":"JB-QG-LD128E(Q)I","returnText":"GB2312","manufacturer":"北京利达华信电子有限公司","splitHandler":"splitHandler"}', '{}', 1712828288453, 1713083797256),
	(88, '范例：利达JB-QT-LD188EL', 'serialport-analyzer', '{"deviceType":"JB-QT-LD188EL","returnText":"GB2312","manufacturer":"北京利达华信电子有限公司","splitHandler":"splitHandler"}', '{}', 1712842869740, 1712842897522),
	(89, '范例：泰和安JB-QB-TX3001DY', 'serialport-analyzer', '{"deviceType":"JB-QB-TX3001DY","returnText":"GB2312","manufacturer":"泰和安消防科技有限公司","splitHandler":"splitHandler"}', '{}', 1712926672589, 1712926713192),
	(90, '范例：泰和安JB-TGL-TX3006C', 'serialport-analyzer', '{"deviceType":"JB-TGL-TX3006C","returnText":"","manufacturer":"泰和安消防科技有限公司","splitHandler":"splitHandler"}', '{}', 1712994466258, 1712997354076),
	(91, '范例：松江JB-3208G', 'serialport-analyzer', '{"deviceType":"JB-3208G","returnText":"","manufacturer":"上海松江飞繁电子有限公司","splitHandler":"splitHandler"}', '{}', 1713077980158, 1713078017506),
	(92, '范例：利达JB-QG-LD128E(Q)II', 'serialport-analyzer', '{"deviceType":"JB-QG-LD128E(Q)II","returnText":"GB2312","manufacturer":"北京利达华信电子有限公司","splitHandler":"splitHandler"}', '{}', 1713084094285, 1713084094285),
	(93, '范例：松江JB-3101G', 'serialport-analyzer', '{"deviceType":"JB-3101G","returnText":"","manufacturer":"上海松江飞繁电子有限公司","splitHandler":"splitHandler"}', '{}', 1713097041655, 1713166008177),
	(94, '范例：青鸟JB-TG-JBF-11S', 'serialport-analyzer', '{"deviceType":"JB-TG-JBF-11S","returnText":"","manufacturer":"青鸟消防股份有限公司","splitHandler":"splitHandler"}', '{}', 1713102342013, 1713166737531),
	(96, '范例：青鸟JB-QB-JBF-5010', 'serialport-analyzer', '{"deviceType":"JB-QB-JBF-5010","returnText":"","manufacturer":"青鸟消防股份有限公司","splitHandler":"splitHandler"}', '{}', 1713173028586, 1713173043298),
	(98, '范例：青鸟JB-QB-JBF-5009', 'serialport-analyzer', '{"deviceType":"JB-QB-JBF-5009","returnText":"GB2312","manufacturer":"青鸟消防股份有限公司","splitHandler":"splitHandler"}', '{}', 1713177367342, 1713177459315),
	(100, '范例：西门子JB-TBZL-FC720W', 'serialport-analyzer', '{"deviceType":"JB-TBZL-FC720W","returnText":"GB2312","manufacturer":"德国西门子股份有限公司","splitHandler":"splitHandler"}', '{}', 1713237124756, 1713237154900),
	(101, '范例：赋安JB-LTZ2-FS5116', 'serialport-analyzer', '{"deviceType":"JB-LTZ2-FS5116","returnText":"GB2312","manufacturer":"深圳市赋安安全系统有限公司","splitHandler":"splitHandler"}', '{}', 1713269693806, 1713269715905),
	(102, '范例：鼎信JB-QT-TS3200', 'serialport-analyzer', '{"deviceType":"JB-QT-TS3200","returnText":"","manufacturer":"青岛鼎信通讯消防安全有限公司","splitHandler":"splitHandler"}', '{}', 1713324226180, 1713324423628),
	(103, '范例：防威JB-QGZ2L-FW19000G', 'serialport-analyzer', '{"deviceType":"JB-QGZ2L-FW19000G","returnText":"","manufacturer":"北京防威威盛机电设备有限责任公司","splitHandler":"splitHandler"}', '{}', 1713354738818, 1713355027110),
	(104, '范例：闽安JB-TB-MASYS5000', 'serialport-analyzer', '{"deviceType":"JB-TB-MASYS5000","returnText":"GB2312","manufacturer":"福建闽安安全技术有限责任公司","splitHandler":"splitHandler"}', '{}', 1713362394265, 1713362437858),
	(105, '范例：海湾JB-QB-GST500', 'serialport-analyzer', '{"deviceType":"JB-QB-GST500","returnText":"","manufacturer":"海湾安全技术有限公司","splitHandler":"splitHandler"}', '{}', 1713451080980, 1713451095272),
	(107, '范例：依爱JB-TBL-EI8000S', 'serialport-analyzer', '{"deviceType":"JB-TBL-EI8000S","returnText":"GB2312","manufacturer":"蚌埠依爱消防电子有限责任公司","splitHandler":"splitHandler"}', '{}', 1713519476950, 1713519486814);

-- 正在导出表  fox_edge.tb_config 的数据：~36 rows (大约)
DELETE FROM `tb_config`;
INSERT INTO `tb_config` (`id`, `service_name`, `service_type`, `config_name`, `config_value`, `config_param`, `remark`, `create_time`, `update_time`) VALUES
	(4, 'manager-service', 'kernel', 'deviceTimeOutConfig', '{"period": 3600, "lifetime": 3600}', '{}', NULL, 1651828157634, 1671862740487),
	(24, 'manager-service', 'kernel', 'license_pc', '{"cpuid": "BFEBFBFF000906A3", "license": "RmVrRjQqtBpHvTOsyUfTfAmphDOv2CNS6r9lG3Z4q8JRqARX9IzZS0Y58fboEQJ45hclBhjnvbgM8ViWfhtWCDXH1/XUNQumaFHaZ2589Hb3OrckYxPS+WbsCu0tGQivewtG5TGQD7M3aAe7AVOO511srqkpT2UUNkUwbyTFD0w="}', '{}', NULL, 1676814243560, 1676815174891),
	(26, 'manager-service', 'kernel', 'license', '{"cpuid": "C3060400FFFBEBBF", "license": "gvd3oFIqC9fc2aY+Tv64ux077ux1/2Fi7ggMrgsG0kT/IJ2Rjy9r3IoDYVe2p3s5qsL72ofOKDXA1ztfGcgdnSK5XBgxJhNHy5xeX/MG1QS/Ed2gxVnVwCe9D29vBW6k/XWDHPGiad6ewpb7k1HXLSLK4n8ZmL+sgxXktnIKueI="}', '{}', 'Fox-Edge根据CPU ID生成为设备生成的license注册信息，用于制造商在销售时对用户进行注册管理。', 1676961316373, 1693635910797),
	(27, 'manager-service', 'kernel', 'license-21', '{"cpuid": "C3060400FFFBEBBF", "license": "gvd3oFIqC9fc2aY+Tv64ux077ux1/2Fi7ggMrgsG0kT/IJ2Rjy9r3IoDYVe2p3s5qsL72ofOKDXA1ztfGcgdnSK5XBgxJhNHy5xeX/MG1QS/Ed2gxVnVwCe9D29vBW6k/XWDHPGiad6ewpb7k1HXLSLK4n8ZmL+sgxXktnIKueI="}', '{}', NULL, 1676961316373, 1676983440222),
	(31, 'trigger-service', 'system', 'triggerConfig', '{"list": [{"load": true, "fileName": "fox-edge-server-trigger-logic-simple-trigger-1.0.0.jar", "createTime": 1676443539065, "updateTime": 1677247997603}]}', '{}', '触发器配置信息。这是管理服务的配置界面自动化生成的数据，不要去手动编辑，请通过配置界面来设置。\n\n"load": 是否启用该解码器,\n"fileName":  JAR包的文件名称,\n"createTime": 配置项的创建时间,\n"updateTime": 1配置项的修改时间,', 1677322318804, 1693635775206),
	(32, 'manager-service', 'kernel', 'serviceStartConfig', '{"services":[{"appLoad":false,"appName":"channel-proxy-server","appPort":9003,"appType":"service"},{"appLoad":false,"appName":"iot-thingsboard","appPort":9033,"appType":"service"},{"appLoad":false,"appName":"channel-coap-client-service","appPort":9019,"appType":"service"},{"appLoad":false,"appName":"channel-serialport","appPort":9014,"appType":"service"},{"appLoad":true,"appName":"channel-udpsocket-service","appPort":9017,"appType":"service"},{"appLoad":false,"appName":"channel-proxy-client","appPort":9009,"appType":"service"},{"appName":"channel-system","appPort":9037,"appType":"service"},{"appLoad":true,"appName":"channel-iec104-master","appPort":9025,"appType":"service"},{"appLoad":true,"appName":"channel-http-client-service.sh","appPort":9012,"appType":"service"},{"appLoad":false,"appName":"cloud-thingsboard-service","appPort":9031,"appType":"service"},{"appLoad":false,"appName":"channel-simulator-service","appPort":9001,"appType":"service"},{"appLoad":false,"appName":"trigger-service","appPort":9023,"appType":"service"},{"appLoad":false,"appName":"channel-udp-client","appPort":9016,"appType":"service"},{"appLoad":false,"appName":"channel-mqtt-client","appPort":9036,"appType":"service"},{"appName":"iot-whzktl","appPort":9039,"appType":"service"},{"appLoad":false,"appName":"proxy-cloud-service","appPort":9005,"appType":"service"},{"appLoad":true,"appName":"channel-tcp-server","appPort":9041,"appType":"service"},{"appLoad":false,"appName":"iot-thingspanel","appPort":9032,"appType":"service"},{"appLoad":false,"appName":"channel-opc-ua-service","appPort":9007,"appType":"service"},{"appLoad":false,"appName":"iot-huawei","appPort":9034,"appType":"service"},{"appLoad":true,"appName":"channel-hikvision-fire","appPort":9040,"appType":"service"},{"appLoad":true,"appName":"period-service","appPort":9011,"appType":"service"},{"appName":"channel-s7plc-client","appPort":9035,"appType":"service"},{"appLoad":false,"appName":"channel-tcp-client","appPort":9027,"appType":"service"},{"appLoad":false,"appName":"proxy-redis-topic-service","appPort":9013,"appType":"service"},{"appLoad":false,"appName":"channel-serialport-analyzer","appPort":9038,"appType":"service"},{"appLoad":true,"appName":"channel-tcpsocket-service","appPort":9026,"appType":"service"},{"appLoad":true,"appName":"channel-simulator","appPort":9043,"appType":"service"},{"appLoad":false,"appName":"channel-http-client-service","appPort":9020,"appType":"service"},{"appLoad":false,"appName":"device-graalvm","appPort":9042,"appType":"system"},{"appLoad":true,"appName":"controller-service","appPort":9008,"appType":"system"},{"appLoad":true,"appName":"manager-service","appPort":9004,"appType":"kernel"},{"appLoad":true,"appName":"gateway-service","appPort":9002,"appType":"kernel"},{"appLoad":true,"appName":"python-server-demo","appPort":9021,"appType":"service"},{"appLoad":true,"appName":"persist-service","appPort":9044,"appType":"system"},{"appLoad":false,"appName":"channel-snmp-service","appPort":9022,"appType":"service"},{"appLoad":false,"appName":"channel-mqtt-client-service","appPort":9018,"appType":"service"},{"appLoad":false,"appName":"channel-opc-ua","appPort":9029,"appType":"service"},{"appLoad":false,"appName":"channel-serialport-service","appPort":9030,"appType":"service"},{"appLoad":true,"appName":"device-simulator-mqtt-service","appPort":9006,"appType":"service"},{"appLoad":true,"appName":"device-service","appPort":9024,"appType":"system"},{"appLoad":false,"appName":"channel-udp-server","appPort":9010,"appType":"service"},{"appLoad":false,"appName":"link-tcp2tcp","appPort":9028,"appType":"service"}]}', '{}', '服务的启动配置信息，指明每个服务是否启动时加载，还有它们的服务端口。\n这是管理服务的配置界面自动化生成的数据，不要去手动编辑，请通过配置界面来设置。\n\n"appLoad": 服务是否被启动加载,\n"appName": 服务的名称,\n"appPort": 服务的端口号,\n"appType": 服务的类型', 1678677401483, 1713759906555),
	(43, 'device-service', 'system', 'decoderConfig', '{\r\n	"list": [ {\r\n		"load": true,\r\n		"fileName": "hutool-core-5.8.3.jar",\r\n		"createTime": 1694166313815,\r\n		"updateTime": 1694160339637\r\n	}, {\r\n		"load": true,\r\n		"fileName": "fox-edge-server-protocol-telecom-core.v1.jar",\r\n		"createTime": 1696654990340,\r\n		"updateTime": 1696654990340\r\n	}, {\r\n		"load": true,\r\n		"fileName": "fox-edge-server-protocol-mitsubishi-plc-fx-core.v1.jar",\r\n		"createTime": 1696654995624,\r\n		"updateTime": 1696654995624\r\n	}, {\r\n		"load": true,\r\n		"fileName": "fox-edge-server-protocol-core.v1.jar",\r\n		"createTime": 1696654997304,\r\n		"updateTime": 1696654997304\r\n	}, {\r\n		"load": true,\r\n		"fileName": "fox-edge-server-protocol-iec104-core.v1.jar",\r\n		"createTime": 1696654999313,\r\n		"updateTime": 1696654999313\r\n	}, {\r\n		"load": true,\r\n		"fileName": "fox-edge-server-protocol-modbus-core.v1.jar",\r\n		"createTime": 1712494326810,\r\n		"updateTime": 1712494326810\r\n	}, {\r\n		"load": true,\r\n		"fileName": "fox-edge-server-protocol-dlt645-core.v1.jar",\r\n		"createTime": 1696655002750,\r\n		"updateTime": 1696655002750\r\n	}, {\r\n		"load": true,\r\n		"fileName": "fox-edge-server-protocol-cjt188-core.v1.jar",\r\n		"createTime": 1696655004645,\r\n		"updateTime": 1696655004645\r\n	}, {\r\n		"load": true,\r\n		"fileName": "hutool-core.v1.jar",\r\n		"createTime": 1696657119044,\r\n		"updateTime": 1696657119044\r\n	}, {\r\n		"load": true,\r\n		"fileName": "fox-edge-server-protocol-zs-sht30-1t-1h.v1.jar",\r\n		"createTime": 1696667186173,\r\n		"updateTime": 1696667186173\r\n	}, {\r\n		"load": true,\r\n		"fileName": "fox-edge-server-protocol-anno.v1.jar",\r\n		"createTime": 1696657793508,\r\n		"updateTime": 1696657793508\r\n	}, {\r\n		"load": true,\r\n		"fileName": "fox-edge-server-protocol-utils.v1.jar",\r\n		"createTime": 1696667475292,\r\n		"updateTime": 1696667475292\r\n	}, {\r\n		"load": true,\r\n		"fileName": "fox-edge-server-protocol-modbus.v1.jar",\r\n		"createTime": 1712494297969,\r\n		"updateTime": 1712494297969\r\n	}, {\r\n		"load": true,\r\n		"fileName": "fox-edge-server-protocol-zktl-electric.v1.jar",\r\n		"createTime": 1696679635971,\r\n		"updateTime": 1696679635971\r\n	}, {\r\n		"load": true,\r\n		"fileName": "fox-edge-server-protocol-s7plc-core.v1.jar",\r\n		"createTime": 1696854219558,\r\n		"updateTime": 1696854219558\r\n	}, {\r\n		"load": true,\r\n		"fileName": "fox-edge-server-protocol-s7plc.v1.jar",\r\n		"createTime": 1696854221266,\r\n		"updateTime": 1696854221266\r\n	}, {\r\n		"load": true,\r\n		"fileName": "fox-edge-server-protocol-zxdu58.v1.jar",\r\n		"createTime": 1697278273546,\r\n		"updateTime": 1697278273546\r\n	}, {\r\n		"load": true,\r\n		"fileName": "fox-edge-server-protocol-omron-fins-core.v1.jar",\r\n		"createTime": 1697278274874,\r\n		"updateTime": 1697278274874\r\n	}, {\r\n		"load": true,\r\n		"fileName": "fox-edge-server-protocol-cetups.v1.jar",\r\n		"createTime": 1697278276703,\r\n		"updateTime": 1697278276703\r\n	}, {\r\n		"load": true,\r\n		"fileName": "fox-edge-server-protocol-bass260zj.v1.jar",\r\n		"createTime": 1697278277756,\r\n		"updateTime": 1697278277756\r\n	}, {\r\n		"load": true,\r\n		"fileName": "fox-edge-server-protocol-snmp.v1.jar",\r\n		"createTime": 1697278278632,\r\n		"updateTime": 1697278278632\r\n	}, {\r\n		"load": true,\r\n		"fileName": "fox-edge-server-protocol-cjt188.v1.jar",\r\n		"createTime": 1701746403310,\r\n		"updateTime": 1701746403310\r\n	}, {\r\n		"load": true,\r\n		"fileName": "fox-edge-server-protocol-dlt645-1997.v1.jar",\r\n		"createTime": 1697278280334,\r\n		"updateTime": 1697278280334\r\n	}, {\r\n		"load": true,\r\n		"fileName": "fox-edge-server-protocol-zktl-air6in1.v1.jar",\r\n		"createTime": 1697278281219,\r\n		"updateTime": 1697278281219\r\n	}, {\r\n		"load": true,\r\n		"fileName": "fox-edge-server-protocol-opc-ua.v1.jar",\r\n		"createTime": 1697278285047,\r\n		"updateTime": 1697278285047\r\n	}, {\r\n		"load": true,\r\n		"fileName": "fox-edge-server-protocol-shmeter.v1.jar",\r\n		"createTime": 1697278286152,\r\n		"updateTime": 1697278286152\r\n	}, {\r\n		"load": true,\r\n		"fileName": "fox-edge-server-protocol-zktl-air5in1.v1.jar",\r\n		"createTime": 1697278287148,\r\n		"updateTime": 1697278287148\r\n	}, {\r\n		"load": true,\r\n		"fileName": "fox-edge-server-protocol-gdana-digester.v1.jar",\r\n		"createTime": 1697278289716,\r\n		"updateTime": 1697278289716\r\n	}, {\r\n		"load": true,\r\n		"fileName": "fox-edge-server-protocol-lrw.v1.jar",\r\n		"createTime": 1697278290691,\r\n		"updateTime": 1697278290691\r\n	}, {\r\n		"load": true,\r\n		"fileName": "fox-edge-server-protocol-zktl-ctrl4g.v1.jar",\r\n		"createTime": 1697278291997,\r\n		"updateTime": 1697278291997\r\n	}, {\r\n		"load": true,\r\n		"fileName": "fox-edge-server-protocol-iec104-slaver.v1.jar",\r\n		"createTime": 1697278293269,\r\n		"updateTime": 1697278293269\r\n	}, {\r\n		"load": true,\r\n		"fileName": "fox-edge-server-protocol-omron-fins.v1.jar",\r\n		"createTime": 1697278294219,\r\n		"updateTime": 1697278294219\r\n	}, {\r\n		"load": true,\r\n		"fileName": "fox-edge-server-protocol-mitsubishi-plc-fx.v1.jar",\r\n		"createTime": 1697278295873,\r\n		"updateTime": 1697278295873\r\n	}, {\r\n		"load": true,\r\n		"fileName": "fox-edge-server-protocol-yy-fj.v1.jar",\r\n		"createTime": 1700035452403,\r\n		"updateTime": 1700035452403\r\n	}, {\r\n		"load": true,\r\n		"fileName": "fox-edge-server-protocol-dahua-fire-core.v1.jar",\r\n		"createTime": 1704022375317,\r\n		"updateTime": 1704022375317\r\n	}, {\r\n		"load": true,\r\n		"fileName": "fox-edge-server-protocol-hikvision-fire-core.v1.jar",\r\n		"createTime": 1712495199675,\r\n		"updateTime": 1712495199675\r\n	}, {\r\n		"load": true,\r\n		"fileName": "fox-edge-server-protocol-tsl-lfc705.v1.jar",\r\n		"createTime": 1705579981999,\r\n		"updateTime": 1705579981999\r\n	}, {\r\n		"load": true,\r\n		"fileName": "fox-edge-server-protocol-hj212-2017.v1.jar",\r\n		"createTime": 1705726555130,\r\n		"updateTime": 1705726555130\r\n	}, {\r\n		"load": true,\r\n		"fileName": "fox-edge-server-protocol-haier-ycj-a002.v1.jar",\r\n		"createTime": 1709213947693,\r\n		"updateTime": 1709213947693\r\n	}, {\r\n		"load": true,\r\n		"fileName": "fox-edge-server-protocol-s3p-core.v1.jar",\r\n		"createTime": 1710335771500,\r\n		"updateTime": 1710335771500\r\n	}, {\r\n		"load": true,\r\n		"fileName": "fox-edge-server-protocol-tcl-air-adapter.v1.jar",\r\n		"createTime": 1711078259721,\r\n		"updateTime": 1711078259721\r\n	}, {\r\n		"load": true,\r\n		"fileName": "fox-edge-server-protocol-yy-rs-ktcs-n01.v1.jar",\r\n		"createTime": 1711597273641,\r\n		"updateTime": 1711597273641\r\n	}, {\r\n		"load": true,\r\n		"fileName": "fox-edge-server-protocol-haiwu-air-core.v1.jar",\r\n		"createTime": 1711599269627,\r\n		"updateTime": 1711599269627\r\n	}, {\r\n		"load": true,\r\n		"fileName": "fox-edge-server-protocol-haiwu-air-v100.v1.jar",\r\n		"createTime": 1711783181034,\r\n		"updateTime": 1711783181034\r\n	}, {\r\n		"load": true,\r\n		"fileName": "fox-edge-server-protocol-haiwu-air-v10d.v1.jar",\r\n		"createTime": 1711783183355,\r\n		"updateTime": 1711783183355\r\n	}, {\r\n		"load": true,\r\n		"fileName": "fox-edge-server-protocol-haiwu-air-v200.v1.jar",\r\n		"createTime": 1711783185186,\r\n		"updateTime": 1711783185186\r\n	}, {\r\n		"load": true,\r\n		"fileName": "fox-edge-server-protocol-tcl-air-adapter-1.1.1.jar",\r\n		"createTime": 1711783392555,\r\n		"updateTime": 1711783392555\r\n	}]\r\n}', '{}', '设备服务的解码器加载配置。这是管理服务的配置界面自动化生成的数据，不要去手动编辑，请通过配置界面来设置。\n\n"load": 是否启用该解码器,\n"fileName": 解码器JAR包的文件名称,\n"createTime": 配置项的创建时间,\n"updateTime": 1配置项的修改时间,', 1681447936753, 1712495199736),
	(47, 'channel-proxy-client1', 'service', 'mqttConfig', '{"mqtt": {"client": {"ip": "39.108.137.38", "name": "Mica-Mqtt-Client", "port": 1883, "topic": {"publish": "/group_fox_hpw/v1/proxy/request/#", "subscribe": "/group_fox_hpw/v1/proxy/response/#"}, "enabled": true, "timeout": 5, "use-ssl": false, "version": "mqtt_3_1_1", "clientId": "000001", "password": 123456, "reconnect": true, "user-name": "mica", "re-interval": 5000, "clean-session": true, "keep-alive-secs": 60, "buffer-allocator": "heap", "read-buffer-size": "8KB", "max-bytes-in-message": "10MB"}}}', '{}', '通道代理服务的MQTT配置\n\nenabled: true   # 是否开启客户端，默认：true\nip: 120.79.69.201  # 连接的服务端 ip ，默认：127.0.0.1\nport: 1883  # 端口：默认：1883\nname: Mica-Mqtt-Client  # 名称，默认：Mica-Mqtt-Client\nclientId: 000001# 客户端Id（非常重要，一般为设备 sn，不可重复）\nuser-name: mica # 认证的用户名\npassword: 123456# 认证的密码\ntimeout: 5  # 超时时间，单位：秒，默认：5秒\nreconnect: true # 是否重连，默认：true\nre-interval: 5000   # 重连时间，默认 5000 毫秒\nversion: mqtt_3_1_1 # mqtt 协议版本，可选 MQTT_3_1、mqtt_3_1_1、mqtt_5，默认：mqtt_3_1_1\nread-buffer-size: 8KB   # 接收数据的 buffer size，默认：8k\nmax-bytes-in-message: 10MB  # 消息解析最大 bytes 长度，默认：10M\nbuffer-allocator: heap  # 堆内存和堆外内存，默认：堆内存\nkeep-alive-secs: 60 # keep-alive 时间，单位：秒\nclean-session: true # mqtt clean session，默认：true\nuse-ssl: false  # 是否启用 ssl，默认：false\n\ntopic:\n      subscribe: "/group_fox/v1/proxy/response/#"   # 上位机的接收响应topic：设备会把数据写入这个位置，其中#是设备的ID，MqttClient可以订阅这个消息\n      publish: "/group_fox/v1/proxy/request/#"      # 设备的接收请求topic：设备模在这个位置等待消息，其中#是设备的ID，MqttClient可以把对设备的请求发布到这个位置\n', 1682501818741, 1695724491772),
	(49, 'channel-proxy-server1', 'service', 'mqttConfig', '{"mqtt": {"client": {"ip": "39.108.137.38", "name": "Mica-Mqtt-Client", "port": 1883, "topic": {"publish": "/group_fox_hpw/v1/proxy/response/#", "subscribe": "/group_fox_hpw/v1/proxy/request/#"}, "enabled": true, "timeout": 5, "use-ssl": false, "version": "mqtt_3_1_1", "clientId": "000001", "password": 123456, "reconnect": true, "user-name": "mica", "re-interval": 5000, "clean-session": true, "keep-alive-secs": 60, "buffer-allocator": "heap", "read-buffer-size": "8KB", "max-bytes-in-message": "10MB"}}}', '{}', '通道代理服务的MQTT配置\n\nenabled: true   # 是否开启客户端，默认：true\nip: 120.79.69.201  # 连接的服务端 ip ，默认：127.0.0.1\nport: 1883  # 端口：默认：1883\nname: Mica-Mqtt-Client  # 名称，默认：Mica-Mqtt-Client\nclientId: 000001# 客户端Id（非常重要，一般为设备 sn，不可重复）\nuser-name: mica # 认证的用户名\npassword: 123456# 认证的密码\ntimeout: 5  # 超时时间，单位：秒，默认：5秒\nreconnect: true # 是否重连，默认：true\nre-interval: 5000   # 重连时间，默认 5000 毫秒\nversion: mqtt_3_1_1 # mqtt 协议版本，可选 MQTT_3_1、mqtt_3_1_1、mqtt_5，默认：mqtt_3_1_1\nread-buffer-size: 8KB   # 接收数据的 buffer size，默认：8k\nmax-bytes-in-message: 10MB  # 消息解析最大 bytes 长度，默认：10M\nbuffer-allocator: heap  # 堆内存和堆外内存，默认：堆内存\nkeep-alive-secs: 60 # keep-alive 时间，单位：秒\nclean-session: true # mqtt clean session，默认：true\nuse-ssl: false  # 是否启用 ssl，默认：false\n\ntopic: # 上位机的接收响应topic：设备会把数据写入这个位置，其中#是设备的ID，MqttClient可以订阅这个消息\nsubscribe: "/group_fox/v1/proxy/request/#"\n publish: "/group_fox/v1/proxy/response/#" # 设备的接收请求topic：设备模在这个位置等待消息，其中#是设备的ID，MqttClient可以把对设备的请求发布到这个位置', 1682502096419, 1695724480896),
	(80, 'channel-udp-server', 'service', 'serverConfig', '{"decoderList": [{"decoder": [{"jarFile": "\\\\jar\\\\decoder\\\\fox-edge-server-protocol-zktl-air6in1-1.0.3.jar"}], "lifeCycle": 3600, "keyHandler": "cn.foxtech.device.protocol.v1.zktl.air6in1.handler.ZktlServiceKeyHandler", "serverPort": 9301}, {"decoder": [{"jarFile": "\\\\jar\\\\decoder\\\\fox-edge-server-protocol-zktl-air5in1-1.0.3.jar"}], "keyHandler": "cn.foxtech.device.protocol.v1.zktl.air5in1.handler.ZktlServiceKeyHandler", "serverPort": 9302}]}', '{}', 'udp-server通道的配置信息：\n\njarFile：解码器所在的文件位置\n\nkeyHandler：提取设备身份信息的完整名称', 1695734061629, 1695734061629),
	(83, 'channel-proxy-server', 'service', 'serverConfig', '{"mqtt": {"client": {"ip": "39.108.137.38", "name": "Mica-Mqtt-Client", "port": 1883, "topic": {"publish": "/group_fox_hpw/v1/proxy/response/#", "subscribe": "/group_fox_hpw/v1/proxy/request/#"}, "enabled": true, "timeout": 5, "use-ssl": false, "version": "mqtt_3_1_1", "clientId": "000001", "password": 123456, "reconnect": true, "user-name": "mica", "re-interval": 5000, "clean-session": true, "keep-alive-secs": 60, "buffer-allocator": "heap", "read-buffer-size": "8KB", "max-bytes-in-message": "10MB"}}}', '{}', '通道代理服务的MQTT配置\\n\\nenabled: true   # 是否开启客户端，默认：true\\nip: 120.79.69.201  # 连接的服务端 ip ，默认：127.0.0.1\\nport: 1883  # 端口：默认：1883\\nname: Mica-Mqtt-Client  # 名称，默认：Mica-Mqtt-Client\\nclientId: 000001# 客户端Id（非常重要，一般为设备 sn，不可重复）\\nuser-name: mica # 认证的用户名\\npassword: 123456# 认证的密码\\ntimeout: 5  # 超时时间，单位：秒，默认：5秒\\nreconnect: true # 是否重连，默认：true\\nre-interval: 5000   # 重连时间，默认 5000 毫秒\\nversion: mqtt_3_1_1 # mqtt 协议版本，可选 MQTT_3_1、mqtt_3_1_1、mqtt_5，默认：mqtt_3_1_1\\nread-buffer-size: 8KB   # 接收数据的 buffer size，默认：8k\\nmax-bytes-in-message: 10MB  # 消息解析最大 bytes 长度，默认：10M\\nbuffer-allocator: heap  # 堆内存和堆外内存，默认：堆内存\\nkeep-alive-secs: 60 # keep-alive 时间，单位：秒\\nclean-session: true # mqtt clean session，默认：true\\nuse-ssl: false  # 是否启用 ssl，默认：false\\n\\ntopic:\\n      subscribe: "/group_fox/v1/proxy/response/#"   # 上位机的接收响应topic：设备会把数据写入这个位置，其中#是设备的ID，MqttClient可以订阅这个消息\\n      publish: "/group_fox/v1/proxy/request/#"      # 设备的接收请求topic：设备模在这个位置等待消息，其中#是设备的ID，MqttClient可以把对设备的请求发布到这个位置\\n\n', 1695736825812, 1695736825812),
	(86, 'channel-proxy-client', 'service', 'serverConfig', '{"mqtt": {"client": {"ip": "39.108.137.38", "name": "Mica-Mqtt-Client", "port": 1883, "topic": {"publish": "/group_fox_hpw/v1/proxy/request/#", "subscribe": "/group_fox_hpw/v1/proxy/response/#"}, "enabled": true, "timeout": 5, "use-ssl": false, "version": "mqtt_3_1_1", "clientId": "000001", "password": 123456, "reconnect": true, "user-name": "mica", "re-interval": 5000, "clean-session": true, "keep-alive-secs": 60, "buffer-allocator": "heap", "read-buffer-size": "8KB", "max-bytes-in-message": "10MB"}}}', '{}', '通道代理服务的MQTT配置\n\nenabled: true   # 是否开启客户端，默认：true\nip: 120.79.69.201  # 连接的服务端 ip ，默认：127.0.0.1\nport: 1883  # 端口：默认：1883\nname: Mica-Mqtt-Client  # 名称，默认：Mica-Mqtt-Client\nclientId: 000001# 客户端Id（非常重要，一般为设备 sn，不可重复）\nuser-name: mica # 认证的用户名\npassword: 123456# 认证的密码\ntimeout: 5  # 超时时间，单位：秒，默认：5秒\nreconnect: true # 是否重连，默认：true\nre-interval: 5000   # 重连时间，默认 5000 毫秒\nversion: mqtt_3_1_1 # mqtt 协议版本，可选 MQTT_3_1、mqtt_3_1_1、mqtt_5，默认：mqtt_3_1_1\nread-buffer-size: 8KB   # 接收数据的 buffer size，默认：8k\nmax-bytes-in-message: 10MB  # 消息解析最大 bytes 长度，默认：10M\nbuffer-allocator: heap  # 堆内存和堆外内存，默认：堆内存\nkeep-alive-secs: 60 # keep-alive 时间，单位：秒\nclean-session: true # mqtt clean session，默认：true\nuse-ssl: false  # 是否启用 ssl，默认：false\n\ntopic:\n      subscribe: "/group_fox/v1/proxy/response/#"   # 上位机的接收响应topic：设备会把数据写入这个位置，其中#是设备的ID，MqttClient可以订阅这个消息\n      publish: "/group_fox/v1/proxy/request/#"      # 设备的接收请求topic：设备模在这个位置等待消息，其中#是设备的ID，MqttClient可以把对设备的请求发布到这个位置\n', 1695801848742, 1695802047323),
	(121, 'proxy-cloud-service', 'service', 'serverConfig', '{"cloud": {"http": {"host": "http://cloud.fox-tech.cn/prod-api", "lockdown": 60, "password": "12345678", "username": "fox-edge"}, "mode": "http", "mqtt": {"ip": "39.108.137.38", "name": "Mica-Mqtt-Client", "port": 1883, "enabled": true, "timeout": 5, "use-ssl": false, "version": "mqtt_3_1_1", "clientId": "000001", "password": "123456", "reconnect": true, "user-name": "mica", "re-interval": 5000, "clean-session": true, "keep-alive-secs": 60, "buffer-allocator": "heap", "read-buffer-size": "8KB", "max-bytes-in-message": "10MB"}}, "local": {"lockdown": 60, "password": "12345678", "username": "admin"}}', '{"list": [{"saveMode": "Raw", "showMode": "Security", "fieldName": "local.password", "valueType": "string", "defaultValue": ""}, {"saveMode": "Raw", "showMode": "Security", "fieldName": "cloud.http.password", "valueType": "string", "defaultValue": ""}, {"saveMode": "Raw", "showMode": "Security", "fieldName": "cloud.mqtt.password", "valueType": "string", "defaultValue": ""}]}', 'proxy-cloud-service服务所需要的云端配置：  \n\n1. cloud\n跟fox-cloud连接的云端配置\n\nmode：连接模式，参数可以是 mqtt 和 http\nmqtt：mqtt模式下的参数，此时使用MQTT协议，把数据发送到fox-cloud\nhttp： http模式下的参数，此时使用http协议，把数据发送到fox-cloud\n\n1.1 cloud -> http\nhost：云端fox-cloud的API服务器\nusername：fox-cloud上的账号\npassword：fox-cloud上的密码\nlockdown：为了避免登录失败后，反复登录fox-cloud，需要等待一段时间，避免被fox-cloud认为是恶意攻击\n\n1.2 cloud -> mqtt\n连接云端MQTT Broker的MQTT配置\n\nenabled: true   # 是否开启客户端，默认：true\nip: 120.79.69.201  # 连接的服务端 ip ，默认：127.0.0.1\nport: 1883  # 端口：默认：1883\nname: Mica-Mqtt-Client  # 名称，默认：Mica-Mqtt-Client\nclientId: 000001# 客户端Id（非常重要，一般为设备 sn，不可重复）\nuser-name: mica # 认证的用户名\npassword: 123456# 认证的密码\ntimeout: 5  # 超时时间，单位：秒，默认：5秒\nreconnect: true # 是否重连，默认：true\nre-interval: 5000   # 重连时间，默认 5000 毫秒\nversion: mqtt_3_1_1 # mqtt 协议版本，可选 MQTT_3_1、mqtt_3_1_1、mqtt_5，默认：mqtt_3_1_1\nread-buffer-size: 8KB   # 接收数据的 buffer size，默认：8k\nmax-bytes-in-message: 10MB  # 消息解析最大 bytes 长度，默认：10M\nbuffer-allocator: heap  # 堆内存和堆外内存，默认：堆内存\nkeep-alive-secs: 60 # keep-alive 时间，单位：秒\nclean-session: true # mqtt clean session，默认：true\nuse-ssl: false  # 是否启用 ssl，默认：false\n\n\n2. local\n接受云端操作请求的时候，fox-edge的登录账号信息，此时会通过配置信息，会接受云端MQTT代理的操作请求\n\nusername：fox-edge上的账号\npassword：fox-edge上的密码\nlockdown：为了避免登录失败后，反复登录fox-cloud，需要等待一段时间，避免被fox-cloud认为是恶意攻击', 1697605281305, 1704512096826),
	(124, 'cloud-thingsboard-service', 'service', 'serverConfig', '{"mode": "period", "period": {"unit": "minute", "interval": 30}}', '{}', '第三方物联网云平台ThingsBoard的数据推送配置参数：\n\n字段说明\nmode ： 发布模式，可选值period 或者 trigger\ntrigger模式，为数据变更就发送，这种方式非常实时，但是推送的数据量会非常大，ThingsBoard那边不一定顶得住这么大的数据量。\nperiod模式，为定时发送数据方式，单位有second、minute、hour三种单位', 1698485565179, 1698486156925),
	(127, 'cloud-thingspanel-service', 'service', 'serverConfig', '{"mode": "period", "period": {"unit": "minute", "interval": 30}, "remote": {"http": {"host": "http://dev.thingspanel.cn:9988/api"}}}', '{}', '第三方物联网云平台ThingsPanel的数据推送配置参数：\n\n字段说明\nmode ： 发布模式，可选值period 或者 trigger\ntrigger模式，为数据变更就发送，这种方式非常实时，但是推送的数据量会非常大，ThingsPanel那边不一定顶得住这么大的数据量。\nperiod模式，为定时发送数据方式，单位有second、minute、hour三种单位', 1698641214491, 1698641214491),
	(130, 'iot-thingspanel', 'service', 'serverConfig', '{"mode": "trigger", "extend": {"accessToken": "thingspanelHttpToken"}, "period": {"unit": "minute", "interval": 30}, "remote": {"http": {"host": "http://dev.thingspanel.cn:9988/api"}}}', '{}', '第三方物联网云平台ThingsPanel的数据推送配置参数：\n\n字段说明\nmode ： 发布模式，可选值period 或者 trigger\ntrigger模式，为数据变更就发送，这种方式非常实时，但是推送的数据量会非常大，ThingsPanel那边不一定顶得住这么大的数据量。\nperiod模式，为定时发送数据方式，单位有second、minute、hour三种单位', 1698652754823, 1698652754823),
	(133, 'iot-thingsboard', 'service', 'serverConfig', '{"mode": "trigger", "extend": {"accessToken": "thingsboardHttpToken"}, "period": {"unit": "minute", "interval": 30}, "remote": {"http": {"host": "http://demo.thingsboard.io/api"}}}', '{}', '第三方物联网云平台ThingsBoard的数据推送配置参数：\n\n字段说明\nmode ： 发布模式，可选值period 或者 trigger\ntrigger模式，为数据变更就发送，这种方式非常实时，但是推送的数据量会非常大，ThingsBoard那边不一定顶得住这么大的数据量。\nperiod模式，为定时发送数据方式，单位有second、minute、hour三种单位', 1698677406025, 1698677406025),
	(134, 'cloud-thingspanel', 'service', 'serverConfig', '{"mode": "trigger", "extend": {"accessToken": "thingspanelHttpToken"}, "period": {"unit": "minute", "interval": 30}, "remote": {"http": {"host": "http://dev.thingspanel.cn:9988/api"}}}', '{}', '第三方物联网云平台ThingsPanel的数据推送配置参数：\n\n字段说明\nmode ： 发布模式，可选值period 或者 trigger\ntrigger模式，为数据变更就发送，这种方式非常实时，但是推送的数据量会非常大，ThingsPanel那边不一定顶得住这么大的数据量。\nperiod模式，为定时发送数据方式，单位有second、minute、hour三种单位', 1698678072119, 1698678072119),
	(137, 'persist-service', 'system', 'serverConfig', '{"deviceHistory": {"period": 3601, "maxCount": 1000000}, "operateRecord": {"period": 3601, "maxCount": 10000}}', '{}', '这是持久化服务 persist-service 的配置参数\n\n配置参数说明：\n{\n     "deviceHistory": {------------------定期清理历史记录，防止数据库表过渡膨胀\n          "period": 3600,-----------------3600秒清理一次\n          "maxCount": 1000000----------最大保留1000000条记录\n     },\n     "operateRecord": {------------------定期清理历史记录，防止数据库表过渡膨胀\n          "period": 3600,------------------3600秒清理一次\n          "maxCount": 10000-------------最大保留10000条记录\n     }\n}', 1698982954532, 1698983269833),
	(138, 'iot-huawei', 'service', 'serverConfig', '{"extend": {"extendField": "huaweiIotDA"}, "remote": {"http": {"host": ""}, "mode": "mqtt", "mqtt": {"host": "5baca48179.iot-mqtts.cn-north-4.myhuaweicloud.com", "name": "Mica-Mqtt-Client", "port": 1883, "enabled": true, "timeout": 5, "use-ssl": false, "version": "mqtt_3_1_1", "clientId": "65447954c8ad2129d9a0e373_F9509B1CE7B0F023_0_0_2023110304", "password": "d8f4e6d0a47a94c064e12c9de264bccae328c17604c794727afeb913f2a6b364", "reconnect": true, "user-name": "65447954c8ad2129d9a0e373_F9509B1CE7B0F023", "re-interval": 5000, "clean-session": true, "keep-alive-secs": 60, "buffer-allocator": "heap", "read-buffer-size": "8KB", "max-bytes-in-message": "10MB"}}, "huaweiIoTDA": {"nodeId": "F9509B1CE7B0F023", "deviceId": "65447954c8ad2129d9a0e373_F9509B1CE7B0F023", "provider": "HuaWei-IoTDA", "productId": "65447954c8ad2129d9a0e373", "deviceOnlinePush": 30}}', '{"list": [{"saveMode": "Raw", "showMode": "Security", "fieldName": "cloud.mqtt.password", "valueType": "string", "defaultValue": ""}]}', 'iot-huawei服务所需要的云端配置：  \n\n1. cloud\n跟fox-cloud连接的云端配置\n\nmode：连接模式，参数可以是 mqtt 和 http\nmqtt：mqtt模式下的参数，此时使用MQTT协议，把数据发送到fox-cloud\nhttp： http模式下的参数，此时使用http协议，把数据发送到fox-cloud\n\n1.1 cloud -> http\nhost：云端fox-cloud的API服务器\nusername：fox-cloud上的账号\npassword：fox-cloud上的密码\nlockdown：为了避免登录失败后，反复登录fox-cloud，需要等待一段时间，避免被fox-cloud认为是恶意攻击\n\n1.2 cloud -> mqtt\n连接云端MQTT Broker的MQTT配置\n\nenabled: true   # 是否开启客户端，默认：true\nip: 120.79.69.201  # 连接的服务端 ip ，默认：127.0.0.1\nport: 1883  # 端口：默认：1883\nname: Mica-Mqtt-Client  # 名称，默认：Mica-Mqtt-Client\nclientId: 000001# 客户端Id（非常重要，一般为设备 sn，不可重复）\nuser-name: mica # 认证的用户名\npassword: 123456# 认证的密码\ntimeout: 5  # 超时时间，单位：秒，默认：5秒\nreconnect: true # 是否重连，默认：true\nre-interval: 5000   # 重连时间，默认 5000 毫秒\nversion: mqtt_3_1_1 # mqtt 协议版本，可选 MQTT_3_1、mqtt_3_1_1、mqtt_5，默认：mqtt_3_1_1\nread-buffer-size: 8KB   # 接收数据的 buffer size，默认：8k\nmax-bytes-in-message: 10MB  # 消息解析最大 bytes 长度，默认：10M\nbuffer-allocator: heap  # 堆内存和堆外内存，默认：堆内存\nkeep-alive-secs: 60 # keep-alive 时间，单位：秒\nclean-session: true # mqtt clean session，默认：true\nuse-ssl: false  # 是否启用 ssl，默认：false\n\n\n2. local\n接受云端操作请求的时候，fox-edge的登录账号信息，此时会通过配置信息，会接受云端MQTT代理的操作请求\n\nusername：fox-edge上的账号\npassword：fox-edge上的密码\nlockdown：为了避免登录失败后，反复登录fox-cloud，需要等待一段时间，避免被fox-cloud认为是恶意攻击', 1698988167413, 1699184515601),
	(139, 'cloud-huawei-iotda', 'service', 'serverConfig', '{"remote": {"http": {"host": "http://demo.thingsboard.io/api"}, "mode": "mqtt", "mqtt": {"host": "1cd5baf642.st1.iotda-device.cn-north-4.myhuaweicloud.com", "name": "Mica-Mqtt-Client", "port": 1883, "enabled": true, "timeout": 5, "use-ssl": false, "version": "mqtt_3_1_1", "clientId": "653d1b13585c81787ad06a33_Fox-Edge-54060500FFFB8B0F_0_0_2023102814", "password": "6009eee886f53891b39bbd5802a87ff03024bf2d00a7a3db2c3d6026034c031f", "reconnect": true, "user-name": "653d1b13585c81787ad06a33_Fox-Edge-54060500FFFB8B0F", "re-interval": 5000, "clean-session": true, "keep-alive-secs": 60, "buffer-allocator": "heap", "read-buffer-size": "8KB", "max-bytes-in-message": "10MB"}}, "huaweiIoTDA": {"models": ["/iot-huawei/v1/1.0.0/service/CJT188/profile/servicetype-capability.json", "/iot-huawei/v1/1.0.0/service/CE_T_UPS/profile/servicetype-capability.json"], "nodeId": "Fox-Edge-54060500FFFB8B0F", "deviceId": "653d1b13585c81787ad06a33_Fox-Edge-54060500FFFB8B0F", "productId": "653d1b13585c81787ad06a33", "deviceOnlinePush": 30}}', '{"list": [{"saveMode": "Raw", "showMode": "Security", "fieldName": "cloud.mqtt.password", "valueType": "string", "defaultValue": ""}]}', 'proxy-cloud-service服务所需要的云端配置：  \n\n1. cloud\n跟fox-cloud连接的云端配置\n\nmode：连接模式，参数可以是 mqtt 和 http\nmqtt：mqtt模式下的参数，此时使用MQTT协议，把数据发送到fox-cloud\nhttp： http模式下的参数，此时使用http协议，把数据发送到fox-cloud\n\n1.1 cloud -> http\nhost：云端fox-cloud的API服务器\nusername：fox-cloud上的账号\npassword：fox-cloud上的密码\nlockdown：为了避免登录失败后，反复登录fox-cloud，需要等待一段时间，避免被fox-cloud认为是恶意攻击\n\n1.2 cloud -> mqtt\n连接云端MQTT Broker的MQTT配置\n\nenabled: true   # 是否开启客户端，默认：true\nip: 120.79.69.201  # 连接的服务端 ip ，默认：127.0.0.1\nport: 1883  # 端口：默认：1883\nname: Mica-Mqtt-Client  # 名称，默认：Mica-Mqtt-Client\nclientId: 000001# 客户端Id（非常重要，一般为设备 sn，不可重复）\nuser-name: mica # 认证的用户名\npassword: 123456# 认证的密码\ntimeout: 5  # 超时时间，单位：秒，默认：5秒\nreconnect: true # 是否重连，默认：true\nre-interval: 5000   # 重连时间，默认 5000 毫秒\nversion: mqtt_3_1_1 # mqtt 协议版本，可选 MQTT_3_1、mqtt_3_1_1、mqtt_5，默认：mqtt_3_1_1\nread-buffer-size: 8KB   # 接收数据的 buffer size，默认：8k\nmax-bytes-in-message: 10MB  # 消息解析最大 bytes 长度，默认：10M\nbuffer-allocator: heap  # 堆内存和堆外内存，默认：堆内存\nkeep-alive-secs: 60 # keep-alive 时间，单位：秒\nclean-session: true # mqtt clean session，默认：true\nuse-ssl: false  # 是否启用 ssl，默认：false\n\n\n2. local\n接受云端操作请求的时候，fox-edge的登录账号信息，此时会通过配置信息，会接受云端MQTT代理的操作请求\n\nusername：fox-edge上的账号\npassword：fox-edge上的密码\nlockdown：为了避免登录失败后，反复登录fox-cloud，需要等待一段时间，避免被fox-cloud认为是恶意攻击', 1699004818709, 1699004818709),
	(141, 'channel-tcp-client', 'service', 'serverConfig', '{"logger": false, "decoderList": [{"jarFile": "/jar/decoder/fox-edge-server-protocol-core.v1.jar"}, {"jarFile": "/jar/decoder/fox-edge-server-protocol-zktl-air6in1.v1.jar"}, {"jarFile": "/jar/decoder/fox-edge-server-protocol-zktl-air5in1.v1.jar"}]}', '{}', 'channel-tcp-listener全局的配置信息：\n\njarFile：解码器所在的文件位置', 1699157588452, 1699157588452),
	(214, 'channel-mqtt-client', 'service', 'serverConfig', '{"mqtt": {"host": "39.108.137.38", "name": "Mica-Mqtt-Client", "port": 1883, "enabled": true, "timeout": 5, "use-ssl": false, "version": "mqtt_3_1_1", "clientId": "", "password": "12345678", "reconnect": true, "user-name": "mica", "re-interval": 5000, "clean-session": true, "keep-alive-secs": 60, "buffer-allocator": "heap", "read-buffer-size": "8KB", "max-bytes-in-message": "10MB"}, "topic": "/v1/device/response/#"}', '{"list": [{"saveMode": "Raw", "showMode": "Security", "fieldName": "mqtt.password", "valueType": "string", "defaultValue": ""}]}', 'channel-mqtt-client通道的配置信息：\n\ntopic：指的是订阅topic，这边要通过通配符来指明，接收一批设备\n接收到一批设备消息后，具体对应哪个设备，通过通道服务定义哪个设备对应哪个t具体的opic，即可区分收到的数据，是哪个设备的。\n\nmqtt：这是mqtt的连接厂商，主要是host、port、clientId、账号、密码这几个参数\nclientId：如果没有填写唯一性ID，那么就会随机生成一个ID', 1700048318059, 1700049270288),
	(220, 'iot-whzktl', 'service', 'serverConfig', '{"extend": {"extendField": "whzktl"}, "remote": {"http": {"host": ""}, "mode": "mqtt", "mqtt": {"host": "39.108.137.38", "name": "Mica-Mqtt-Client", "port": 1883, "enabled": true, "timeout": 5, "use-ssl": false, "version": "mqtt_3_1_1", "clientId": "", "password": "123456", "reconnect": true, "user-name": "mica", "re-interval": 5000, "clean-session": true, "keep-alive-secs": 60, "buffer-allocator": "heap", "read-buffer-size": "8KB", "max-bytes-in-message": "10MB"}}, "whzktl": {"publish": "/zktl/gateway/{edgeId}/up", "subscribe": "/zktl/gateway/{edgeId}/down/#"}}', '{"list": [{"saveMode": "Raw", "showMode": "Security", "fieldName": "cloud.mqtt.password", "valueType": "string", "defaultValue": ""}]}', 'iot-huawei服务所需要的云端配置：  \n\n1. cloud\n跟fox-cloud连接的云端配置\n\nmode：连接模式，参数可以是 mqtt 和 http\nmqtt：mqtt模式下的参数，此时使用MQTT协议，把数据发送到fox-cloud\nhttp： http模式下的参数，此时使用http协议，把数据发送到fox-cloud\n\n1.1 cloud -> http\nhost：云端fox-cloud的API服务器\nusername：fox-cloud上的账号\npassword：fox-cloud上的密码\nlockdown：为了避免登录失败后，反复登录fox-cloud，需要等待一段时间，避免被fox-cloud认为是恶意攻击\n\n1.2 cloud -> mqtt\n连接云端MQTT Broker的MQTT配置\n\nenabled: true   # 是否开启客户端，默认：true\nip: 120.79.69.201  # 连接的服务端 ip ，默认：127.0.0.1\nport: 1883  # 端口：默认：1883\nname: Mica-Mqtt-Client  # 名称，默认：Mica-Mqtt-Client\nclientId: 000001# 客户端Id（非常重要，一般为设备 sn，不可重复）\nuser-name: mica # 认证的用户名\npassword: 123456# 认证的密码\ntimeout: 5  # 超时时间，单位：秒，默认：5秒\nreconnect: true # 是否重连，默认：true\nre-interval: 5000   # 重连时间，默认 5000 毫秒\nversion: mqtt_3_1_1 # mqtt 协议版本，可选 MQTT_3_1、mqtt_3_1_1、mqtt_5，默认：mqtt_3_1_1\nread-buffer-size: 8KB   # 接收数据的 buffer size，默认：8k\nmax-bytes-in-message: 10MB  # 消息解析最大 bytes 长度，默认：10M\nbuffer-allocator: heap  # 堆内存和堆外内存，默认：堆内存\nkeep-alive-secs: 60 # keep-alive 时间，单位：秒\nclean-session: true # mqtt clean session，默认：true\nuse-ssl: false  # 是否启用 ssl，默认：false\n\n\n2. local\n接受云端操作请求的时候，fox-edge的登录账号信息，此时会通过配置信息，会接受云端MQTT代理的操作请求\n\nusername：fox-edge上的账号\npassword：fox-edge上的密码\nlockdown：为了避免登录失败后，反复登录fox-cloud，需要等待一段时间，避免被fox-cloud认为是恶意攻击', 1701234981458, 1704285706646),
	(223, 'channel-serialport-analyzer', 'service', 'serverConfig', '{"logger": true, "serialPort": {"parity": "N", "baudRate": 9600, "databits": 8, "stopbits": 1, "serialName": "COM1"}}', '{}', '串口分析通道服务\n\n全局参数配置范例：\n{\n     "logger": false,--------------------------------------是否打印日志\n     "serialPort": {----------------------------------------串口配置\n          "parity": "N",\n          "baudRate": 9600,\n          "databits": 8,\n          "stopbits": 1,\n          "serialName": "COM1"\n     }\n}\n\n通道参数配置：\n{\n     "manufacturer": "海湾安全技术有限公司",   ---------设备厂商\n     "deviceType": "JB-QB-GST500",---------------------设备型号\n     "splitHandler": "splitHandler",,----------------------操作方法：报文分拆\n     "keyHandler": "keyHandler",------------------------操作方法：设备身份识别\n     "serviceKey": "1/5",----------------------------------身份特征：配合设备的身份识别\n     "returnText": "GB2312",------------------------------是否文本返回：可选，对于TXT格式的HEX流，转为TXT文本返回，主要是后面设备那边的JSP不带字符库，搞不定字符集的处理问题\n}', 1701873161801, 1704976554454),
	(232, 'controller-service', 'system', 'serverConfig', '{"sleep": 1}', '{}', '控制器需要的设备轮询任务的周期，指明每隔多长时间轮询一个任务', 1702721703172, 1702721703172),
	(234, 'manager-service', 'kernel', 'repositoryConfig', '{"file": "http://repository.fox-tech.cn", "host": "http://repository.fox-tech.cn/prod-api", "lockdown": 60, "password": "12345678", "username": "Fox-Edge-Public"}', '{"list": [{"saveMode": "Raw", "showMode": "Security", "fieldName": "password", "valueType": "string", "defaultValue": ""}]}', '仓库的配置信息，指明云端的服务器所在位置\n\nhost：云端仓库的API服务器\nusername：云端仓库上的账号\npassword：云端仓库上的密码\nlockdown：为了避免登录失败后，反复登录云端仓库，需要等待一段时间，避免被云端仓库认为是恶意攻击', 1702728137516, 1706000200228),
	(251, 'gateway-service', 'kernel', 'repositoryConfig1', '{"file": "http://repository.fox-tech.cn", "host": "http://repository.fox-tech.cn/prod-api", "lockdown": 60, "password": "12345678", "username": "Fox-Edge-Public"}', '{}', '仓库的配置信息，指明云端的服务器所在位置\n\nhost：云端仓库的API服务器\nusername：云端仓库上的账号\npassword：云端仓库上的密码\nlockdown：为了避免登录失败后，反复登录云端仓库，需要等待一段时间，避免被云端仓库认为是恶意攻击', 1703159363557, 1703159397946),
	(256, 'manager-service', 'kernel', 'mqttConfig', '{"mqtt": {"host": "39.108.137.38", "name": "Mica-Mqtt-Client", "port": 1883, "enabled": true, "timeout": 5, "use-ssl": false, "version": "mqtt_3_1_1", "clientId": "", "password": "12345678", "reconnect": true, "user-name": "mica", "re-interval": 5000, "clean-session": true, "keep-alive-secs": 60, "buffer-allocator": "heap", "read-buffer-size": "8KB", "max-bytes-in-message": "10MB"}, "topic": {"request": "/fox/proxy/c2e/{edgeId}/forward", "respond": "/fox/proxy/e2c/forward/{edgeId}"}}', '{"list": [{"saveMode": "Raw", "showMode": "Security", "fieldName": "cloud.mqtt.password", "valueType": "string", "defaultValue": ""}]}', 'mqtt：mqtt的连接参数\n\ntopic/request：请求topic，fox-edge订阅了这个接口，云端服务可以向这个topic发出请求\ntopic/respond：响应topic，云端服务可以订阅这个接口，fox-edge会通过该topic返回对应的操作结果\n\nedgeId：这是fox-edge的设备ID，可以通过首页查看这个ID\n', 1704459177016, 1704632459499),
	(265, 'channel-tcp-server', 'service', 'serverConfig', '{"logger": true, "servers": [{"engine": {"engineType": "Java", "keyHandler": "cn.foxtech.device.protocol.v1.zktl.air6in1.handler.ZktlServiceKeyHandler", "returnText": "", "splitHandler": "cn.foxtech.device.protocol.v1.zktl.air6in1.handler.ZktlSplitMessageHandler"}, "register": {"deviceName": "", "deviceType": "", "channelName": "", "manufacturer": ""}, "serverPort": 9301}, {"engine": {"register": {"deviceName": "消防用水五合一", "deviceType": "消防用水五合一（LoRaWan）", "channelName": "消防用水五合一", "manufacturer": "武汉中科图灵科技有限公司"}, "engineType": "JavaScript", "keyHandler": {"format": "TXT", "deviceType": "消防用水五合一（LoRaWan）", "manufacturer": "武汉中科图灵科技有限公司"}, "returnText": "", "splitHandler": {"format": "TXT", "deviceType": "消防用水五合一（LoRaWan）", "manufacturer": "武汉中科图灵科技有限公司"}}, "serverPort": 9302}, {"engine": {"register": {"deviceName": "HJ212-2017", "deviceType": "HJ212-2017", "channelName": "HJ212-2017", "manufacturer": "中国环境保护设备"}, "engineType": "JavaScript", "keyHandler": {"format": "TXT", "deviceType": "HJ212-2017", "manufacturer": "中国环境保护设备"}, "returnText": "GB2312", "splitHandler": {"format": "TXT", "deviceType": "HJ212-2017", "manufacturer": "中国环境保护设备"}}, "serverPort": 9303}], "jarFiles": [{"jarFile": "/jar/decoder/fox-edge-server-protocol-zktl-air6in1.v1.jar"}]}', '{}', 'tcp-server通道的配置信息：\n\n\n支持Java和JavaScript两种拆包和身份识别引擎引擎\n\njarFile：解码器所在的文件位置\nsplitHandler：拆包类的完整名称\nkeyHandler：提取设备身份信息的完整名称\n\nJava引擎时，要配置jar文件，并且以字符串的方式，指出类名称。\nJavaScript引擎时候，要配置JSP通道操作方法，并以对象的方式指明厂商和设备类型\nformat，指明的是收到的报文，以TXT格式还是以HEX格式的方式，传递给JavaScript脚本\nTXT，指的是TCP上传输的是一段文本流报文\nHEX，指的是TCP上传输的是一段二进制报文\n\nreturnText，要求返回数据时，进行文本化处理，主要是有些协议的内容，实际上是一个文本流\n', 1705326211139, 1705484263062),
	(266, 'channel-hikvision-fire', 'service', 'serverConfig', '{"logger": true, "register": {"deviceName": "海康威视", "deviceType": "消防主机", "channelName": "海康威视", "manufacturer": "海康威视"}, "serverPort": 9311}', '{}', '全局配置：通过配置该信息，来自动注册通道和设备对象\n\n{\n     "logger": false,--------------------------是否打印日志：测试阶段，打印日志来定位问题\n     "register": {------------------------------是否在设备接入的时候，自动注册设备对象和通道对象\n          "deviceName": "海康威视",----------设备名称前缀\n          "deviceType": "消防主机",------------设备类型\n          "channelName": "海康威视",---------通道名称前缀\n          "manufacturer": "海康威视"----------厂商名称\n     },\n     "serverPort": 9311-----------------------服务端口\n}', 1705328006760, 1705408225566),
	(268, 'manager-service', 'kernel', 'systemProcessConfig', '{"node-red": "node-red", "mysql-server": "/sbin/mysqld", "redis-server": "/bin/redis-server"}', '{}', '指明启动mysql和redis的命令行特征特征，使fox-edge可以通过ps命令找到这两个进程的内存和CPU占用率', 1706338719190, 1706338780433),
	(270, 'iot-fox-cloud', 'service', 'serverConfig', '{"local": {"lockdown": 60, "password": "12345678", "username": "admin"}, "remote": {"http": {"host": "http://192.168.1.21/prod-api", "lockdown": 60, "password": "12345678", "username": "fox-edge"}, "mode": "http", "mqtt": {"ip": "39.108.137.38", "name": "Mica-Mqtt-Client", "port": 1883, "enabled": true, "timeout": 5, "use-ssl": false, "version": "mqtt_3_1_1", "clientId": "000001", "password": "123456", "reconnect": true, "user-name": "mica", "re-interval": 5000, "clean-session": true, "keep-alive-secs": 60, "buffer-allocator": "heap", "read-buffer-size": "8KB", "max-bytes-in-message": "10MB"}}}', '{"list": [{"saveMode": "Raw", "showMode": "Security", "fieldName": "local.password", "valueType": "string", "defaultValue": ""}, {"saveMode": "Raw", "showMode": "Security", "fieldName": "cloud.http.password", "valueType": "string", "defaultValue": ""}, {"saveMode": "Raw", "showMode": "Security", "fieldName": "cloud.mqtt.password", "valueType": "string", "defaultValue": ""}]}', 'proxy-cloud-service服务所需要的云端配置：  \n\n1. cloud\n跟fox-cloud连接的云端配置\n\nmode：连接模式，参数可以是 mqtt 和 http\nmqtt：mqtt模式下的参数，此时使用MQTT协议，把数据发送到fox-cloud\nhttp： http模式下的参数，此时使用http协议，把数据发送到fox-cloud\n\n1.1 cloud -> http\nhost：云端fox-cloud的API服务器\nusername：fox-cloud上的账号\npassword：fox-cloud上的密码\nlockdown：为了避免登录失败后，反复登录fox-cloud，需要等待一段时间，避免被fox-cloud认为是恶意攻击\n\n1.2 cloud -> mqtt\n连接云端MQTT Broker的MQTT配置\n\nenabled: true   # 是否开启客户端，默认：true\nip: 120.79.69.201  # 连接的服务端 ip ，默认：127.0.0.1\nport: 1883  # 端口：默认：1883\nname: Mica-Mqtt-Client  # 名称，默认：Mica-Mqtt-Client\nclientId: 000001# 客户端Id（非常重要，一般为设备 sn，不可重复）\nuser-name: mica # 认证的用户名\npassword: 123456# 认证的密码\ntimeout: 5  # 超时时间，单位：秒，默认：5秒\nreconnect: true # 是否重连，默认：true\nre-interval: 5000   # 重连时间，默认 5000 毫秒\nversion: mqtt_3_1_1 # mqtt 协议版本，可选 MQTT_3_1、mqtt_3_1_1、mqtt_5，默认：mqtt_3_1_1\nread-buffer-size: 8KB   # 接收数据的 buffer size，默认：8k\nmax-bytes-in-message: 10MB  # 消息解析最大 bytes 长度，默认：10M\nbuffer-allocator: heap  # 堆内存和堆外内存，默认：堆内存\nkeep-alive-secs: 60 # keep-alive 时间，单位：秒\nclean-session: true # mqtt clean session，默认：true\nuse-ssl: false  # 是否启用 ssl，默认：false\n\n\n2. local\n接受云端操作请求的时候，fox-edge的登录账号信息，此时会通过配置信息，会接受云端MQTT代理的操作请求\n\nusername：fox-edge上的账号\npassword：fox-edge上的密码\nlockdown：为了避免登录失败后，反复登录fox-cloud，需要等待一段时间，避免被fox-cloud认为是恶意攻击', 1710052493382, 1710052515037),
	(273, 'device-service', 'system', 'serverConfig', '{"logger":true,"deviceName":"范例（ModBus）：正泰三相电表DT-SU666"}', '{}', '配置说明：记录某个设备的通信日志\n{\n     "logger": true, -----------------------------------是否记录后台日志\n     "deviceName": "范例：TCL柜式空调(KPRd)"-----指定的设备名称\n}', 1711282394239, 1712026634668),
	(274, 'device-graalvm', 'system', 'serverConfig', '{"logger": true, "deviceName": "范例：海悟基站空调"}', '{}', '配置说明：记录某个设备的通信日志\n{\n     "logger": true, -----------------------------------是否记录后台日志\n     "deviceName": "范例：TCL柜式空调(KPRd)"-----指定的设备名称\n}', 1711282454695, 1711805113827),
	(275, 'channel-serialport', 'service', 'serverConfig', '{"logger": true, "channelName": "Win32 COM2"}', '{}', '配置说明：记录某个通道的通信日志\n{\n     "logger": true, -----------------------------------是否记录后台日志\n     "channelName": "Linux COM1"-----指定的通道名称\n}', 1711687374258, 1711687469798);

-- 正在导出表  fox_edge.tb_device 的数据：~1,083 rows (大约)
DELETE FROM `tb_device`;
INSERT INTO `tb_device` (`id`, `device_name`, `device_type`, `manufacturer`, `channel_type`, `channel_name`, `device_param`, `extend_param`, `create_time`, `update_time`) VALUES
	(1, 'LRW单板', 'LRW解码器', '', 'simulator', 'channel-simulator', '{"device_addr": "1"}', '{"token": "", "remark": "test1"}', 1652275102255, 1698385644134),
	(2, '浙江移动门禁设备', 'BASS260ZJ', '广东高新兴', 'simulator', 'channel-simulator', '{"device_addr": "1"}', '{}', 1652275102255, 1652275102174),
	(3, '浙江移动-丽水移动-丹霞山5号基站-4号电源设备', 'ZXDU58', '中兴通讯', 'simulator', 'channel-simulator', '{}', '{}', 1652275102255, 1652275102427),
	(8, 'ModBus11', 'ModBus Device', 'Fox Edge', 'simulator', 'channel-simulator', '{"device_addr": 1, "device_ref_template": "CE+T UPS:模板"}', '{}', 1652275102255, 1652275115206),
	(9, 'ModSim32', 'ModBus Device', 'Fox Edge', 'tcp-client', 'Tcp-Client', '{"reg_cnt": 10, "reg_addr": 1, "table_name": "101.CETUPS_Read System Measures Table.csv", "device_addr": 1, "modbus_mode": "RTU", "operate_name": "Read Holding Register", "template_name": "Read System Measures Table"}', '{"remark": "", "huaweiIotDA": false, "thingsboardHttpToken": "", "thingspanelHttpToken": ""}', 1652275102255, 1699516062792),
	(11, '欧姆龙FINS设备', 'omron-fins', 'omron', 'simulator', 'channel-simulator', '{"CNT": 1, "DA1": 10, "FMT": "Short", "GCT": 2, "ICF": "80", "SA1": 113, "SID": 255, "AREA": "B1", "BADR": 0, "NAME": "数值", "WADR": 10}', '{}', 1652275102255, 1652275120859),
	(155, '浙江移动-丽水移动-丹霞山5号基站-4号电源设备:155', 'ModBus Device', 'Fox Edge', 'simulator', 'channel-simulator', '{"device_addr": 1, "device_ref_template": "CE+T UPS:模板"}', '{}', 1652275102255, 1652275115206),
	(506, '浙江移动-丽水移动-丹霞山5号基站-4号电源设备:506', 'ModBus Device', 'Fox Edge', 'simulator', 'channel-simulator', '{"device_addr": 1, "device_ref_template": "CE+T UPS:模板"}', '{}', 1652275102255, 1694833770856),
	(622, '浙江移动-丽水移动-丹霞山5号基站-4号电源设备:622', 'ModBus Device', 'Fox Edge', 'mqtt_client', '/v1/device/request/12345', '{"device_addr": 1, "device_ref_template": "CE+T UPS:模板"}', '{}', 1652275102255, 1652275125371),
	(623, '浙江移动-丽水移动-丹霞山5号基站-4号电源设备:623', 'BASS260ZJ', '广东高新兴', 'simulator', 'channel-simulator', '{"device_addr": "1"}', '{}', 1652275102255, 1652275125371),
	(749, '广州格丹纳全自动消解控制器', '全自动消解控制器', '广州格丹纳仪器有限公司', 'simulator', 'channel-simulator', '{"设备地址": 227204, "子设备地址": 3}', '{}', 1652275102255, 1666664603062),
	(1176, 'wwww', 'BASS260ZJ', '广东高新兴', 'simulator', 'channel-simulator', '{}', '{}', 1666677829396, 1669205973861),
	(1178, 'wwwww', 'BASS260ZJ', '广东高新兴', 'simulator', 'channel-simulator', '{}', '{}', 1666680013238, 1672233759766),
	(1179, 'ww', 'BASS260ZJ', '广东高新兴', 'simulator', 'channel-simulator', '{"reg_cnt": 10, "reg_addr": 1, "table_name": "101.CETUPS_Read System Measures Table.csv", "device_addr": 1, "modbus_mode": "RTU", "operate_name": "Read Holding Register", "template_name": "Read System Measures Table"}', '{}', 1666682005211, 1669205966235),
	(1180, 'www', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"reg_cnt": 10, "reg_addr": 1, "table_name": "101.CETUPS_Read System Measures Table.csv", "device_addr": 1, "modbus_mode": "RTU", "operate_name": "Read Holding Register", "template_name": "Read System Measures Table"}', '{}', 1666692263837, 1669205951743),
	(1184, 'ddd', 'BASS260ZJ', '广东高新兴', 'simulator', 'channel-simulator', '{}', '{}', 1668690924788, 1668839143769),
	(1185, 'wew', 'BASS260ZJ', '广东高新兴', 'simulator', 'channel-simulator', '{}', '{}', 1668690933399, 1668839134387),
	(1186, 'CE+T UPS设备-1', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1187, 'CE+T UPS设备-2', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1188, 'CE+T UPS设备-3', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1189, 'CE+T UPS设备-4', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1190, 'CE+T UPS设备-5', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1191, 'CE+T UPS设备-6', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1192, 'CE+T UPS设备-7', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1193, 'CE+T UPS设备-8', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1194, 'CE+T UPS设备-9', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1195, 'CE+T UPS设备-10', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1196, 'CE+T UPS设备-11', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1197, 'CE+T UPS设备-12', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1198, 'CE+T UPS设备-13', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1199, 'CE+T UPS设备-14', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1200, 'CE+T UPS设备-15', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1201, 'CE+T UPS设备-16', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1202, 'CE+T UPS设备-17', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1203, 'CE+T UPS设备-18', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1204, 'CE+T UPS设备-19', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1205, 'CE+T UPS设备-20', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1206, 'CE+T UPS设备-21', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1207, 'CE+T UPS设备-22', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1208, 'CE+T UPS设备-23', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1209, 'CE+T UPS设备-24', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1210, 'CE+T UPS设备-25', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1211, 'CE+T UPS设备-26', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1212, 'CE+T UPS设备-27', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1213, 'CE+T UPS设备-28', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1214, 'CE+T UPS设备-29', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1215, 'CE+T UPS设备-30', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1216, 'CE+T UPS设备-31', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1217, 'CE+T UPS设备-32', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1218, 'CE+T UPS设备-33', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1219, 'CE+T UPS设备-34', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1220, 'CE+T UPS设备-35', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1221, 'CE+T UPS设备-36', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1222, 'CE+T UPS设备-37', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1223, 'CE+T UPS设备-38', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1224, 'CE+T UPS设备-39', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1225, 'CE+T UPS设备-40', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1226, 'CE+T UPS设备-41', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1227, 'CE+T UPS设备-42', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1228, 'CE+T UPS设备-43', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1229, 'CE+T UPS设备-44', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1230, 'CE+T UPS设备-45', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1231, 'CE+T UPS设备-46', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1232, 'CE+T UPS设备-47', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1233, 'CE+T UPS设备-48', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1234, 'CE+T UPS设备-49', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1235, 'CE+T UPS设备-50', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1236, 'CE+T UPS设备-51', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1237, 'CE+T UPS设备-52', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1238, 'CE+T UPS设备-53', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1239, 'CE+T UPS设备-54', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1240, 'CE+T UPS设备-55', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1241, 'CE+T UPS设备-56', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1242, 'CE+T UPS设备-57', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1243, 'CE+T UPS设备-58', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1244, 'CE+T UPS设备-59', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1245, 'CE+T UPS设备-60', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1246, 'CE+T UPS设备-61', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1247, 'CE+T UPS设备-62', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1248, 'CE+T UPS设备-63', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1249, 'CE+T UPS设备-64', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1250, 'CE+T UPS设备-65', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1251, 'CE+T UPS设备-66', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1252, 'CE+T UPS设备-67', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1253, 'CE+T UPS设备-68', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1254, 'CE+T UPS设备-69', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1255, 'CE+T UPS设备-70', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1256, 'CE+T UPS设备-71', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1257, 'CE+T UPS设备-72', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1258, 'CE+T UPS设备-73', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1259, 'CE+T UPS设备-74', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1260, 'CE+T UPS设备-75', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1261, 'CE+T UPS设备-76', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1262, 'CE+T UPS设备-77', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1263, 'CE+T UPS设备-78', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1264, 'CE+T UPS设备-79', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1265, 'CE+T UPS设备-80', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1266, 'CE+T UPS设备-81', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1267, 'CE+T UPS设备-82', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1268, 'CE+T UPS设备-83', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1269, 'CE+T UPS设备-84', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1270, 'CE+T UPS设备-85', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1271, 'CE+T UPS设备-86', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1272, 'CE+T UPS设备-87', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1273, 'CE+T UPS设备-88', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1274, 'CE+T UPS设备-89', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1275, 'CE+T UPS设备-90', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1276, 'CE+T UPS设备-91', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1277, 'CE+T UPS设备-92', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1278, 'CE+T UPS设备-93', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1279, 'CE+T UPS设备-94', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1280, 'CE+T UPS设备-95', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1281, 'CE+T UPS设备-96', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1282, 'CE+T UPS设备-97', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1283, 'CE+T UPS设备-98', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1284, 'CE+T UPS设备-99', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1285, 'CE+T UPS设备-100', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1286, 'CE+T UPS设备-101', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1287, 'CE+T UPS设备-102', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1288, 'CE+T UPS设备-103', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1289, 'CE+T UPS设备-104', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1290, 'CE+T UPS设备-105', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1291, 'CE+T UPS设备-106', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1292, 'CE+T UPS设备-107', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1293, 'CE+T UPS设备-108', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1294, 'CE+T UPS设备-109', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1295, 'CE+T UPS设备-110', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1296, 'CE+T UPS设备-111', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1297, 'CE+T UPS设备-112', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1298, 'CE+T UPS设备-113', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1299, 'CE+T UPS设备-114', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1300, 'CE+T UPS设备-115', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1301, 'CE+T UPS设备-116', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1302, 'CE+T UPS设备-117', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1303, 'CE+T UPS设备-118', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1304, 'CE+T UPS设备-119', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1305, 'CE+T UPS设备-120', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1306, 'CE+T UPS设备-121', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1307, 'CE+T UPS设备-122', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1308, 'CE+T UPS设备-123', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1309, 'CE+T UPS设备-124', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1310, 'CE+T UPS设备-125', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1311, 'CE+T UPS设备-126', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1312, 'CE+T UPS设备-127', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1313, 'CE+T UPS设备-128', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1314, 'CE+T UPS设备-129', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1315, 'CE+T UPS设备-130', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1316, 'CE+T UPS设备-131', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1317, 'CE+T UPS设备-132', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1318, 'CE+T UPS设备-133', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1319, 'CE+T UPS设备-134', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1320, 'CE+T UPS设备-135', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1321, 'CE+T UPS设备-136', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1322, 'CE+T UPS设备-137', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1323, 'CE+T UPS设备-138', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1324, 'CE+T UPS设备-139', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1325, 'CE+T UPS设备-140', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1326, 'CE+T UPS设备-141', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1327, 'CE+T UPS设备-142', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1328, 'CE+T UPS设备-143', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1329, 'CE+T UPS设备-144', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1330, 'CE+T UPS设备-145', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1331, 'CE+T UPS设备-146', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1332, 'CE+T UPS设备-147', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1333, 'CE+T UPS设备-148', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1334, 'CE+T UPS设备-149', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1335, 'CE+T UPS设备-150', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1336, 'CE+T UPS设备-151', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1337, 'CE+T UPS设备-152', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1338, 'CE+T UPS设备-153', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1339, 'CE+T UPS设备-154', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1340, 'CE+T UPS设备-155', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1341, 'CE+T UPS设备-156', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1342, 'CE+T UPS设备-157', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1343, 'CE+T UPS设备-158', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1344, 'CE+T UPS设备-159', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1345, 'CE+T UPS设备-160', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1346, 'CE+T UPS设备-161', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1347, 'CE+T UPS设备-162', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1348, 'CE+T UPS设备-163', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1349, 'CE+T UPS设备-164', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1350, 'CE+T UPS设备-165', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1351, 'CE+T UPS设备-166', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1352, 'CE+T UPS设备-167', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1353, 'CE+T UPS设备-168', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1354, 'CE+T UPS设备-169', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1355, 'CE+T UPS设备-170', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1356, 'CE+T UPS设备-171', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1357, 'CE+T UPS设备-172', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1358, 'CE+T UPS设备-173', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1359, 'CE+T UPS设备-174', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1360, 'CE+T UPS设备-175', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1361, 'CE+T UPS设备-176', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1362, 'CE+T UPS设备-177', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1363, 'CE+T UPS设备-178', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1364, 'CE+T UPS设备-179', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1365, 'CE+T UPS设备-180', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1366, 'CE+T UPS设备-181', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1367, 'CE+T UPS设备-182', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1368, 'CE+T UPS设备-183', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1369, 'CE+T UPS设备-184', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1370, 'CE+T UPS设备-185', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1371, 'CE+T UPS设备-186', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1372, 'CE+T UPS设备-187', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1373, 'CE+T UPS设备-188', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1374, 'CE+T UPS设备-189', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1375, 'CE+T UPS设备-190', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1376, 'CE+T UPS设备-191', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1377, 'CE+T UPS设备-192', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1378, 'CE+T UPS设备-193', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1379, 'CE+T UPS设备-194', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1380, 'CE+T UPS设备-195', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1381, 'CE+T UPS设备-196', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1382, 'CE+T UPS设备-197', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1383, 'CE+T UPS设备-198', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1384, 'CE+T UPS设备-199', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1385, 'CE+T UPS设备-200', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1386, 'CE+T UPS设备-201', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1387, 'CE+T UPS设备-202', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1388, 'CE+T UPS设备-203', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1389, 'CE+T UPS设备-204', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1390, 'CE+T UPS设备-205', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1391, 'CE+T UPS设备-206', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1392, 'CE+T UPS设备-207', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1393, 'CE+T UPS设备-208', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1394, 'CE+T UPS设备-209', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1395, 'CE+T UPS设备-210', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1396, 'CE+T UPS设备-211', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1397, 'CE+T UPS设备-212', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1398, 'CE+T UPS设备-213', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1399, 'CE+T UPS设备-214', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1400, 'CE+T UPS设备-215', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1401, 'CE+T UPS设备-216', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1402, 'CE+T UPS设备-217', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1403, 'CE+T UPS设备-218', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1404, 'CE+T UPS设备-219', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1405, 'CE+T UPS设备-220', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1406, 'CE+T UPS设备-221', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1407, 'CE+T UPS设备-222', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1408, 'CE+T UPS设备-223', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1409, 'CE+T UPS设备-224', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1410, 'CE+T UPS设备-225', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1411, 'CE+T UPS设备-226', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1412, 'CE+T UPS设备-227', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1413, 'CE+T UPS设备-228', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1414, 'CE+T UPS设备-229', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1415, 'CE+T UPS设备-230', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1416, 'CE+T UPS设备-231', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1417, 'CE+T UPS设备-232', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1418, 'CE+T UPS设备-233', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1419, 'CE+T UPS设备-234', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1420, 'CE+T UPS设备-235', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1421, 'CE+T UPS设备-236', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1422, 'CE+T UPS设备-237', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1423, 'CE+T UPS设备-238', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1424, 'CE+T UPS设备-239', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1425, 'CE+T UPS设备-240', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1426, 'CE+T UPS设备-241', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1427, 'CE+T UPS设备-242', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1428, 'CE+T UPS设备-243', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1429, 'CE+T UPS设备-244', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1430, 'CE+T UPS设备-245', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1431, 'CE+T UPS设备-246', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1432, 'CE+T UPS设备-247', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1433, 'CE+T UPS设备-248', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1434, 'CE+T UPS设备-249', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1435, 'CE+T UPS设备-250', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1436, 'CE+T UPS设备-251', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1437, 'CE+T UPS设备-252', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1438, 'CE+T UPS设备-253', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1439, 'CE+T UPS设备-254', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1440, 'CE+T UPS设备-255', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1441, 'CE+T UPS设备-256', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1442, 'CE+T UPS设备-257', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1443, 'CE+T UPS设备-258', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1444, 'CE+T UPS设备-259', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1445, 'CE+T UPS设备-260', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1446, 'CE+T UPS设备-261', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1447, 'CE+T UPS设备-262', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1448, 'CE+T UPS设备-263', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1449, 'CE+T UPS设备-264', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1450, 'CE+T UPS设备-265', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1451, 'CE+T UPS设备-266', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1452, 'CE+T UPS设备-267', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1453, 'CE+T UPS设备-268', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1454, 'CE+T UPS设备-269', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1455, 'CE+T UPS设备-270', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1456, 'CE+T UPS设备-271', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1457, 'CE+T UPS设备-272', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1458, 'CE+T UPS设备-273', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1459, 'CE+T UPS设备-274', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1460, 'CE+T UPS设备-275', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1461, 'CE+T UPS设备-276', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1462, 'CE+T UPS设备-277', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1463, 'CE+T UPS设备-278', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1464, 'CE+T UPS设备-279', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1465, 'CE+T UPS设备-280', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1466, 'CE+T UPS设备-281', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1467, 'CE+T UPS设备-282', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1468, 'CE+T UPS设备-283', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1469, 'CE+T UPS设备-284', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1470, 'CE+T UPS设备-285', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1471, 'CE+T UPS设备-286', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1472, 'CE+T UPS设备-287', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1473, 'CE+T UPS设备-288', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1474, 'CE+T UPS设备-289', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1475, 'CE+T UPS设备-290', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1476, 'CE+T UPS设备-291', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1477, 'CE+T UPS设备-292', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1478, 'CE+T UPS设备-293', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1479, 'CE+T UPS设备-294', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1480, 'CE+T UPS设备-295', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1481, 'CE+T UPS设备-296', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1482, 'CE+T UPS设备-297', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1483, 'CE+T UPS设备-298', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1484, 'CE+T UPS设备-299', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1485, 'CE+T UPS设备-300', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1486, 'CE+T UPS设备-301', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1487, 'CE+T UPS设备-302', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1488, 'CE+T UPS设备-303', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1489, 'CE+T UPS设备-304', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1490, 'CE+T UPS设备-305', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1491, 'CE+T UPS设备-306', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1492, 'CE+T UPS设备-307', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1493, 'CE+T UPS设备-308', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1494, 'CE+T UPS设备-309', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1495, 'CE+T UPS设备-310', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1496, 'CE+T UPS设备-311', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1497, 'CE+T UPS设备-312', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1498, 'CE+T UPS设备-313', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1499, 'CE+T UPS设备-314', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1500, 'CE+T UPS设备-315', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1501, 'CE+T UPS设备-316', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1502, 'CE+T UPS设备-317', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1503, 'CE+T UPS设备-318', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1504, 'CE+T UPS设备-319', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1505, 'CE+T UPS设备-320', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1506, 'CE+T UPS设备-321', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1507, 'CE+T UPS设备-322', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1508, 'CE+T UPS设备-323', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1509, 'CE+T UPS设备-324', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1510, 'CE+T UPS设备-325', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1511, 'CE+T UPS设备-326', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1512, 'CE+T UPS设备-327', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1513, 'CE+T UPS设备-328', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1514, 'CE+T UPS设备-329', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1515, 'CE+T UPS设备-330', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1516, 'CE+T UPS设备-331', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1517, 'CE+T UPS设备-332', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1518, 'CE+T UPS设备-333', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1519, 'CE+T UPS设备-334', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1520, 'CE+T UPS设备-335', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1521, 'CE+T UPS设备-336', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1522, 'CE+T UPS设备-337', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1523, 'CE+T UPS设备-338', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1524, 'CE+T UPS设备-339', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1525, 'CE+T UPS设备-340', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1526, 'CE+T UPS设备-341', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1527, 'CE+T UPS设备-342', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1528, 'CE+T UPS设备-343', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1529, 'CE+T UPS设备-344', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1530, 'CE+T UPS设备-345', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1531, 'CE+T UPS设备-346', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1532, 'CE+T UPS设备-347', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1533, 'CE+T UPS设备-348', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1534, 'CE+T UPS设备-349', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1535, 'CE+T UPS设备-350', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1536, 'CE+T UPS设备-351', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1537, 'CE+T UPS设备-352', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1538, 'CE+T UPS设备-353', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1539, 'CE+T UPS设备-354', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1540, 'CE+T UPS设备-355', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1541, 'CE+T UPS设备-356', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1542, 'CE+T UPS设备-357', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1543, 'CE+T UPS设备-358', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1544, 'CE+T UPS设备-359', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1545, 'CE+T UPS设备-360', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1546, 'CE+T UPS设备-361', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1547, 'CE+T UPS设备-362', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1548, 'CE+T UPS设备-363', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1549, 'CE+T UPS设备-364', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1550, 'CE+T UPS设备-365', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1551, 'CE+T UPS设备-366', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1552, 'CE+T UPS设备-367', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1553, 'CE+T UPS设备-368', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1554, 'CE+T UPS设备-369', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1555, 'CE+T UPS设备-370', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1556, 'CE+T UPS设备-371', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1557, 'CE+T UPS设备-372', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1558, 'CE+T UPS设备-373', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1559, 'CE+T UPS设备-374', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1560, 'CE+T UPS设备-375', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1561, 'CE+T UPS设备-376', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1562, 'CE+T UPS设备-377', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1563, 'CE+T UPS设备-378', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1564, 'CE+T UPS设备-379', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1565, 'CE+T UPS设备-380', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1566, 'CE+T UPS设备-381', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1567, 'CE+T UPS设备-382', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1568, 'CE+T UPS设备-383', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1569, 'CE+T UPS设备-384', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1570, 'CE+T UPS设备-385', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1571, 'CE+T UPS设备-386', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1572, 'CE+T UPS设备-387', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1573, 'CE+T UPS设备-388', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1574, 'CE+T UPS设备-389', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1575, 'CE+T UPS设备-390', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1576, 'CE+T UPS设备-391', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1577, 'CE+T UPS设备-392', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1578, 'CE+T UPS设备-393', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1579, 'CE+T UPS设备-394', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1580, 'CE+T UPS设备-395', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1581, 'CE+T UPS设备-396', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1582, 'CE+T UPS设备-397', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1583, 'CE+T UPS设备-398', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1584, 'CE+T UPS设备-399', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1585, 'CE+T UPS设备-400', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1586, 'CE+T UPS设备-401', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1587, 'CE+T UPS设备-402', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1588, 'CE+T UPS设备-403', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1589, 'CE+T UPS设备-404', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1590, 'CE+T UPS设备-405', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1591, 'CE+T UPS设备-406', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1592, 'CE+T UPS设备-407', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1593, 'CE+T UPS设备-408', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1594, 'CE+T UPS设备-409', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1595, 'CE+T UPS设备-410', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1596, 'CE+T UPS设备-411', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1597, 'CE+T UPS设备-412', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1598, 'CE+T UPS设备-413', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1599, 'CE+T UPS设备-414', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1600, 'CE+T UPS设备-415', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1601, 'CE+T UPS设备-416', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1602, 'CE+T UPS设备-417', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1603, 'CE+T UPS设备-418', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1604, 'CE+T UPS设备-419', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1605, 'CE+T UPS设备-420', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1606, 'CE+T UPS设备-421', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1607, 'CE+T UPS设备-422', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1608, 'CE+T UPS设备-423', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1609, 'CE+T UPS设备-424', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1610, 'CE+T UPS设备-425', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1611, 'CE+T UPS设备-426', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1612, 'CE+T UPS设备-427', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1613, 'CE+T UPS设备-428', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1614, 'CE+T UPS设备-429', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1615, 'CE+T UPS设备-430', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1616, 'CE+T UPS设备-431', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1617, 'CE+T UPS设备-432', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1618, 'CE+T UPS设备-433', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1619, 'CE+T UPS设备-434', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1620, 'CE+T UPS设备-435', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1621, 'CE+T UPS设备-436', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1622, 'CE+T UPS设备-437', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1623, 'CE+T UPS设备-438', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1624, 'CE+T UPS设备-439', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1625, 'CE+T UPS设备-440', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1626, 'CE+T UPS设备-441', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1627, 'CE+T UPS设备-442', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1628, 'CE+T UPS设备-443', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1629, 'CE+T UPS设备-444', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1630, 'CE+T UPS设备-445', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1631, 'CE+T UPS设备-446', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1632, 'CE+T UPS设备-447', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1633, 'CE+T UPS设备-448', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1634, 'CE+T UPS设备-449', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1635, 'CE+T UPS设备-450', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1636, 'CE+T UPS设备-451', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1637, 'CE+T UPS设备-452', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1638, 'CE+T UPS设备-453', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1639, 'CE+T UPS设备-454', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1640, 'CE+T UPS设备-455', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1641, 'CE+T UPS设备-456', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1642, 'CE+T UPS设备-457', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1643, 'CE+T UPS设备-458', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1644, 'CE+T UPS设备-459', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1645, 'CE+T UPS设备-460', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1646, 'CE+T UPS设备-461', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1647, 'CE+T UPS设备-462', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1648, 'CE+T UPS设备-463', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1649, 'CE+T UPS设备-464', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1650, 'CE+T UPS设备-465', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1651, 'CE+T UPS设备-466', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1652, 'CE+T UPS设备-467', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1653, 'CE+T UPS设备-468', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1654, 'CE+T UPS设备-469', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1655, 'CE+T UPS设备-470', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1656, 'CE+T UPS设备-471', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1657, 'CE+T UPS设备-472', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1658, 'CE+T UPS设备-473', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1659, 'CE+T UPS设备-474', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1660, 'CE+T UPS设备-475', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1661, 'CE+T UPS设备-476', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1662, 'CE+T UPS设备-477', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1663, 'CE+T UPS设备-478', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1664, 'CE+T UPS设备-479', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1665, 'CE+T UPS设备-480', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1666, 'CE+T UPS设备-481', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1667, 'CE+T UPS设备-482', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1668, 'CE+T UPS设备-483', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1669, 'CE+T UPS设备-484', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1670, 'CE+T UPS设备-485', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1671, 'CE+T UPS设备-486', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1672, 'CE+T UPS设备-487', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1673, 'CE+T UPS设备-488', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1674, 'CE+T UPS设备-489', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1675, 'CE+T UPS设备-490', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1676, 'CE+T UPS设备-491', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1677, 'CE+T UPS设备-492', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1678, 'CE+T UPS设备-493', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1679, 'CE+T UPS设备-494', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1680, 'CE+T UPS设备-495', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1681, 'CE+T UPS设备-496', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1682, 'CE+T UPS设备-497', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1683, 'CE+T UPS设备-498', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1684, 'CE+T UPS设备-499', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1685, 'CE+T UPS设备-500', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1686, 'CE+T UPS设备-501', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1687, 'CE+T UPS设备-502', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1688, 'CE+T UPS设备-503', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1689, 'CE+T UPS设备-504', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1690, 'CE+T UPS设备-505', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1691, 'CE+T UPS设备-506', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1692, 'CE+T UPS设备-507', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1693, 'CE+T UPS设备-508', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1694, 'CE+T UPS设备-509', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1695, 'CE+T UPS设备-510', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1696, 'CE+T UPS设备-511', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1697, 'CE+T UPS设备-512', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1698, 'CE+T UPS设备-513', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1699, 'CE+T UPS设备-514', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1700, 'CE+T UPS设备-515', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1701, 'CE+T UPS设备-516', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1702, 'CE+T UPS设备-517', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1703, 'CE+T UPS设备-518', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1704, 'CE+T UPS设备-519', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1705, 'CE+T UPS设备-520', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1706, 'CE+T UPS设备-521', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1707, 'CE+T UPS设备-522', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1708, 'CE+T UPS设备-523', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1709, 'CE+T UPS设备-524', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1710, 'CE+T UPS设备-525', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1711, 'CE+T UPS设备-526', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1712, 'CE+T UPS设备-527', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1713, 'CE+T UPS设备-528', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1714, 'CE+T UPS设备-529', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1715, 'CE+T UPS设备-530', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1716, 'CE+T UPS设备-531', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1717, 'CE+T UPS设备-532', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1718, 'CE+T UPS设备-533', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1719, 'CE+T UPS设备-534', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1720, 'CE+T UPS设备-535', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1721, 'CE+T UPS设备-536', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1722, 'CE+T UPS设备-537', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1723, 'CE+T UPS设备-538', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1724, 'CE+T UPS设备-539', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1725, 'CE+T UPS设备-540', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1726, 'CE+T UPS设备-541', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1727, 'CE+T UPS设备-542', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1728, 'CE+T UPS设备-543', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1729, 'CE+T UPS设备-544', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1730, 'CE+T UPS设备-545', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1731, 'CE+T UPS设备-546', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1732, 'CE+T UPS设备-547', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1733, 'CE+T UPS设备-548', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1734, 'CE+T UPS设备-549', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1735, 'CE+T UPS设备-550', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1736, 'CE+T UPS设备-551', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1737, 'CE+T UPS设备-552', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1738, 'CE+T UPS设备-553', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1739, 'CE+T UPS设备-554', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1740, 'CE+T UPS设备-555', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1741, 'CE+T UPS设备-556', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1742, 'CE+T UPS设备-557', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1743, 'CE+T UPS设备-558', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1744, 'CE+T UPS设备-559', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1745, 'CE+T UPS设备-560', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1746, 'CE+T UPS设备-561', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1747, 'CE+T UPS设备-562', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1748, 'CE+T UPS设备-563', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1749, 'CE+T UPS设备-564', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1750, 'CE+T UPS设备-565', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1751, 'CE+T UPS设备-566', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1752, 'CE+T UPS设备-567', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1753, 'CE+T UPS设备-568', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1754, 'CE+T UPS设备-569', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1755, 'CE+T UPS设备-570', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1756, 'CE+T UPS设备-571', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1757, 'CE+T UPS设备-572', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1758, 'CE+T UPS设备-573', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1759, 'CE+T UPS设备-574', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1760, 'CE+T UPS设备-575', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1761, 'CE+T UPS设备-576', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1762, 'CE+T UPS设备-577', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1763, 'CE+T UPS设备-578', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1764, 'CE+T UPS设备-579', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1765, 'CE+T UPS设备-580', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1766, 'CE+T UPS设备-581', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1767, 'CE+T UPS设备-582', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1768, 'CE+T UPS设备-583', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1769, 'CE+T UPS设备-584', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1770, 'CE+T UPS设备-585', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1771, 'CE+T UPS设备-586', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1772, 'CE+T UPS设备-587', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1773, 'CE+T UPS设备-588', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1774, 'CE+T UPS设备-589', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1775, 'CE+T UPS设备-590', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1776, 'CE+T UPS设备-591', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1777, 'CE+T UPS设备-592', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1778, 'CE+T UPS设备-593', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1779, 'CE+T UPS设备-594', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1780, 'CE+T UPS设备-595', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1781, 'CE+T UPS设备-596', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1782, 'CE+T UPS设备-597', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1783, 'CE+T UPS设备-598', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1784, 'CE+T UPS设备-599', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1785, 'CE+T UPS设备-600', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1786, 'CE+T UPS设备-601', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1787, 'CE+T UPS设备-602', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1788, 'CE+T UPS设备-603', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1789, 'CE+T UPS设备-604', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1790, 'CE+T UPS设备-605', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1791, 'CE+T UPS设备-606', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1792, 'CE+T UPS设备-607', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1793, 'CE+T UPS设备-608', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1794, 'CE+T UPS设备-609', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1795, 'CE+T UPS设备-610', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1796, 'CE+T UPS设备-611', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1797, 'CE+T UPS设备-612', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1798, 'CE+T UPS设备-613', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1799, 'CE+T UPS设备-614', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1800, 'CE+T UPS设备-615', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1801, 'CE+T UPS设备-616', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1802, 'CE+T UPS设备-617', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1803, 'CE+T UPS设备-618', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1804, 'CE+T UPS设备-619', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1805, 'CE+T UPS设备-620', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1806, 'CE+T UPS设备-621', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1807, 'CE+T UPS设备-622', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1808, 'CE+T UPS设备-623', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1809, 'CE+T UPS设备-624', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1810, 'CE+T UPS设备-625', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1811, 'CE+T UPS设备-626', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1812, 'CE+T UPS设备-627', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1813, 'CE+T UPS设备-628', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1814, 'CE+T UPS设备-629', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1815, 'CE+T UPS设备-630', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1816, 'CE+T UPS设备-631', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1817, 'CE+T UPS设备-632', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1818, 'CE+T UPS设备-633', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1819, 'CE+T UPS设备-634', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1820, 'CE+T UPS设备-635', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1821, 'CE+T UPS设备-636', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1822, 'CE+T UPS设备-637', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1823, 'CE+T UPS设备-638', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1824, 'CE+T UPS设备-639', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1825, 'CE+T UPS设备-640', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1826, 'CE+T UPS设备-641', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1827, 'CE+T UPS设备-642', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1828, 'CE+T UPS设备-643', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1829, 'CE+T UPS设备-644', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1830, 'CE+T UPS设备-645', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1831, 'CE+T UPS设备-646', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1832, 'CE+T UPS设备-647', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1833, 'CE+T UPS设备-648', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1834, 'CE+T UPS设备-649', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1835, 'CE+T UPS设备-650', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1836, 'CE+T UPS设备-651', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1837, 'CE+T UPS设备-652', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1838, 'CE+T UPS设备-653', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1839, 'CE+T UPS设备-654', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1840, 'CE+T UPS设备-655', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1841, 'CE+T UPS设备-656', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1842, 'CE+T UPS设备-657', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1843, 'CE+T UPS设备-658', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1844, 'CE+T UPS设备-659', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1845, 'CE+T UPS设备-660', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1846, 'CE+T UPS设备-661', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1847, 'CE+T UPS设备-662', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1848, 'CE+T UPS设备-663', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1849, 'CE+T UPS设备-664', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1850, 'CE+T UPS设备-665', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1851, 'CE+T UPS设备-666', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1852, 'CE+T UPS设备-667', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1853, 'CE+T UPS设备-668', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1854, 'CE+T UPS设备-669', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1855, 'CE+T UPS设备-670', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1856, 'CE+T UPS设备-671', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1857, 'CE+T UPS设备-672', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1858, 'CE+T UPS设备-673', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1859, 'CE+T UPS设备-674', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1860, 'CE+T UPS设备-675', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1861, 'CE+T UPS设备-676', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1862, 'CE+T UPS设备-677', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1863, 'CE+T UPS设备-678', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1864, 'CE+T UPS设备-679', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1865, 'CE+T UPS设备-680', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1866, 'CE+T UPS设备-681', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1867, 'CE+T UPS设备-682', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1868, 'CE+T UPS设备-683', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1869, 'CE+T UPS设备-684', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1870, 'CE+T UPS设备-685', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1871, 'CE+T UPS设备-686', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1872, 'CE+T UPS设备-687', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1873, 'CE+T UPS设备-688', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1874, 'CE+T UPS设备-689', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1875, 'CE+T UPS设备-690', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1876, 'CE+T UPS设备-691', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1877, 'CE+T UPS设备-692', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1878, 'CE+T UPS设备-693', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1879, 'CE+T UPS设备-694', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1880, 'CE+T UPS设备-695', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1881, 'CE+T UPS设备-696', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1882, 'CE+T UPS设备-697', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1883, 'CE+T UPS设备-698', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1884, 'CE+T UPS设备-699', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1885, 'CE+T UPS设备-700', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1886, 'CE+T UPS设备-701', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1887, 'CE+T UPS设备-702', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1888, 'CE+T UPS设备-703', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1889, 'CE+T UPS设备-704', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1890, 'CE+T UPS设备-705', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1891, 'CE+T UPS设备-706', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1892, 'CE+T UPS设备-707', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1893, 'CE+T UPS设备-708', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1894, 'CE+T UPS设备-709', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1895, 'CE+T UPS设备-710', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1896, 'CE+T UPS设备-711', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1897, 'CE+T UPS设备-712', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1898, 'CE+T UPS设备-713', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1899, 'CE+T UPS设备-714', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1900, 'CE+T UPS设备-715', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1901, 'CE+T UPS设备-716', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1902, 'CE+T UPS设备-717', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1903, 'CE+T UPS设备-718', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1904, 'CE+T UPS设备-719', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1905, 'CE+T UPS设备-720', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1906, 'CE+T UPS设备-721', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1907, 'CE+T UPS设备-722', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1908, 'CE+T UPS设备-723', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1909, 'CE+T UPS设备-724', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1910, 'CE+T UPS设备-725', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1911, 'CE+T UPS设备-726', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1912, 'CE+T UPS设备-727', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1913, 'CE+T UPS设备-728', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1914, 'CE+T UPS设备-729', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1915, 'CE+T UPS设备-730', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1916, 'CE+T UPS设备-731', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1917, 'CE+T UPS设备-732', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1918, 'CE+T UPS设备-733', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1919, 'CE+T UPS设备-734', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1920, 'CE+T UPS设备-735', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1921, 'CE+T UPS设备-736', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1922, 'CE+T UPS设备-737', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1923, 'CE+T UPS设备-738', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1924, 'CE+T UPS设备-739', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1925, 'CE+T UPS设备-740', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1926, 'CE+T UPS设备-741', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1927, 'CE+T UPS设备-742', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1928, 'CE+T UPS设备-743', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1929, 'CE+T UPS设备-744', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1930, 'CE+T UPS设备-745', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1931, 'CE+T UPS设备-746', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1932, 'CE+T UPS设备-747', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1933, 'CE+T UPS设备-748', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1934, 'CE+T UPS设备-749', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1935, 'CE+T UPS设备-750', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1936, 'CE+T UPS设备-751', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1937, 'CE+T UPS设备-752', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1938, 'CE+T UPS设备-753', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1939, 'CE+T UPS设备-754', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1940, 'CE+T UPS设备-755', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1941, 'CE+T UPS设备-756', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1942, 'CE+T UPS设备-757', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1943, 'CE+T UPS设备-758', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1944, 'CE+T UPS设备-759', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1945, 'CE+T UPS设备-760', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1946, 'CE+T UPS设备-761', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1947, 'CE+T UPS设备-762', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1948, 'CE+T UPS设备-763', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1949, 'CE+T UPS设备-764', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1950, 'CE+T UPS设备-765', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1951, 'CE+T UPS设备-766', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1952, 'CE+T UPS设备-767', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1953, 'CE+T UPS设备-768', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1954, 'CE+T UPS设备-769', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1955, 'CE+T UPS设备-770', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1956, 'CE+T UPS设备-771', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1957, 'CE+T UPS设备-772', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1958, 'CE+T UPS设备-773', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1959, 'CE+T UPS设备-774', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1960, 'CE+T UPS设备-775', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1961, 'CE+T UPS设备-776', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1962, 'CE+T UPS设备-777', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1963, 'CE+T UPS设备-778', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1964, 'CE+T UPS设备-779', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1965, 'CE+T UPS设备-780', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1966, 'CE+T UPS设备-781', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1967, 'CE+T UPS设备-782', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1968, 'CE+T UPS设备-783', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1969, 'CE+T UPS设备-784', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1970, 'CE+T UPS设备-785', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1971, 'CE+T UPS设备-786', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1972, 'CE+T UPS设备-787', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1973, 'CE+T UPS设备-788', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1974, 'CE+T UPS设备-789', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1975, 'CE+T UPS设备-790', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1976, 'CE+T UPS设备-791', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1977, 'CE+T UPS设备-792', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1978, 'CE+T UPS设备-793', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1979, 'CE+T UPS设备-794', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1980, 'CE+T UPS设备-795', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1981, 'CE+T UPS设备-796', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1982, 'CE+T UPS设备-797', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1983, 'CE+T UPS设备-798', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1984, 'CE+T UPS设备-799', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1985, 'CE+T UPS设备-800', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1986, 'CE+T UPS设备-801', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1987, 'CE+T UPS设备-802', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1988, 'CE+T UPS设备-803', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1989, 'CE+T UPS设备-804', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1990, 'CE+T UPS设备-805', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1991, 'CE+T UPS设备-806', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1992, 'CE+T UPS设备-807', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1993, 'CE+T UPS设备-808', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1994, 'CE+T UPS设备-809', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1995, 'CE+T UPS设备-810', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1996, 'CE+T UPS设备-811', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1997, 'CE+T UPS设备-812', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1998, 'CE+T UPS设备-813', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(1999, 'CE+T UPS设备-814', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2000, 'CE+T UPS设备-815', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2001, 'CE+T UPS设备-816', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2002, 'CE+T UPS设备-817', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2003, 'CE+T UPS设备-818', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2004, 'CE+T UPS设备-819', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2005, 'CE+T UPS设备-820', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2006, 'CE+T UPS设备-821', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2007, 'CE+T UPS设备-822', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2008, 'CE+T UPS设备-823', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2009, 'CE+T UPS设备-824', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2010, 'CE+T UPS设备-825', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2011, 'CE+T UPS设备-826', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2012, 'CE+T UPS设备-827', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2013, 'CE+T UPS设备-828', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2014, 'CE+T UPS设备-829', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2015, 'CE+T UPS设备-830', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2016, 'CE+T UPS设备-831', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2017, 'CE+T UPS设备-832', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2018, 'CE+T UPS设备-833', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2019, 'CE+T UPS设备-834', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2020, 'CE+T UPS设备-835', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2021, 'CE+T UPS设备-836', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2022, 'CE+T UPS设备-837', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2023, 'CE+T UPS设备-838', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2024, 'CE+T UPS设备-839', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2025, 'CE+T UPS设备-840', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2026, 'CE+T UPS设备-841', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2027, 'CE+T UPS设备-842', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2028, 'CE+T UPS设备-843', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2029, 'CE+T UPS设备-844', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2030, 'CE+T UPS设备-845', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2031, 'CE+T UPS设备-846', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2032, 'CE+T UPS设备-847', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2033, 'CE+T UPS设备-848', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2034, 'CE+T UPS设备-849', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2035, 'CE+T UPS设备-850', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2036, 'CE+T UPS设备-851', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2037, 'CE+T UPS设备-852', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2038, 'CE+T UPS设备-853', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2039, 'CE+T UPS设备-854', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2040, 'CE+T UPS设备-855', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2041, 'CE+T UPS设备-856', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2042, 'CE+T UPS设备-857', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2043, 'CE+T UPS设备-858', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2044, 'CE+T UPS设备-859', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2045, 'CE+T UPS设备-860', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2046, 'CE+T UPS设备-861', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2047, 'CE+T UPS设备-862', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2048, 'CE+T UPS设备-863', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2049, 'CE+T UPS设备-864', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2050, 'CE+T UPS设备-865', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2051, 'CE+T UPS设备-866', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2052, 'CE+T UPS设备-867', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2053, 'CE+T UPS设备-868', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2054, 'CE+T UPS设备-869', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2055, 'CE+T UPS设备-870', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2056, 'CE+T UPS设备-871', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2057, 'CE+T UPS设备-872', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2058, 'CE+T UPS设备-873', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2059, 'CE+T UPS设备-874', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2060, 'CE+T UPS设备-875', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2061, 'CE+T UPS设备-876', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2062, 'CE+T UPS设备-877', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2063, 'CE+T UPS设备-878', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2064, 'CE+T UPS设备-879', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2065, 'CE+T UPS设备-880', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2066, 'CE+T UPS设备-881', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2067, 'CE+T UPS设备-882', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2068, 'CE+T UPS设备-883', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2069, 'CE+T UPS设备-884', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2070, 'CE+T UPS设备-885', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2071, 'CE+T UPS设备-886', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2072, 'CE+T UPS设备-887', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2073, 'CE+T UPS设备-888', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2074, 'CE+T UPS设备-889', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2075, 'CE+T UPS设备-890', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2076, 'CE+T UPS设备-891', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2077, 'CE+T UPS设备-892', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2078, 'CE+T UPS设备-893', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2079, 'CE+T UPS设备-894', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2080, 'CE+T UPS设备-895', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2081, 'CE+T UPS设备-896', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2082, 'CE+T UPS设备-897', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2083, 'CE+T UPS设备-898', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2084, 'CE+T UPS设备-899', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2085, 'CE+T UPS设备-900', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2086, 'CE+T UPS设备-901', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2087, 'CE+T UPS设备-902', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2088, 'CE+T UPS设备-903', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2089, 'CE+T UPS设备-904', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2090, 'CE+T UPS设备-905', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2091, 'CE+T UPS设备-906', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2092, 'CE+T UPS设备-907', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2093, 'CE+T UPS设备-908', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2094, 'CE+T UPS设备-909', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2095, 'CE+T UPS设备-910', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2096, 'CE+T UPS设备-911', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2097, 'CE+T UPS设备-912', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2098, 'CE+T UPS设备-913', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2099, 'CE+T UPS设备-914', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2100, 'CE+T UPS设备-915', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2101, 'CE+T UPS设备-916', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2102, 'CE+T UPS设备-917', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2103, 'CE+T UPS设备-918', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2104, 'CE+T UPS设备-919', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2105, 'CE+T UPS设备-920', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2106, 'CE+T UPS设备-921', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2107, 'CE+T UPS设备-922', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2108, 'CE+T UPS设备-923', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2109, 'CE+T UPS设备-924', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2110, 'CE+T UPS设备-925', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2111, 'CE+T UPS设备-926', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2112, 'CE+T UPS设备-927', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2113, 'CE+T UPS设备-928', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2114, 'CE+T UPS设备-929', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2115, 'CE+T UPS设备-930', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2116, 'CE+T UPS设备-931', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2117, 'CE+T UPS设备-932', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2118, 'CE+T UPS设备-933', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2119, 'CE+T UPS设备-934', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2120, 'CE+T UPS设备-935', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2121, 'CE+T UPS设备-936', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2122, 'CE+T UPS设备-937', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2123, 'CE+T UPS设备-938', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2124, 'CE+T UPS设备-939', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2125, 'CE+T UPS设备-940', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2126, 'CE+T UPS设备-941', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2127, 'CE+T UPS设备-942', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2128, 'CE+T UPS设备-943', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2129, 'CE+T UPS设备-944', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2130, 'CE+T UPS设备-945', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2131, 'CE+T UPS设备-946', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2132, 'CE+T UPS设备-947', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2133, 'CE+T UPS设备-948', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2134, 'CE+T UPS设备-949', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2135, 'CE+T UPS设备-950', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2136, 'CE+T UPS设备-951', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2137, 'CE+T UPS设备-952', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2138, 'CE+T UPS设备-953', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2139, 'CE+T UPS设备-954', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2140, 'CE+T UPS设备-955', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2141, 'CE+T UPS设备-956', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2142, 'CE+T UPS设备-957', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2143, 'CE+T UPS设备-958', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2144, 'CE+T UPS设备-959', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2145, 'CE+T UPS设备-960', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2146, 'CE+T UPS设备-961', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2147, 'CE+T UPS设备-962', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2148, 'CE+T UPS设备-963', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2149, 'CE+T UPS设备-964', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2150, 'CE+T UPS设备-965', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2151, 'CE+T UPS设备-966', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2152, 'CE+T UPS设备-967', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2153, 'CE+T UPS设备-968', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2154, 'CE+T UPS设备-969', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2155, 'CE+T UPS设备-970', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2156, 'CE+T UPS设备-971', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2157, 'CE+T UPS设备-972', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2158, 'CE+T UPS设备-973', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2159, 'CE+T UPS设备-974', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2160, 'CE+T UPS设备-975', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2161, 'CE+T UPS设备-976', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{"token": "", "remark": "ss"}', 1669465212271, 1698391007882),
	(2162, 'CE+T UPS设备-977', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2163, 'CE+T UPS设备-978', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2164, 'CE+T UPS设备-979', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2165, 'CE+T UPS设备-980', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2166, 'CE+T UPS设备-981', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2167, 'CE+T UPS设备-982', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2168, 'CE+T UPS设备-983', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2169, 'CE+T UPS设备-984', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2170, 'CE+T UPS设备-985', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2171, 'CE+T UPS设备-986', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2172, 'CE+T UPS设备-987', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2173, 'CE+T UPS设备-988', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2174, 'CE+T UPS设备-989', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2175, 'CE+T UPS设备-990', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2176, 'CE+T UPS设备-991', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2177, 'CE+T UPS设备-992', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2178, 'CE+T UPS设备-993', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{"remark": "3", "thingsboardHttpToken": "MgPTNcB6lwTRv2vlEgtt"}', 1669465212271, 1698466818152),
	(2179, 'CE+T UPS设备-994', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{"remark": "3", "thingsboardHttpToken": "32TpHXLrY510wyOiIYua"}', 1669465212271, 1698466830856),
	(2180, 'CE+T UPS设备-995', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{"remark": "3", "huaweiIotDA": false, "thingsboardHttpToken": "EhopwPVr1z3JcMKuhmsz", "thingspanelHttpToken": ""}', 1669465212271, 1698677627348),
	(2181, 'CE+T UPS设备-996', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{"remark": "3", "huaweiIotDA": false, "thingsboardHttpToken": "5C9WIdvy1l2bqLEki9LJ", "thingspanelHttpToken": ""}', 1669465212271, 1698677677828),
	(2182, 'CE+T UPS设备-997', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{"remark": "3", "thingsboardHttpToken": "rdzgVQ9VDJ2f39HNH9lL"}', 1669465212271, 1698466803253),
	(2183, 'CE+T UPS设备-998', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{"remark": "3", "thingsboardHttpToken": "Jtw6Qwzgv9f5WEmGmVH8"}', 1669465212271, 1698466774023),
	(2184, 'CE+T UPS设备-999', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{"remark": "3", "thingsboardHttpToken": "8LA62K3tMOrrQspFyqH3"}', 1669465212271, 1698466754581),
	(2185, 'CE+T UPS设备-1000', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{"remark": "3", "thingsboardHttpToken": "WQ21n91OIHDSusmsx5f7"}', 1669465212271, 1698466888155),
	(2186, 'CE+T UPS设备-1001', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{"remark": "3", "huaweiIotDA": false, "thingsboardHttpToken": "hBwF7MBLHjbQwV9xP6S9", "thingspanelHttpToken": ""}', 1669465212271, 1698677743794),
	(2187, 'CE+T UPS设备-1002', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{"remark": "3", "thingsboardHttpToken": "1YjKnCJcat3WEVZcdJe7"}', 1669465212271, 1698466712430),
	(2188, 'CE+T UPS设备-1003', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{"remark": "3", "thingsboardHttpToken": "0ENKVFlfnyMWrC0NyBwa"}', 1669465212271, 1698466004770),
	(2189, 'CE+T UPS设备-1004', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2190, 'CE+T UPS设备-1005', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{"token": "2", "remark": "3", "thingsboardHttpToken": "iHtC96shxyCwa05jnOpi"}', 1669465212271, 1698404518469),
	(2191, 'CE+T UPS设备-1006', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2192, 'CE+T UPS设备-1007', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2193, 'CE+T UPS设备-1008', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{"remark": "3", "thingsboardHttpToken": "fi7kVGH8TRhT27y4RU43"}', 1669465212271, 1698466976196),
	(2194, 'CE+T UPS设备-1009', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2195, 'CE+T UPS设备-1010', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{}', 1669465212271, 1669465212271),
	(2196, 'CE+T UPS设备-1011', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{"remark": "3", "huaweiIotDA": true, "thingsboardHttpToken": "RT3W3omwj9jBEVOh1EZa", "thingspanelHttpToken": "d80daaea-4934-0b57-09cc-b16ab604ea8e"}', 1669465212271, 1698641435847),
	(2197, 'CE+T UPS设备-1012', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1}', '{"remark": "3", "huaweiIotDA": true, "thingsboardHttpToken": "2", "thingspanelHttpToken": "e7b58226-ed91-600b-bb88-683e10dadf7d"}', 1669465212271, 1698641350215),
	(2198, 'CE+T UPS设备-1013', 'CE+T UPS', '深圳安圣电气有限公司', 'simulator', 'channel-simulator', '{"设备地址": 1, "安装的地址": "广州市天河区，科韵路，软件园"}', '{"remark": "3", "huaweiIotDA": true, "thingsboardHttpToken": "2", "thingspanelHttpToken": "547c72d4-463d-9325-d6a7-c40e8d5ff6c6"}', 1669465212271, 1698646769686),
	(2200, 'SNMP设备', 'SNMP Device', 'Fox Edge', 'snmp', '192.168.1.21', '{}', '{}', 1677072951112, 1677072951112),
	(2201, 'SNMP设备-21', 'SNMP Device', 'Fox Edge', 'snmp', '192.168.1.21', '{}', '{}', 1677073060495, 1677073060495),
	(2204, 'CJT188设备-01', 'CJT188', 'Fox Edge', 'simulator', 'CJT188-01', '{"type": 16, "address": "01 00 00 05 08 00 00"}', '{"remark": "", "huaweiIotDA": true, "thingsboardHttpToken": "", "thingspanelHttpToken": ""}', 1677333388233, 1698933160164),
	(2205, 'DLT645设备-01', 'DLT645 v1997', 'Fox Edge', 'simulator', 'channel-simulator', '{"deviceAddress": "1"}', '{}', 1678193597208, 1694166097245),
	(2206, 'DLT645设备-02', 'DLT645 v1997', 'Fox Edge', 'serialport', 'Linux COM2', '{"deviceAddress": "1"}', '{}', 1678193639638, 1679386492207),
	(2207, 'DLT645设备-03', 'DLT645 v1997', 'Fox Edge', 'serialport', 'Win32 COM1', '{"tableName": "DLT645-v1997/v1/1.0.0/DLT645-1997.csv", "deviceAddress": "351253111111"}', '{}', 1678193655319, 1698152610638),
	(2210, 'Prosys-OPC-UA-Simulation', 'OPC-UA', 'Fox Edge', 'opc-ua', 'channel-opc-ua-1', '{}', '{}', 1689062797172, 1689062797172),
	(2211, 'Win32 COM3', '温湿度采集模块(ZS-SHT30-1T-1H-485)', '中盛科技', 'serialport', 'Win32 COM3', '{"reg_cnt": 10, "reg_addr": 1, "table_name": "101.CETUPS_Read System Measures Table.csv", "device_addr": 1, "modbus_mode": "RTU", "operate_name": "Read Holding Register", "template_name": "Read System Measures Table"}', '{}', 1689146619678, 1689167801192),
	(2212, '温湿度采集模块-Linux', '温湿度采集模块(ZS-SHT30-1T-1H-485)', '中盛科技', 'serialport', 'Linux COM2', '{"devAddr": 1, "modbusMode": "RTU"}', '{}', 1694096732212, 1694096732212),
	(2214, '六合一空气监测传感器', '六合一空气监测传感器', '武汉中科图灵科技有限公司', 'tcp-server', '中科图灵空气六合一', '{}', '{}', 1694437300242, 1694437300242),
	(2215, '五合一空气监测传感器', '五合一空气监测传感器', '武汉中科图灵科技有限公司', 'tcp-server', '中科图灵空气五合一', '{}', '{"remark": "", "huaweiIotDA": false, "thingsboardHttpToken": "", "thingspanelHttpToken": ""}', 1694514021205, 1703160275780),
	(2216, '新的ModBus设备', 'ModBus Device', 'Fox Edge', 'simulator', 'channel-simulator', '{"deviceAddr": 1, "deviceRefTemplate": "CE+T UPS:模板"}', '{}', 1694833645007, 1694833804830),
	(2217, 'DOBOT-MG400', 'ModBus Device', 'Fox Edge', 'simulator', 'channel-simulator', '{"devAddr": 1, "modbusMode": "TCP"}', '{}', 1695541043718, 1695541127060),
	(2218, 'DOBOT-MG400-TCP', 'ModBus Device', 'Fox Edge', 'tcp-client', 'DOBOT-MG400-TCP', '{"devAddr": 1, "modbusMode": "TCP"}', '{"remark": "", "huaweiIotDA": false, "thingsboardHttpToken": "", "thingspanelHttpToken": ""}', 1695614433021, 1699517511288),
	(2219, 'test-yy', 'ModBus Device', 'Fox Edge', 'tcp-client', '192.168.2.80:9527', '{"devAddr": 1, "modbusMode": "TCP"}', '{}', 1695802377277, 1695809834821),
	(2221, 'fant', 'ModBus Device', 'Fox Edge', 'tcp-client', 'Tcp-Client', '{"devAddr":1,"modbusMode":"TCP"}', '{"remark":"","thingsboardHttpToken":"","thingspanelHttpToken":"","huaweiIotDA":false}', 1696077881832, 1713150885718),
	(2222, 'S7 PLC', 'S7 PLC', 'Siemens', 's7plc', '西门子-S7-PLC-1', '{}', '{"token": "", "remark": "1234"}', 1696854325675, 1698384099801),
	(2225, 'JSP测试设备', '基站电源-ABC', '华为技术有限公司', 'simulator', 'channel-simulator', '{}', '{}', 1699603398745, 1699603398745),
	(2226, '范例1：JSP测试设备', '基站电源-ABC', '华为技术有限公司', 'simulator', 'channel-simulator', '{}', '{"remark": "", "huaweiIotDA": false, "thingsboardHttpToken": "", "thingspanelHttpToken": ""}', 1699624840920, 1699694838571),
	(2228, '范例：武汉消防五合一', '消防用水五合一（LoRaWan）', '武汉中科图灵科技有限公司', 'simulator', 'channel-五合一LORAWAN', '{}', '{"remark": "", "huaweiIotDA": false, "thingsboardHttpToken": "", "thingspanelHttpToken": ""}', 1699710711392, 1703245692787),
	(2229, '范例：尼特烟雾传感器', '尼特烟雾传感器-4G-YG', '武汉中科图灵', 'mqtt-client', '范例：MQTT客户端', '{}', '{}', 1700049429799, 1700049429799),
	(2232, '范例：海湾消防设备GST9000', 'JB-QB-GST9000', '海湾安全技术有限公司', 'serialport-analyzer', 'JB-QB-GST9000', '{}', '{"remark": "", "huaweiIotDA": false, "thingsboardHttpToken": "", "thingspanelHttpToken": ""}', 1703216548686, 1703218888844),
	(2233, '范例：QD6000', 'ModBus Device', 'Fox Edge', 'simulator', 'channel-simulator', '{"devAddr": 1, "modbusMode": "RTU"}', '{"remark": "", "huaweiIotDA": false, "thingsboardHttpToken": "", "thingspanelHttpToken": ""}', 1704284236962, 1704284276786),
	(2237, '消防用水五合一-868591058136218', '消防用水五合一（LoRaWan）', '武汉中科图灵科技有限公司', 'tcp-server', '消防用水五合一-868591058136218', '{"serviceKey": "868591058136218"}', '{}', 1705315744506, 1705315744506),
	(2238, 'HJ212-2017-81733553213013', 'HJ212-2017', '中国环境保护设备', 'tcp-server', 'HJ212-2017-81733553213013', '{"serviceKey": "81733553213013"}', '{}', 1705323898076, 1705323898076),
	(2240, '范例：海尔空调-YCJ-A0', '海尔空调-YCJ-A000', '海尔集团公司', 'simulator', 'channel-simulator', '{}', '{}', 1709271415394, 1709271415394),
	(2241, '范例：TCL柜式空调(KPRd)', '柜式空调(KPRd)', 'TCL科技集团股份有限公司', 'simulator', 'channel-simulator', '{}', '{}', 1711101509112, 1711101509112),
	(2242, '范例（ModBus）：建大仁科', 'ModBus Device', 'Fox Edge', 'simulator', 'channel-simulator', '{"devAddr": 1, "modbusMode": "RTU"}', '{"remark": "", "huaweiIotDA": false, "thingsboardHttpToken": "", "thingspanelHttpToken": ""}', 1711334541233, 1711334576562),
	(2244, '范例（某充电桩温度检测设备）', 'ModBus Device', 'Fox Edge', 'simulator', 'channel-simulator', '{"devAddr": 1, "modbusMode": "RTU"}', '{"remark": "", "huaweiIotDA": false, "thingsboardHttpToken": "", "thingspanelHttpToken": ""}', 1711354430389, 1711354440329),
	(2247, '海康威视-F6380C000000', '消防主机', '海康威视', 'hikvision-fire', '海康威视-F6380C000000', '{"serviceKey": "F6380C000000"}', '{}', 1711704515833, 1711704515833),
	(2248, '范例：海悟基站空调', '基站空调(V1.00)', '广东海悟科技有限公司', 'simulator', 'channel-simulator', '{}', '{"remark": "", "huaweiIotDA": false, "thingsboardHttpToken": "", "thingspanelHttpToken": ""}', 1711803058161, 1711803100443),
	(2249, '范例（ModBus）：正泰三相电表DT-SU666', 'ModBus Device', 'Fox Edge', 'simulator', 'channel-simulator', '{"devAddr":50,"modbusMode":"RTU"}', '{"remark":"","huaweiIotDA":false,"thingsboardHttpToken":"","thingspanelHttpToken":""}', 1711809919703, 1712026537476),
	(2250, '范例：宏冠风机(HF-315PE)', 'ModBus Device', 'Fox Edge', 'simulator', 'channel-simulator', '{"devAddr":2,"modbusMode":"RTU"}', '{"remark":"","thingsboardHttpToken":"","thingspanelHttpToken":"","huaweiIotDA":false}', 1712669310896, 1712669334382),
	(2251, '范例：海湾JB-QB-GST200', 'JB-QB-GST200', '海湾安全技术有限公司', 'serialport-analyzer', '范例：海湾JB-QB-GST200', '{}', '{}', 1712735687083, 1712735687083),
	(2252, '范例：海湾JB-QB-GST1500H', 'JB-QB-GST1500H', '海湾安全技术有限公司', 'serialport-analyzer', '范例：海湾JB-QB-GST1500H', '{}', '{"remark":"","thingsboardHttpToken":"","thingspanelHttpToken":"","huaweiIotDA":false}', 1712756957673, 1712756957673),
	(2254, '范例：利达JB-QG-LD128E(Q)I', 'JB-QG-LD128E(Q)I', '北京利达华信电子有限公司', 'serialport-analyzer', '范例：利达JB-QG-LD128E(Q)I', '{}', '{}', 1712828593607, 1712828593607),
	(2255, '范例：利达JB-QT-LD128EⅡ', 'JB-QT-LD128EⅡ', '北京利达华信电子有限公司', 'serialport-analyzer', '范例：利达JB-QT-LD128EⅡ', '{}', '{"remark":"","thingsboardHttpToken":"","thingspanelHttpToken":"","huaweiIotDA":false}', 1712833534043, 1712833534043),
	(2257, '范例：利达JB-QT-LD188EL', 'JB-QT-LD188EL', '北京利达华信电子有限公司', 'serialport-analyzer', '范例：利达JB-QT-LD188EL', '{}', '{}', 1712845466684, 1712845466684),
	(2258, '范例：泰和安JB-QB-TX3001DY', 'JB-QB-TX3001DY', '泰和安消防科技有限公司', 'serialport-analyzer', '范例：泰和安JB-QB-TX3001DY', '{}', '{}', 1712926774731, 1712926774731),
	(2259, '范例：泰和安JB-TGL-TX3006C', 'JB-TGL-TX3006C', '泰和安消防科技有限公司', 'serialport-analyzer', '范例：泰和安JB-TGL-TX3006C', '{}', '{}', 1713018731698, 1713018731698),
	(2260, '范例：松江JB-3208G', 'JB-3208G', '上海松江飞繁电子有限公司', 'serialport-analyzer', '范例：松江JB-3208G', '{}', '{}', 1713078107988, 1713078107988),
	(2261, '范例：松江JB-3101G', 'JB-3101G', '上海松江飞繁电子有限公司', 'serialport-analyzer', '范例：松江JB-3101G', '{}', '{}', 1713097133534, 1713097133534),
	(2262, '范例：青鸟JB-TG-JBF-11S', 'JB-TG-JBF-11S', '青鸟消防股份有限公司', 'serialport-analyzer', '范例：青鸟JB-TG-JBF-11S', '{}', '{}', 1713102414956, 1713102414956),
	(2263, '范例：青鸟JB-QB-JBF-5010', 'JB-QB-JBF-5010', '青鸟消防股份有限公司', 'serialport-analyzer', '范例：青鸟JB-QB-JBF-5010', '{}', '{}', 1713173079551, 1713173079551),
	(2264, '范例：青鸟JB-QB-JBF-5009', 'JB-QB-JBF-5009', '青鸟消防股份有限公司', 'serialport-analyzer', '范例：青鸟JB-QB-JBF-5009', '{}', '{}', 1713192599968, 1713192599968),
	(2265, '范例：西门子JB-TBZL-FC720W', 'JB-TBZL-FC720W', '德国西门子股份有限公司', 'serialport-analyzer', '范例：西门子JB-TBZL-FC720W', '{}', '{}', 1713239172209, 1713239172209),
	(2266, '范例：赋安JB-LTZ2-FS5116', 'JB-LTZ2-FS5116', '深圳市赋安安全系统有限公司', 'serialport-analyzer', '范例：赋安JB-LTZ2-FS5116', '{}', '{}', 1713269788852, 1713269788852),
	(2267, '范例：鼎信JB-QT-TS3200', 'JB-QT-TS3200', '青岛鼎信通讯消防安全有限公司', 'serialport-analyzer', '范例：鼎信JB-QT-TS3200', '{}', '{}', 1713324389162, 1713324389162),
	(2268, '范例：防威JB-QGZ2L-FW19000G', 'JB-QGZ2L-FW19000G', '北京防威威盛机电设备有限责任公司', 'serialport-analyzer', '范例：防威JB-QGZ2L-FW19000G', '{}', '{}', 1713355068327, 1713355068327),
	(2269, '范例：闽安JB-TB-MASYS5000', 'JB-TB-MASYS5000', '福建闽安安全技术有限责任公司', 'serialport-analyzer', '范例：闽安JB-TB-MASYS5000', '{}', '{}', 1713363775147, 1713363775147),
	(2270, '范例：海湾JB-QB-GST500', 'JB-QB-GST500', '海湾安全技术有限公司', 'serialport-analyzer', '范例：海湾JB-QB-GST500', '{}', '{}', 1713454700447, 1713454700447),
	(2271, '范例：依爱JB-TBL-EI8000S', 'JB-TBL-EI8000S', '蚌埠依爱消防电子有限责任公司', 'serialport-analyzer', '范例：依爱JB-TBL-EI8000S', '{}', '{}', 1713519517398, 1713519517398),
	(2272, '范例：模型-正泰-三相电表(DT-SU666)', 'ModBus Device', 'Fox Edge', 'simulator', 'channel-simulator', '{"devAddr":50,"modbusMode":"RTU","modelName":"范例：正泰-三相电表-寄存器定义表"}', '{"remark":"","thingsboardHttpToken":"","thingspanelHttpToken":"","huaweiIotDA":false}', 1713707239043, 1713709302578);

-- 正在导出表  fox_edge.tb_device_mapper 的数据：~285 rows (大约)
DELETE FROM `tb_device_mapper`;
INSERT INTO `tb_device_mapper` (`id`, `device_type`, `manufacturer`, `object_name`, `mapper_name`, `mapper_mode`, `value_type`, `extend_param`, `create_time`, `update_time`) VALUES
	(14, 'ModBus Device', 'Fox Edge', '逆变器06输出电流', '逆变器06输出电流', 0, 'Double', '{}', 1698747087247, 1698747087247),
	(15, 'ModBus Device', 'Fox Edge', '系统输出功率', '系统输出功率', 0, 'Integer', '{}', 1698747134420, 1698747134420),
	(16, 'ZXDU58', '中兴通讯', '整流模块数量', '整流模块数量', 0, 'Integer', '{}', 1698747134480, 1698747134480),
	(17, 'LRW解码器', '', 'box', 'box', 0, 'Boolean', '{}', 1698747134516, 1698747134516),
	(18, 'ZXDU58', '中兴通讯', '交流输入主空开告警', '交流输入主空开告警', 0, 'Boolean', '{}', 1698747134588, 1698747134588),
	(19, 'CE+T UPS', '深圳安圣电气有限公司', '逆变器01输出电流', '逆变器01输出电流', 0, 'Integer', '{}', 1698747134615, 1698747134615),
	(20, 'CE+T UPS', '深圳安圣电气有限公司', '逆变器15输出电流', '逆变器15输出电流', 0, 'Integer', '{}', 1698747134656, 1698747134656),
	(21, 'CE+T UPS', '深圳安圣电气有限公司', '逆变器04温度', '逆变器04温度', 0, 'Integer', '{}', 1698747134668, 1698747134668),
	(22, 'ZXDU58', '中兴通讯', '交流辅助输出开关断告警', '交流辅助输出开关断告警', 0, 'Boolean', '{}', 1698747134684, 1698747134684),
	(23, 'ModBus Device', 'Fox Edge', '逆变器15温度', '逆变器15温度', 0, 'Integer', '{}', 1698747134695, 1698747134695),
	(24, 'ZXDU58', '中兴通讯', '交流输入电压L1告警', '交流输入电压L1告警', 0, 'Boolean', '{}', 1698747134773, 1698747134773),
	(25, 'ModBus Device', 'Fox Edge', '逆变器06输出功率', '逆变器06输出功率', 0, 'Integer', '{}', 1698747134789, 1698747134789),
	(26, 'ZXDU58', '中兴通讯', '模块07输出电流', '模块07输出电流', 0, 'Double', '{}', 1698747134836, 1698747134836),
	(27, 'CE+T UPS', '深圳安圣电气有限公司', '逆变器 5传输故障告警状态', '逆变器 5传输故障告警状态', 0, 'Boolean', '{}', 1698747134858, 1698747134858),
	(28, 'ModBus Device', 'Fox Edge', '逆变器09温度', '逆变器09温度', 0, 'Integer', '{}', 1698747134876, 1698747134876),
	(29, 'ZXDU58', '中兴通讯', '模块05输出电流', '模块05输出电流', 0, 'Double', '{}', 1698747134891, 1698747134891),
	(30, 'CE+T UPS', '深圳安圣电气有限公司', '逆变器11传输故障告警状态', '逆变器11传输故障告警状态', 0, 'Boolean', '{}', 1698747134914, 1698747134914),
	(31, 'CE+T UPS', '深圳安圣电气有限公司', '逆变器09温度', '逆变器09温度', 0, 'Integer', '{}', 1698747134934, 1698747134934),
	(32, 'CE+T UPS', '深圳安圣电气有限公司', '辅助交流熔丝断告警状态', '辅助交流熔丝断告警状态', 0, 'Boolean', '{}', 1698747135017, 1698747135017),
	(33, 'ModBus Device', 'Fox Edge', '逆变器04输出功率', '逆变器04输出功率', 0, 'Integer', '{}', 1698747135038, 1698747135038),
	(34, 'CE+T UPS', '深圳安圣电气有限公司', '逆变器16温度', '逆变器16温度', 0, 'Integer', '{}', 1698747135062, 1698747135062),
	(35, 'ZXDU58', '中兴通讯', '模块10输出电流', '模块10输出电流', 0, 'Double', '{}', 1698747135075, 1698747135075),
	(36, 'ModBus Device', 'Fox Edge', '负载比', '负载比', 0, 'Integer', '{}', 1698747135092, 1698747135092),
	(37, 'CE+T UPS', '深圳安圣电气有限公司', '逆变器13输出功率', '逆变器13输出功率', 0, 'Integer', '{}', 1698747135109, 1698747135109),
	(38, 'CE+T UPS', '深圳安圣电气有限公司', '逆变器03输出电流', '逆变器03输出电流', 0, 'Integer', '{}', 1698747135126, 1698747135126),
	(39, 'CE+T UPS', '深圳安圣电气有限公司', '逆变器08输出功率', '逆变器08输出功率', 0, 'Integer', '{}', 1698747135173, 1698747135173),
	(40, 'ModBus Device', 'Fox Edge', '逆变器10温度', '逆变器10温度', 0, 'Integer', '{}', 1698747135183, 1698747135183),
	(41, 'ZXDU58', '中兴通讯', '模块12输出电流', '模块12输出电流', 0, 'Double', '{}', 1698747135195, 1698747135195),
	(42, 'ModBus Device', 'Fox Edge', '逆变器04温度', '逆变器04温度', 0, 'Integer', '{}', 1698747135224, 1698747135224),
	(43, 'ModBus Device', 'Fox Edge', '逆变器08输出功率', '逆变器08输出功率', 0, 'Integer', '{}', 1698747135251, 1698747135251),
	(44, 'ZXDU58', '中兴通讯', 'D级防雷器坏告警', 'D级防雷器坏告警', 0, 'Boolean', '{}', 1698747135267, 1698747135267),
	(45, 'CE+T UPS', '深圳安圣电气有限公司', '系统紧急告警状态', '系统紧急告警状态', 0, 'Boolean', '{}', 1698747135286, 1698747135286),
	(46, 'ModBus Device', 'Fox Edge', '逆变器02输出功率', '逆变器02输出功率', 0, 'Integer', '{}', 1698747135302, 1698747135302),
	(47, 'LRW解码器', '', 'verHard', 'verHard', 0, 'Integer', '{}', 1698747135326, 1698747135326),
	(48, 'ModBus Device', 'Fox Edge', '逆变器04输出电流', '逆变器04输出电流', 0, 'Double', '{}', 1698747135344, 1698747135344),
	(49, 'ModBus Device', 'Fox Edge', '逆变器08输出电流', '逆变器08输出电流', 0, 'Double', '{}', 1698747135358, 1698747135358),
	(50, 'ModBus Device', 'Fox Edge', '逆变器11输出功率', '逆变器11输出功率', 0, 'Integer', '{}', 1698747135367, 1698747135367),
	(51, 'ModBus Device', 'Fox Edge', '组4输入电压', '组4输入电压', 0, 'Double', '{}', 1698747135388, 1698747135388),
	(52, 'CE+T UPS', '深圳安圣电气有限公司', '逆变器限流告警状态', '逆变器限流告警状态', 0, 'Boolean', '{}', 1698747135400, 1698747135400),
	(53, 'CE+T UPS', '深圳安圣电气有限公司', '逆变器15温度', '逆变器15温度', 0, 'Integer', '{}', 1698747135410, 1698747135410),
	(54, 'CE+T UPS', '深圳安圣电气有限公司', '逆变器08输出电流', '逆变器08输出电流', 0, 'Integer', '{}', 1698747135433, 1698747135433),
	(55, 'CE+T UPS', '深圳安圣电气有限公司', '逆变器03输出功率', '逆变器03输出功率', 0, 'Integer', '{}', 1698747135461, 1698747135461),
	(56, 'CE+T UPS', '深圳安圣电气有限公司', '逆变器超温告警状态', '逆变器超温告警状态', 0, 'Boolean', '{}', 1698747135473, 1698747135473),
	(57, 'CE+T UPS', '深圳安圣电气有限公司', '逆变器05输出电流', '逆变器05输出电流', 0, 'Integer', '{}', 1698747135491, 1698747135491),
	(58, 'ModBus Device', 'Fox Edge', '系统输出电流', '系统输出电流', 0, 'Double', '{}', 1698747135511, 1698747135511),
	(59, 'CE+T UPS', '深圳安圣电气有限公司', '是否有逆变器手动停', '是否有逆变器手动停', 0, 'Boolean', '{}', 1698747135543, 1698747135543),
	(60, 'CJT188', 'Fox Edge', '状态2', '状态2', 0, 'Integer', '{}', 1698747135574, 1698747135574),
	(61, 'CJT188', 'Fox Edge', '时间', '时间', 0, 'String', '{}', 1698747135591, 1698747135591),
	(62, 'CE+T UPS', '深圳安圣电气有限公司', '逆变器15输出功率', '逆变器15输出功率', 0, 'Integer', '{}', 1698747135607, 1698747135607),
	(63, 'CE+T UPS', '深圳安圣电气有限公司', '系统输出电压', '系统输出电压', 0, 'Integer', '{}', 1698747135621, 1698747135621),
	(64, 'ZXDU58', '中兴通讯', '模块03输出电流', '模块03输出电流', 0, 'Double', '{}', 1698747135650, 1698747135650),
	(65, 'ZXDU58', '中兴通讯', '模块09输出电流', '模块09输出电流', 0, 'Double', '{}', 1698747135669, 1698747135669),
	(66, 'ModBus Device', 'Fox Edge', '逆变器11输出电流', '逆变器11输出电流', 0, 'Double', '{}', 1698747135696, 1698747135696),
	(67, 'ZXDU58', '中兴通讯', '输出电流L3告警', '输出电流L3告警', 0, 'Boolean', '{}', 1698747135745, 1698747135745),
	(68, 'CE+T UPS', '深圳安圣电气有限公司', '逆变器10温度', '逆变器10温度', 0, 'Integer', '{}', 1698747135786, 1698747135786),
	(69, 'CE+T UPS', '深圳安圣电气有限公司', '逆变器05输出功率', '逆变器05输出功率', 0, 'Integer', '{}', 1698747135819, 1698747135819),
	(70, 'ModBus Device', 'Fox Edge', '逆变器02温度', '逆变器02温度', 0, 'Integer', '{}', 1698747135990, 1698747135990),
	(71, 'CE+T UPS', '深圳安圣电气有限公司', '逆变器08温度', '逆变器08温度', 0, 'Integer', '{}', 1698747136007, 1698747136007),
	(72, 'CE+T UPS', '深圳安圣电气有限公司', '逆变器 7传输故障告警状态', '逆变器 7传输故障告警状态', 0, 'Boolean', '{}', 1698747136165, 1698747136165),
	(303, 'CE+T UPS', '深圳安圣电气有限公司', '是否由市电切换到手动旁路', '是否由市电切换到手动旁路', 0, 'Boolean', '{}', 1699452694860, 1699452694860),
	(304, 'CE+T UPS', '深圳安圣电气有限公司', '逆变器16输出电流', '逆变器16输出电流', 0, 'Integer', '{}', 1699452694981, 1699452694981),
	(305, 'CE+T UPS', '深圳安圣电气有限公司', '逆变器13温度', '逆变器13温度', 0, 'Integer', '{}', 1699452695020, 1699452695020),
	(306, 'CE+T UPS', '深圳安圣电气有限公司', '是否工作在在线方式', '是否工作在在线方式', 0, 'Boolean', '{}', 1699452695038, 1699452695038),
	(307, 'CE+T UPS', '深圳安圣电气有限公司', '逆变器10输出电流', '逆变器10输出电流', 0, 'Integer', '{}', 1699452695117, 1699452695117),
	(308, 'CE+T UPS', '深圳安圣电气有限公司', '是否工作在逆变方式', '是否工作在逆变方式', 0, 'Boolean', '{}', 1699452695133, 1699452695133),
	(309, 'CE+T UPS', '深圳安圣电气有限公司', '逆变器13传输故障告警状态', '逆变器13传输故障告警状态', 0, 'Boolean', '{}', 1699452695183, 1699452695183),
	(310, 'CE+T UPS', '深圳安圣电气有限公司', '逆变器 6传输故障告警状态', '逆变器 6传输故障告警状态', 0, 'Boolean', '{}', 1699452695207, 1699452695207),
	(311, 'CE+T UPS', '深圳安圣电气有限公司', '用户交流熔丝断告警状态', '用户交流熔丝断告警状态', 0, 'Boolean', '{}', 1699452695264, 1699452695264),
	(312, 'CE+T UPS', '深圳安圣电气有限公司', '逆变器03温度', '逆变器03温度', 0, 'Integer', '{}', 1699452695282, 1699452695282),
	(313, 'CE+T UPS', '深圳安圣电气有限公司', '逆变器10传输故障告警状态', '逆变器10传输故障告警状态', 0, 'Boolean', '{}', 1699452695299, 1699452695299),
	(314, 'CE+T UPS', '深圳安圣电气有限公司', '逆变器 0传输故障告警状态', '逆变器 0传输故障告警状态', 0, 'Boolean', '{}', 1699452695325, 1699452695325),
	(315, 'CE+T UPS', '深圳安圣电气有限公司', '逆变器04输出功率', '逆变器04输出功率', 0, 'Integer', '{}', 1699452695361, 1699452695361),
	(316, 'CE+T UPS', '深圳安圣电气有限公司', '是否由逆变切换到手动旁路', '是否由逆变切换到手动旁路', 0, 'Boolean', '{}', 1699452695498, 1699452695498),
	(317, 'CE+T UPS', '深圳安圣电气有限公司', '逆变器 3传输故障告警状态', '逆变器 3传输故障告警状态', 0, 'Boolean', '{}', 1699452695528, 1699452695528),
	(318, 'CE+T UPS', '深圳安圣电气有限公司', '不同步告警状态', '不同步告警状态', 0, 'Boolean', '{}', 1699452695581, 1699452695581),
	(319, 'CE+T UPS', '深圳安圣电气有限公司', '逆变器 4传输故障告警状态', '逆变器 4传输故障告警状态', 0, 'Boolean', '{}', 1699452695613, 1699452695613),
	(320, 'CE+T UPS', '深圳安圣电气有限公司', '逆变器14温度', '逆变器14温度', 0, 'Integer', '{}', 1699452695652, 1699452695652),
	(321, 'CE+T UPS', '深圳安圣电气有限公司', '直流电压超限告警状态', '直流电压超限告警状态', 0, 'Boolean', '{}', 1699452695692, 1699452695692),
	(322, 'CE+T UPS', '深圳安圣电气有限公司', '组3输入电压', '组3输入电压', 0, 'Double', '{}', 1699452695765, 1699452695765),
	(323, 'CE+T UPS', '深圳安圣电气有限公司', '系统非紧急告警状态', '系统非紧急告警状态', 0, 'Boolean', '{}', 1699452695795, 1699452695795),
	(324, 'CE+T UPS', '深圳安圣电气有限公司', '逆变器14输出功率', '逆变器14输出功率', 0, 'Integer', '{}', 1699452695817, 1699452695817),
	(325, 'CE+T UPS', '深圳安圣电气有限公司', '逆变器07输出电流', '逆变器07输出电流', 0, 'Integer', '{}', 1699452695954, 1699452695954),
	(326, 'CE+T UPS', '深圳安圣电气有限公司', '系统输出功率', '系统输出功率', 0, 'Integer', '{}', 1699452695992, 1699452695992),
	(327, 'CE+T UPS', '深圳安圣电气有限公司', '逆变器12传输故障告警状态', '逆变器12传输故障告警状态', 0, 'Boolean', '{}', 1699452696020, 1699452696020),
	(328, 'CE+T UPS', '深圳安圣电气有限公司', '组1输入电压', '组1输入电压', 0, 'Double', '{}', 1699452706116, 1699452706116),
	(329, 'CE+T UPS', '深圳安圣电气有限公司', '逆变器故障告警状态', '逆变器故障告警状态', 0, 'Boolean', '{}', 1699452706186, 1699452706186),
	(330, 'CE+T UPS', '深圳安圣电气有限公司', '逆变器13输出电流', '逆变器13输出电流', 0, 'Integer', '{}', 1699452706199, 1699452706199),
	(331, 'CE+T UPS', '深圳安圣电气有限公司', '组4输入电压', '组4输入电压', 0, 'Double', '{}', 1699452706216, 1699452706216),
	(332, 'CE+T UPS', '深圳安圣电气有限公司', '逆变器12输出功率', '逆变器12输出功率', 0, 'Integer', '{}', 1699452706229, 1699452706229),
	(333, 'CE+T UPS', '深圳安圣电气有限公司', '逆变器14传输故障告警状态', '逆变器14传输故障告警状态', 0, 'Boolean', '{}', 1699452706247, 1699452706247),
	(334, 'CE+T UPS', '深圳安圣电气有限公司', '逆变器 8传输故障告警状态', '逆变器 8传输故障告警状态', 0, 'Boolean', '{}', 1699452706265, 1699452706265),
	(335, 'CE+T UPS', '深圳安圣电气有限公司', '逆变器11温度', '逆变器11温度', 0, 'Integer', '{}', 1699452706325, 1699452706325),
	(336, 'CE+T UPS', '深圳安圣电气有限公司', '逆变器02输出电流', '逆变器02输出电流', 0, 'Integer', '{}', 1699452706345, 1699452706345),
	(337, 'CE+T UPS', '深圳安圣电气有限公司', '负载比', '负载比', 0, 'Integer', '{}', 1699452706365, 1699452706365),
	(338, 'CE+T UPS', '深圳安圣电气有限公司', '逆变器05温度', '逆变器05温度', 0, 'Integer', '{}', 1699452706427, 1699452706427),
	(339, 'CE+T UPS', '深圳安圣电气有限公司', '负载是否由逆变器供电', '负载是否由逆变器供电', 0, 'Boolean', '{}', 1699452706439, 1699452706439),
	(340, 'CE+T UPS', '深圳安圣电气有限公司', '负载是否由市电供电', '负载是否由市电供电', 0, 'Boolean', '{}', 1699452706450, 1699452706450),
	(341, 'CE+T UPS', '深圳安圣电气有限公司', '逆变器 9传输故障告警状态', '逆变器 9传输故障告警状态', 0, 'Boolean', '{}', 1699452706463, 1699452706463),
	(342, 'CE+T UPS', '深圳安圣电气有限公司', '逆变器11输出电流', '逆变器11输出电流', 0, 'Integer', '{}', 1699452706511, 1699452706511),
	(343, 'CE+T UPS', '深圳安圣电气有限公司', '是否工作在交流方式', '是否工作在交流方式', 0, 'Boolean', '{}', 1699452706538, 1699452706538),
	(344, 'CE+T UPS', '深圳安圣电气有限公司', '逆变器07输出功率', '逆变器07输出功率', 0, 'Integer', '{}', 1699452706551, 1699452706551),
	(345, 'CE+T UPS', '深圳安圣电气有限公司', '系统输出电流', '系统输出电流', 0, 'Double', '{}', 1699452706572, 1699452706572),
	(346, 'CE+T UPS', '深圳安圣电气有限公司', '逆变器01温度', '逆变器01温度', 0, 'Integer', '{}', 1699452706618, 1699452706618),
	(347, 'CE+T UPS', '深圳安圣电气有限公司', '逆变器07温度', '逆变器07温度', 0, 'Integer', '{}', 1699452706650, 1699452706650),
	(348, 'CE+T UPS', '深圳安圣电气有限公司', '逆变器14输出电流', '逆变器14输出电流', 0, 'Integer', '{}', 1699452706659, 1699452706659),
	(349, 'CE+T UPS', '深圳安圣电气有限公司', '逆变器06输出电流', '逆变器06输出电流', 0, 'Integer', '{}', 1699452706687, 1699452706687),
	(350, 'CE+T UPS', '深圳安圣电气有限公司', '逆变器01输出功率', '逆变器01输出功率', 0, 'Integer', '{}', 1699452706704, 1699452706704),
	(351, 'CE+T UPS', '深圳安圣电气有限公司', '过载告警状态', '过载告警状态', 0, 'Boolean', '{}', 1699452706733, 1699452706733),
	(352, 'CE+T UPS', '深圳安圣电气有限公司', '系统输出频率', '系统输出频率', 0, 'Double', '{}', 1699452706750, 1699452706750),
	(353, 'CE+T UPS', '深圳安圣电气有限公司', '逆变器09输出电流', '逆变器09输出电流', 0, 'Integer', '{}', 1699452706758, 1699452706758),
	(354, 'CE+T UPS', '深圳安圣电气有限公司', '逆变器02输出功率', '逆变器02输出功率', 0, 'Integer', '{}', 1699452706771, 1699452706771),
	(355, 'CE+T UPS', '深圳安圣电气有限公司', '输出电压超限告警状态', '输出电压超限告警状态', 0, 'Boolean', '{}', 1699452706796, 1699452706796),
	(356, 'CE+T UPS', '深圳安圣电气有限公司', '逆变器16输出功率', '逆变器16输出功率', 0, 'Integer', '{}', 1699452706818, 1699452706818),
	(357, 'CE+T UPS', '深圳安圣电气有限公司', '逆变器10输出功率', '逆变器10输出功率', 0, 'Integer', '{}', 1699452706835, 1699452706835),
	(358, 'CE+T UPS', '深圳安圣电气有限公司', '48V直流熔丝断告警状态', '48V直流熔丝断告警状态', 0, 'Boolean', '{}', 1699452706856, 1699452706856),
	(359, 'CE+T UPS', '深圳安圣电气有限公司', '逆变器15传输故障告警状态', '逆变器15传输故障告警状态', 0, 'Boolean', '{}', 1699452706868, 1699452706868),
	(360, 'CE+T UPS', '深圳安圣电气有限公司', '逆变器12温度', '逆变器12温度', 0, 'Integer', '{}', 1699452706881, 1699452706881),
	(361, 'CE+T UPS', '深圳安圣电气有限公司', '逆变器 1传输故障告警状态', '逆变器 1传输故障告警状态', 0, 'Boolean', '{}', 1699452706927, 1699452706927),
	(372, 'ZXDU58', '中兴通讯', '交流辅助输出开关断', '交流辅助输出开关断', 0, 'Boolean', '{}', 1699452787692, 1699452787692),
	(373, 'ModBus Device', 'Fox Edge', '逆变器06温度', '逆变器06温度', 0, 'Integer', '{}', 1699452787720, 1699452787720),
	(374, 'ZXDU58', '中兴通讯', '交流输入电压L3告警', '交流输入电压L3告警', 0, 'Boolean', '{}', 1699452787739, 1699452787739),
	(375, 'ModBus Device', 'Fox Edge', '逆变器14输出功率', '逆变器14输出功率', 0, 'Integer', '{}', 1699452787749, 1699452787749),
	(376, 'ModBus Device', 'Fox Edge', '逆变器01输出电流', '逆变器01输出电流', 0, 'Double', '{}', 1699452787761, 1699452787761),
	(377, 'ZXDU58', '中兴通讯', '交流输入相电压L1', '交流输入相电压L1', 0, 'Double', '{}', 1699452787770, 1699452787770),
	(378, 'ModBus Device', 'Fox Edge', '逆变器11温度', '逆变器11温度', 0, 'Integer', '{}', 1699452787793, 1699452787793),
	(379, 'ZXDU58', '中兴通讯', '交流屏输出电流L1', '交流屏输出电流L1', 0, 'Double', '{}', 1699452787806, 1699452787806),
	(380, 'ZXDU58', '中兴通讯', '模块04输出电流', '模块04输出电流', 0, 'Double', '{}', 1699452787824, 1699452787824),
	(381, 'ZXDU58', '中兴通讯', '输出电流L2告警', '输出电流L2告警', 0, 'Boolean', '{}', 1699452787841, 1699452787841),
	(382, 'ModBus Device', 'Fox Edge', '逆变器10输出电流', '逆变器10输出电流', 0, 'Double', '{}', 1699452787858, 1699452787858),
	(383, 'ModBus Device', 'Fox Edge', '逆变器02输出电流', '逆变器02输出电流', 0, 'Double', '{}', 1699452787877, 1699452787877),
	(384, 'ModBus Device', 'Fox Edge', '逆变器03温度', '逆变器03温度', 0, 'Integer', '{}', 1699452787909, 1699452787909),
	(385, 'ModBus Device', 'Fox Edge', '逆变器05输出电流', '逆变器05输出电流', 0, 'Double', '{}', 1699452787952, 1699452787952),
	(386, 'ZXDU58', '中兴通讯', 'C级防雷器坏告警', 'C级防雷器坏告警', 0, 'Boolean', '{}', 1699452787961, 1699452787961),
	(387, 'ZXDU58', '中兴通讯', '交流输入电压L2告警', '交流输入电压L2告警', 0, 'Boolean', '{}', 1699452787975, 1699452787975),
	(388, 'ZXDU58', '中兴通讯', '模块01输出电流', '模块01输出电流', 0, 'Double', '{}', 1699452787993, 1699452787993),
	(389, 'ModBus Device', 'Fox Edge', '逆变器16输出电流', '逆变器16输出电流', 0, 'Double', '{}', 1699452788004, 1699452788004),
	(390, 'CJT188', 'Fox Edge', '状态1', '状态1', 0, 'Integer', '{}', 1699452788023, 1699452788023),
	(391, 'ModBus Device', 'Fox Edge', '逆变器07温度', '逆变器07温度', 0, 'Integer', '{}', 1699452788036, 1699452788036),
	(392, 'ModBus Device', 'Fox Edge', '逆变器14输出电流', '逆变器14输出电流', 0, 'Double', '{}', 1699452788069, 1699452788069),
	(393, 'ZXDU58', '中兴通讯', '交流输入空开1断', '交流输入空开1断', 0, 'Boolean', '{}', 1699452788102, 1699452788102),
	(394, 'CE+T UPS', '深圳安圣电气有限公司', '逆变器04输出电流', '逆变器04输出电流', 0, 'Integer', '{}', 1699452788113, 1699452788113),
	(395, 'ModBus Device', 'Fox Edge', '逆变器10输出功率', '逆变器10输出功率', 0, 'Integer', '{}', 1699452788128, 1699452788128),
	(396, 'ZXDU58', '中兴通讯', '模块06输出电流', '模块06输出电流', 0, 'Double', '{}', 1699452788138, 1699452788138),
	(397, 'ModBus Device', 'Fox Edge', '逆变器14温度', '逆变器14温度', 0, 'Integer', '{}', 1699452788153, 1699452788153),
	(398, 'ModBus Device', 'Fox Edge', '逆变器03输出电流', '逆变器03输出电流', 0, 'Double', '{}', 1699452788165, 1699452788165),
	(399, 'ModBus Device', 'Fox Edge', '逆变器16输出功率', '逆变器16输出功率', 0, 'Integer', '{}', 1699452788181, 1699452788181),
	(400, 'CE+T UPS', '深圳安圣电气有限公司', '逆变器11输出功率', '逆变器11输出功率', 0, 'Integer', '{}', 1699452788207, 1699452788207),
	(401, 'CE+T UPS', '深圳安圣电气有限公司', '逆变器12输出电流', '逆变器12输出电流', 0, 'Integer', '{}', 1699452788232, 1699452788232),
	(402, 'CE+T UPS', '深圳安圣电气有限公司', '逆变器09输出功率', '逆变器09输出功率', 0, 'Integer', '{}', 1699452788249, 1699452788249),
	(403, 'omron-fins', 'omron', '数值', '数值', 0, 'Integer', '{}', 1699452788264, 1699452788264),
	(404, 'ModBus Device', 'Fox Edge', '逆变器05输出功率', '逆变器05输出功率', 0, 'Integer', '{}', 1699452788274, 1699452788274),
	(405, 'CE+T UPS', '深圳安圣电气有限公司', '逆变器06输出功率', '逆变器06输出功率', 0, 'Integer', '{}', 1699452788329, 1699452788329),
	(406, 'CE+T UPS', '深圳安圣电气有限公司', '组2输入电压', '组2输入电压', 0, 'Double', '{}', 1699452788338, 1699452788338),
	(407, 'ModBus Device', 'Fox Edge', '逆变器13输出功率', '逆变器13输出功率', 0, 'Integer', '{}', 1699452788353, 1699452788353),
	(408, 'ZXDU58', '中兴通讯', '整流模块输出电压', '整流模块输出电压', 0, 'Double', '{}', 1699452788368, 1699452788368),
	(409, 'ModBus Device', 'Fox Edge', '逆变器12输出电流', '逆变器12输出电流', 0, 'Double', '{}', 1699452788378, 1699452788378),
	(410, 'ZXDU58', '中兴通讯', '模块11输出电流', '模块11输出电流', 0, 'Double', '{}', 1699452788413, 1699452788413),
	(411, 'ModBus Device', 'Fox Edge', '逆变器08温度', '逆变器08温度', 0, 'Integer', '{}', 1699452788470, 1699452788470),
	(412, 'ModBus Device', 'Fox Edge', '逆变器09输出电流', '逆变器09输出电流', 0, 'Double', '{}', 1699452788495, 1699452788495),
	(413, 'CJT188', 'Fox Edge', '本月用量', '本月用量', 0, 'Integer', '{}', 1699452788550, 1699452788550),
	(414, 'ZXDU58', '中兴通讯', '模块08输出电流', '模块08输出电流', 0, 'Double', '{}', 1699452788558, 1699452788558),
	(415, 'ModBus Device', 'Fox Edge', '组2输入电压', '组2输入电压', 0, 'Double', '{}', 1699452788571, 1699452788571),
	(416, 'ZXDU58', '中兴通讯', '交流输入相电压L3', '交流输入相电压L3', 0, 'Double', '{}', 1699452788581, 1699452788581),
	(417, 'ModBus Device', 'Fox Edge', '逆变器13温度', '逆变器13温度', 0, 'Integer', '{}', 1699452788598, 1699452788598),
	(418, 'CJT188', 'Fox Edge', '累计用量', '累计用量', 0, 'Integer', '{}', 1699452788635, 1699452788635),
	(419, 'ModBus Device', 'Fox Edge', '系统输出频率', '系统输出频率', 0, 'Double', '{}', 1699452788653, 1699452788653),
	(420, 'ModBus Device', 'Fox Edge', '逆变器03输出功率', '逆变器03输出功率', 0, 'Integer', '{}', 1699452788668, 1699452788668),
	(421, 'ModBus Device', 'Fox Edge', '逆变器13输出电流', '逆变器13输出电流', 0, 'Double', '{}', 1699452788684, 1699452788684),
	(422, 'ModBus Device', 'Fox Edge', '组1输入电压', '组1输入电压', 0, 'Double', '{}', 1699452788696, 1699452788696),
	(423, 'CJT188', 'Fox Edge', '本月用量单位', '本月用量单位', 0, 'String', '{}', 1699452788716, 1699452788716),
	(424, 'ZXDU58', '中兴通讯', '交流屏输出电流L3', '交流屏输出电流L3', 0, 'Double', '{}', 1699452788740, 1699452788740),
	(425, 'ModBus Device', 'Fox Edge', '逆变器15输出功率', '逆变器15输出功率', 0, 'Integer', '{}', 1699452788753, 1699452788753),
	(426, 'ModBus Device', 'Fox Edge', '系统输出电压', '系统输出电压', 0, 'Integer', '{}', 1699452788769, 1699452788769),
	(427, 'ModBus Device', 'Fox Edge', '逆变器05温度', '逆变器05温度', 0, 'Integer', '{}', 1699452788820, 1699452788820),
	(428, 'ModBus Device', 'Fox Edge', '逆变器12输出功率', '逆变器12输出功率', 0, 'Integer', '{}', 1699452788865, 1699452788865),
	(429, 'ModBus Device', 'Fox Edge', '逆变器07输出功率', '逆变器07输出功率', 0, 'Integer', '{}', 1699452788881, 1699452788881),
	(430, 'ZXDU58', '中兴通讯', '交流输入空开2断', '交流输入空开2断', 0, 'Boolean', '{}', 1699452788897, 1699452788897),
	(431, 'ModBus Device', 'Fox Edge', '逆变器01温度', '逆变器01温度', 0, 'Integer', '{}', 1699452788914, 1699452788914),
	(432, 'ModBus Device', 'Fox Edge', '逆变器01输出功率', '逆变器01输出功率', 0, 'Integer', '{}', 1699452788939, 1699452788939),
	(433, 'CJT188', 'Fox Edge', '累计用量单位', '累计用量单位', 0, 'String', '{}', 1699452788956, 1699452788956),
	(434, 'ModBus Device', 'Fox Edge', '逆变器09输出功率', '逆变器09输出功率', 0, 'Integer', '{}', 1699452788979, 1699452788979),
	(435, 'ZXDU58', '中兴通讯', '输出电流L1告警', '输出电流L1告警', 0, 'Boolean', '{}', 1699452789003, 1699452789003),
	(436, 'ModBus Device', 'Fox Edge', '逆变器16温度', '逆变器16温度', 0, 'Integer', '{}', 1699452789033, 1699452789033),
	(437, 'CE+T UPS', '深圳安圣电气有限公司', '逆变器06温度', '逆变器06温度', 0, 'Integer', '{}', 1699452789058, 1699452789058),
	(438, 'ZXDU58', '中兴通讯', '交流输入相电压L2', '交流输入相电压L2', 0, 'Double', '{}', 1699452789120, 1699452789120),
	(439, 'ZXDU58', '中兴通讯', '交流停电告警', '交流停电告警', 0, 'Boolean', '{}', 1699452789158, 1699452789158),
	(440, 'CE+T UPS', '深圳安圣电气有限公司', '逆变器02温度', '逆变器02温度', 0, 'Integer', '{}', 1699452789181, 1699452789181),
	(441, 'CE+T UPS', '深圳安圣电气有限公司', '逆变器 2传输故障告警状态', '逆变器 2传输故障告警状态', 0, 'Boolean', '{}', 1699452789195, 1699452789195),
	(442, 'ZXDU58', '中兴通讯', '模块02输出电流', '模块02输出电流', 0, 'Double', '{}', 1699452789235, 1699452789235),
	(443, 'CE+T UPS', '深圳安圣电气有限公司', 'devAddr', 'devAddr', 0, 'Integer', '{}', 1699452789261, 1699452789261),
	(444, 'CJT188', 'Fox Edge', 'sn', 'sn', 0, 'Integer', '{}', 1699452789283, 1699452789283),
	(445, 'ModBus Device', 'Fox Edge', '逆变器07输出电流', '逆变器07输出电流', 0, 'Double', '{}', 1699452789306, 1699452789306),
	(446, 'ModBus Device', 'Fox Edge', '逆变器12温度', '逆变器12温度', 0, 'Integer', '{}', 1699452789342, 1699452789342),
	(447, 'ModBus Device', 'Fox Edge', '逆变器15输出电流', '逆变器15输出电流', 0, 'Double', '{}', 1699452789368, 1699452789368),
	(448, 'ModBus Device', 'Fox Edge', '组3输入电压', '组3输入电压', 0, 'Double', '{}', 1699452789386, 1699452789386),
	(449, 'ZXDU58', '中兴通讯', '交流屏输出电流L2', '交流屏输出电流L2', 0, 'Double', '{}', 1699452789459, 1699452789459),
	(450, '消防用水五合一（LoRaWan）', '武汉中科图灵', 'offlineFlag', 'offlineFlag', 0, 'Boolean', '{"unit": "", "description": ""}', 1699714670673, 1699764209761),
	(451, '消防用水五合一（LoRaWan）', '武汉中科图灵', 'points', 'points', 4, 'LinkedHashMap', '{"unit": "", "description": ""}', 1699714670765, 1699764221934),
	(452, '消防用水五合一（LoRaWan）', '武汉中科图灵', 'offlineData', 'offlineData', 4, 'LinkedHashMap', '{"unit": "", "description": ""}', 1699714670801, 1699762337472),
	(453, '消防用水五合一（LoRaWan）', '武汉中科图灵', 'iccid', 'ICCID', 0, 'String', '{"unit": "", "description": ""}', 1699714670849, 1699758585243),
	(454, '消防用水五合一（LoRaWan）', '武汉中科图灵', 'flag', 'Flag', 0, 'Boolean', '{"unit": "", "description": ""}', 1699714670871, 1699758594801),
	(455, '消防用水五合一（LoRaWan）', '武汉中科图灵', 'points_OFFLINE_alarmValue', 'points_OFFLINE_alarmValue', 0, 'Integer', '{}', 1699770347448, 1699770347448),
	(456, '消防用水五合一（LoRaWan）', '武汉中科图灵', 'points_OFFLINE_alarmType', 'points_OFFLINE_alarmType', 0, 'String', '{}', 1699770347490, 1699770347490),
	(457, '消防用水五合一（LoRaWan）', '武汉中科图灵', 'offlineData_isguzhang', 'offlineData_isguzhang', 0, 'Boolean', '{}', 1699770347508, 1699770347508),
	(458, '消防用水五合一（LoRaWan）', '武汉中科图灵', 'points_MENCI_2_alarmStatus', 'points_MENCI_2_alarmStatus', 0, 'Integer', '{}', 1699770347534, 1699770347534),
	(459, '消防用水五合一（LoRaWan）', '武汉中科图灵', 'points_SIGN_alarmValue', 'points_SIGN_alarmValue', 0, 'Integer', '{}', 1699770347558, 1699770347558),
	(460, '消防用水五合一（LoRaWan）', '武汉中科图灵', 'points_MENCI_1_alarmStatus', 'points_MENCI_1_alarmStatus', 0, 'Integer', '{}', 1699770347583, 1699770347583),
	(461, '消防用水五合一（LoRaWan）', '武汉中科图灵', 'points_MENCI_1_alarmType', 'MENCI_1告警类型', 1, 'String', '{"unit": "", "description": ""}', 1699770347628, 1699784349620),
	(462, '消防用水五合一（LoRaWan）', '武汉中科图灵', 'offlineData_isalarm', '离线数据是否告警', 1, 'Boolean', '{"unit": "", "description": ""}', 1699770347648, 1699784482050),
	(463, '消防用水五合一（LoRaWan）', '武汉中科图灵', 'points_status', '采样状态', 1, 'Integer', '{"unit": "", "description": ""}', 1699770347660, 1699784315321),
	(464, '消防用水五合一（LoRaWan）', '武汉中科图灵', 'points_SIGN_alarmType', 'SIGN告警类型', 1, 'String', '{"unit": "", "description": ""}', 1699770347678, 1699784170958),
	(465, '消防用水五合一（LoRaWan）', '武汉中科图灵', 'points_MENCI_2_alarmValue', 'MENCI_2告警数值', 1, 'Integer', '{"unit": "", "description": ""}', 1699770347695, 1699784338078),
	(466, '消防用水五合一（LoRaWan）', '武汉中科图灵', 'points_VOL_alarmType', 'VOL告警类型', 1, 'String', '{"unit": "", "description": ""}', 1699770347710, 1699784449979),
	(467, '消防用水五合一（LoRaWan）', '武汉中科图灵', 'points_SIGN_alarmStatus', 'SIGN告警状态', 1, 'Integer', '{"unit": "", "description": ""}', 1699770347750, 1699784445402),
	(468, '消防用水五合一（LoRaWan）', '武汉中科图灵', 'points_VOL_alarmStatus', 'VOL告警状态', 1, 'Integer', '{"unit": "", "description": ""}', 1699770347762, 1699784121153),
	(469, '消防用水五合一（LoRaWan）', '武汉中科图灵', 'points_MENCI_1_alarmValue', 'MENCI_1告警数值', 1, 'Integer', '{"unit": "", "description": ""}', 1699770347773, 1699784404267),
	(470, '消防用水五合一（LoRaWan）', '武汉中科图灵', 'points_VOL_alarmValue', 'VOL告警数值', 1, 'String', '{"unit": "", "description": ""}', 1699770347798, 1699784399344),
	(471, '消防用水五合一（LoRaWan）', '武汉中科图灵', 'points_MENCI_2_alarmType', 'MENCI2告警类型', 1, 'String', '{"unit": "", "description": ""}', 1699770347814, 1699784391587),
	(472, '消防用水五合一（LoRaWan）', '武汉中科图灵', 'points_OFFLINE_alarmStatus', 'OFFLINE告警状态', 1, 'Integer', '{"unit": "", "description": ""}', 1699770347847, 1699784385848),
	(473, '消防用水五合一（LoRaWan）', '武汉中科图灵', 'VOL告警状态', 'VOL告警状态', 1, 'Integer', '{"unit": "", "description": ""}', 1699784133439, 1699784378896),
	(474, '消防用水五合一（LoRaWan）', '武汉中科图灵', 'SIGN告警类型', 'SIGN告警类型', 1, 'String', '{"unit": "", "description": ""}', 1699784184022, 1699784369856),
	(475, '消防用水五合一（LoRaWan）', '武汉中科图灵', '采样状态', '采样状态', 1, 'Integer', '{"unit": "", "description": ""}', 1699784325380, 1699784365057),
	(476, '消防用水五合一（LoRaWan）', '武汉中科图灵', 'MENCI_2告警数值', 'MENCI_2告警数值', 1, 'Integer', '{"unit": "", "description": ""}', 1699784345737, 1699784360327),
	(477, '消防用水五合一（LoRaWan）', '武汉中科图灵', 'MENCI_1告警类型', 'MENCI_1告警类型', 1, 'String', '{"unit": "", "description": ""}', 1699784366044, 1699784411201),
	(478, '消防用水五合一（LoRaWan）', '武汉中科图灵', 'OFFLINE告警状态', 'OFFLINE告警状态', 1, 'Integer', '{"unit": "", "description": ""}', 1699784396569, 1699784437464),
	(479, '消防用水五合一（LoRaWan）', '武汉中科图灵', 'MENCI2告警类型', 'MENCI2告警类型', 1, 'String', '{"unit": "", "description": ""}', 1699784406756, 1699784421119),
	(480, '消防用水五合一（LoRaWan）', '武汉中科图灵', 'VOL告警数值', 'VOL告警数值', 1, 'String', '{"unit": "", "description": ""}', 1699784406780, 1699784432227),
	(481, '消防用水五合一（LoRaWan）', '武汉中科图灵', 'MENCI_1告警数值', 'MENCI_1告警数值', 1, 'Integer', '{"unit": "", "description": ""}', 1699784416882, 1699784426869),
	(482, '消防用水五合一（LoRaWan）', '武汉中科图灵', 'VOL告警类型', 'VOL告警类型', 0, 'String', '{}', 1699784457250, 1699784457250),
	(483, '消防用水五合一（LoRaWan）', '武汉中科图灵', 'SIGN告警状态', 'SIGN告警状态', 0, 'Integer', '{}', 1699784457277, 1699784457277),
	(484, '消防用水五合一（LoRaWan）', '武汉中科图灵', '离线数据是否告警', '离线数据是否告警', 0, 'Boolean', '{}', 1699784497669, 1699784497669),
	(485, '尼特烟雾传感器-4G-YG', '武汉中科图灵', 'points', 'points', 0, 'LinkedHashMap', '{}', 1700060638128, 1700060638128),
	(486, '尼特烟雾传感器-4G-YG', '武汉中科图灵', 'flag', 'flag', 0, 'Boolean', '{}', 1700060638239, 1700060638239),
	(487, '尼特烟雾传感器-4G-YG', '武汉中科图灵', 'offlineData', 'offlineData', 0, 'LinkedHashMap', '{}', 1700060638264, 1700060638264),
	(488, '尼特烟雾传感器-4G-YG', '武汉中科图灵', 'offlineFlag', 'offlineFlag', 0, 'Boolean', '{}', 1700060638287, 1700060638287),
	(489, '尼特烟雾传感器-4G-YG', '武汉中科图灵', 'iccid', 'iccid', 0, 'String', '{}', 1700060638314, 1700060638314),
	(490, 'LRW解码器', '', 'spark', 'spark', 0, 'Boolean', '{}', 1700060680651, 1700060680651),
	(491, 'LRW解码器', '', 'verProt', 'verProt', 0, 'Integer', '{}', 1700060680699, 1700060680699),
	(492, 'LRW解码器', '', 'plate', 'plate', 0, 'Boolean', '{}', 1700060680732, 1700060680732),
	(493, 'LRW解码器', '', 'verSoft', 'verSoft', 0, 'Integer', '{}', 1700060680757, 1700060680757),
	(494, 'LRW解码器', '', 'interval', 'interval', 0, 'Boolean', '{}', 1700060680777, 1700060680777),
	(498, 'HJ212-2017', '中国环境保护设备', 'heads', 'heads', 0, 'ArrayList', '{}', 1705326290805, 1705326290805),
	(499, 'HJ212-2017', '中国环境保护设备', 'datas', 'datas', 0, 'ArrayList', '{}', 1705326290840, 1705326290840),
	(500, '柜式空调(KPRd)', 'TCL科技集团股份有限公司', 'devAddr', 'devAddr', 0, 'Integer', '{}', 1711116363437, 1711116363437),
	(501, '柜式空调(KPRd)', 'TCL科技集团股份有限公司', 'result', 'result', 0, 'Integer', '{}', 1711116363538, 1711116363538),
	(502, '柜式空调(KPRd)', 'TCL科技集团股份有限公司', '防冷风(停送)', '防冷风(停送)', 0, 'Boolean', '{}', 1711450798855, 1711450798855),
	(503, '柜式空调(KPRd)', 'TCL科技集团股份有限公司', '室内管温短路故障', '室内管温短路故障', 0, 'Boolean', '{}', 1711450798920, 1711450798920),
	(504, '柜式空调(KPRd)', 'TCL科技集团股份有限公司', '压机状态', '压机状态', 0, 'Boolean', '{}', 1711450798935, 1711450798935),
	(505, '柜式空调(KPRd)', 'TCL科技集团股份有限公司', '过冷保护', '过冷保护', 0, 'Boolean', '{}', 1711450798948, 1711450798948),
	(506, '柜式空调(KPRd)', 'TCL科技集团股份有限公司', '防冷风(微风)', '防冷风(微风)', 0, 'Boolean', '{}', 1711450798964, 1711450798964),
	(507, '柜式空调(KPRd)', 'TCL科技集团股份有限公司', '室外管温开路故障', '室外管温开路故障', 0, 'Boolean', '{}', 1711450798982, 1711450798982),
	(508, '柜式空调(KPRd)', 'TCL科技集团股份有限公司', '室内温度开故障', '室内温度开故障', 0, 'Boolean', '{}', 1711450799000, 1711450799000),
	(509, '柜式空调(KPRd)', 'TCL科技集团股份有限公司', '室外机保护', '室外机保护', 0, 'Boolean', '{}', 1711450799017, 1711450799017),
	(510, '柜式空调(KPRd)', 'TCL科技集团股份有限公司', '过热保护', '过热保护', 0, 'Boolean', '{}', 1711450799032, 1711450799032),
	(511, '柜式空调(KPRd)', 'TCL科技集团股份有限公司', '设定温度', '设定温度', 0, 'Integer', '{}', 1711450799047, 1711450799047),
	(512, '柜式空调(KPRd)', 'TCL科技集团股份有限公司', '模式', '模式', 0, 'String', '{}', 1711450799063, 1711450799063),
	(513, '柜式空调(KPRd)', 'TCL科技集团股份有限公司', '除霜', '除霜', 0, 'Boolean', '{}', 1711450799078, 1711450799078),
	(514, '柜式空调(KPRd)', 'TCL科技集团股份有限公司', '风量', '风量', 0, 'String', '{}', 1711450799093, 1711450799093),
	(515, '柜式空调(KPRd)', 'TCL科技集团股份有限公司', '开关状态', '开关状态', 0, 'Boolean', '{}', 1711450799111, 1711450799111),
	(516, '柜式空调(KPRd)', 'TCL科技集团股份有限公司', '室内温度', '室内温度', 0, 'Integer', '{}', 1711450799124, 1711450799124),
	(517, '柜式空调(KPRd)', 'TCL科技集团股份有限公司', '室内管温开路故障', '室内管温开路故障', 0, 'Boolean', '{}', 1711450799143, 1711450799143),
	(518, '柜式空调(KPRd)', 'TCL科技集团股份有限公司', '室外管温短路故障', '室外管温短路故障', 0, 'Boolean', '{}', 1711450799158, 1711450799158),
	(519, '柜式空调(KPRd)', 'TCL科技集团股份有限公司', '管温进口AD值', '管温进口AD值', 0, 'Integer', '{}', 1711450799171, 1711450799171),
	(520, '柜式空调(KPRd)', 'TCL科技集团股份有限公司', '除霜出口AD值', '除霜出口AD值', 0, 'Integer', '{}', 1711450799189, 1711450799189),
	(521, '柜式空调(KPRd)', 'TCL科技集团股份有限公司', '电辅助加热暂停', '电辅助加热暂停', 0, 'Boolean', '{}', 1711450799199, 1711450799199),
	(522, '柜式空调(KPRd)', 'TCL科技集团股份有限公司', '室内温度短路故障', '室内温度短路故障', 0, 'Boolean', '{}', 1711450799212, 1711450799212),
	(523, '柜式空调(KPRd)', 'TCL科技集团股份有限公司', '过热停机', '过热停机', 0, 'Boolean', '{}', 1711450799225, 1711450799225),
	(524, '柜式空调(KPRd)', 'TCL科技集团股份有限公司', '运行', '运行', 0, 'Boolean', '{}', 1711544043267, 1711544043267),
	(525, '海尔空调-YCJ-A000', '海尔集团公司', 'success', 'success', 0, 'Boolean', '{}', 1711544473399, 1711544473399),
	(526, '海尔空调-YCJ-A000', '海尔集团公司', 'devAddr', 'devAddr', 0, 'Integer', '{}', 1711544473435, 1711544473435),
	(527, 'DLT645 v1997', 'Fox Edge', '(当前)正向有功总电能', '(当前)正向有功总电能', 0, 'Double', '{}', 1712465926687, 1712465926687),
	(528, 'JB-TGL-TX3006C', '泰和安消防科技有限公司', '心跳', '心跳', 0, 'String', '{}', 1713068348584, 1713068348584),
	(529, 'JB-3208G', '上海松江飞繁电子有限公司', '心跳', '心跳', 0, 'String', '{}', 1713079175796, 1713079175796),
	(530, 'JB-QGZ2L-FW19000G', '北京防威威盛机电设备有限责任公司', '心跳', '心跳', 0, 'String', '{}', 1713355104416, 1713355104416),
	(531, 'JB-QT-TS3200', '青岛鼎信通讯消防安全有限公司', '心跳', '心跳', 0, 'String', '{}', 1713357226167, 1713357226167),
	(532, 'ModBus Device', 'Fox Edge', '(当前)正向有功费率4电能', '(当前)正向有功费率4电能', 0, 'Double', '{}', 1713614652546, 1713614652546),
	(533, 'ModBus Device', 'Fox Edge', '(当前)第一象限无功费率4电能', '(当前)第一象限无功费率4电能', 0, 'Double', '{}', 1713614652572, 1713614652572),
	(534, 'ModBus Device', 'Fox Edge', '(当前)正向有功费率3电能', '(当前)正向有功费率3电能', 0, 'Double', '{}', 1713614652649, 1713614652649),
	(535, 'ModBus Device', 'Fox Edge', '(当前)正向有功总电能', '(当前)正向有功总电能', 0, 'Double', '{}', 1713614652659, 1713614652659),
	(536, 'ModBus Device', 'Fox Edge', '(当前)第一象限无功总电能', '(当前)第一象限无功总电能', 0, 'Double', '{}', 1713614652669, 1713614652669),
	(537, 'ModBus Device', 'Fox Edge', '(当前)正向有功费率1电能', '(当前)正向有功费率1电能', 0, 'Double', '{}', 1713614652674, 1713614652674),
	(538, 'ModBus Device', 'Fox Edge', '(当前)正向有功费率2电能', '(当前)正向有功费率2电能', 0, 'Double', '{}', 1713614652682, 1713614652682),
	(539, 'ModBus Device', 'Fox Edge', '(当前)第一象限无功费率2电能', '(当前)第一象限无功费率2电能', 0, 'Double', '{}', 1713614652690, 1713614652690),
	(540, 'ModBus Device', 'Fox Edge', '(当前)第一象限无功费率3电能', '(当前)第一象限无功费率3电能', 0, 'Double', '{}', 1713614652695, 1713614652695),
	(541, 'ModBus Device', 'Fox Edge', '(当前)第一象限无功费率1电能', '(当前)第一象限无功费率1电能', 0, 'Double', '{}', 1713614652704, 1713614652704);

-- 正在导出表  fox_edge.tb_device_model 的数据：~1 rows (大约)
DELETE FROM `tb_device_model`;
INSERT INTO `tb_device_model` (`id`, `model_name`, `device_type`, `manufacturer`, `model_param`, `extend_param`, `create_time`, `update_time`) VALUES
	(1317, '范例：正泰-三相电表-寄存器定义表', '三相电表(DT-SU666)', '正泰集团股份有限公司', '{"engine":{"manufacturer":"Fox Edge","deviceType":"ModBus Device"},"list":[{"value_name":"版本号","value_index":"0","bit_index":"0","bit_length":"16","value_type":"int","magnification":"1","determine":"","remark":"16位有符号","十六进制地址":"0000H"},{"value_name":"编程密码","value_index":"1","bit_index":"0","bit_length":"16","value_type":"int","magnification":"1","determine":"","remark":"16位有符号","十六进制地址":"0001H"},{"value_name":"电能清零","value_index":"2","bit_index":"0","bit_length":"16","value_type":"int","magnification":"1","determine":"","remark":"16位有符号","十六进制地址":"0002H"},{"value_name":"网络选择","value_index":"3","bit_index":"0","bit_length":"16","value_type":"int","magnification":"1","determine":"","remark":"16位有符号","十六进制地址":"0003H"},{"value_name":"保留0004H","value_index":"4","bit_index":"0","bit_length":"16","value_type":"int","magnification":"1","determine":"","remark":"16位有符号","十六进制地址":"0004H"},{"value_name":"保留0005H","value_index":"5","bit_index":"0","bit_length":"16","value_type":"int","magnification":"1","determine":"","remark":"16位有符号","十六进制地址":"0005H"},{"value_name":"电流互感器倍率IrAt","value_index":"6","bit_index":"0","bit_length":"16","value_type":"int","magnification":"1","determine":"","remark":"16位有符号","十六进制地址":"0006H"},{"value_name":"电压互感器倍率UrA","value_index":"7","bit_index":"0","bit_length":"16","value_type":"int","magnification":"1","determine":"","remark":"16位有符号","十六进制地址":"0007H"},{"value_name":"保留0008H","value_index":"8","bit_index":"0","bit_length":"16","value_type":"int","magnification":"1","determine":"","remark":"16位有符号","十六进制地址":"0008H"},{"value_name":"有功、无功脉冲输出切换","value_index":"9","bit_index":"0","bit_length":"16","value_type":"int","magnification":"1","determine":"","remark":"16位有符号","十六进制地址":"0009H"},{"value_name":"轮显时间(秒)","value_index":"10","bit_index":"0","bit_length":"16","value_type":"int","magnification":"1","determine":"","remark":"16位有符号","十六进制地址":"000AH"},{"value_name":"背光时间控制(秒)","value_index":"11","bit_index":"0","bit_length":"16","value_type":"int","magnification":"1","determine":"","remark":"16位有符号","十六进制地址":"000BH"},{"value_name":"协议切换","value_index":"44","bit_index":"0","bit_length":"16","value_type":"int","magnification":"1","determine":"","remark":"16位有符号","十六进制地址":"002CH"},{"value_name":"通讯波特率","value_index":"45","bit_index":"0","bit_length":"16","value_type":"int","magnification":"1","determine":"","remark":"16位有符号","十六进制地址":"002DH"},{"value_name":"通讯地址","value_index":"46","bit_index":"0","bit_length":"16","value_type":"int","magnification":"1","determine":"","remark":"16位有符号","十六进制地址":"002EH"},{"value_name":"时间(秒)","value_index":"47","bit_index":"0","bit_length":"16","value_type":"int","magnification":"1","determine":"","remark":"16位有符号","十六进制地址":"002FH"},{"value_name":"时间(分)","value_index":"48","bit_index":"0","bit_length":"16","value_type":"int","magnification":"1","determine":"","remark":"16位有符号","十六进制地址":"0030H"},{"value_name":"时间(时)","value_index":"49","bit_index":"0","bit_length":"16","value_type":"int","magnification":"1","determine":"","remark":"16位有符号","十六进制地址":"0031H"},{"value_name":"时间(日)","value_index":"50","bit_index":"0","bit_length":"16","value_type":"int","magnification":"1","determine":"","remark":"16位有符号","十六进制地址":"0032H"},{"value_name":"时间(月)","value_index":"51","bit_index":"0","bit_length":"16","value_type":"int","magnification":"1","determine":"","remark":"16位有符号","十六进制地址":"0033H"},{"value_name":"时间(年)","value_index":"52","bit_index":"0","bit_length":"16","value_type":"int","magnification":"1","determine":"","remark":"16位有符号","十六进制地址":"0034H"},{"value_name":"三相线电压数据Uab","value_index":"8192","bit_index":"0","bit_length":"32","value_type":"float","magnification":"0.1","determine":"","remark":"单精度浮点","十六进制地址":"2000H"},{"value_name":"三相线电压数据Ubc","value_index":"8194","bit_index":"0","bit_length":"32","value_type":"float","magnification":"0.1","determine":"","remark":"单精度浮点","十六进制地址":"2002H"},{"value_name":"三相线电压数据Uca","value_index":"8196","bit_index":"0","bit_length":"32","value_type":"float","magnification":"0.1","determine":"","remark":"单精度浮点","十六进制地址":"2004H"},{"value_name":"三相相电压数据Ua","value_index":"8198","bit_index":"0","bit_length":"32","value_type":"float","magnification":"0.1","determine":"","remark":"单精度浮点","十六进制地址":"2006H"},{"value_name":"三相相电压数据Ub","value_index":"8200","bit_index":"0","bit_length":"32","value_type":"float","magnification":"0.1","determine":"","remark":"单精度浮点","十六进制地址":"2008H"},{"value_name":"三相相电压数据Uc","value_index":"8202","bit_index":"0","bit_length":"32","value_type":"float","magnification":"0.1","determine":"","remark":"单精度浮点","十六进制地址":"200AH"},{"value_name":"三相电流数据Ia","value_index":"8204","bit_index":"0","bit_length":"32","value_type":"float","magnification":"0.1","determine":"","remark":"单精度浮点","十六进制地址":"200CH"},{"value_name":"三相电流数据Ib","value_index":"8206","bit_index":"0","bit_length":"32","value_type":"float","magnification":"0.1","determine":"","remark":"单精度浮点","十六进制地址":"200EH"},{"value_name":"三相电流数据Ic","value_index":"8208","bit_index":"0","bit_length":"32","value_type":"float","magnification":"0.1","determine":"","remark":"单精度浮点","十六进制地址":"2010H"},{"value_name":"合相有功功率","value_index":"8210","bit_index":"0","bit_length":"32","value_type":"float","magnification":"0.1","determine":"","remark":"单精度浮点","十六进制地址":"2012H"},{"value_name":"A相有功功率","value_index":"8212","bit_index":"0","bit_length":"32","value_type":"float","magnification":"0.1","determine":"","remark":"单精度浮点","十六进制地址":"2014H"},{"value_name":"B相有功功率","value_index":"8214","bit_index":"0","bit_length":"32","value_type":"float","magnification":"0.1","determine":"","remark":"单精度浮点","十六进制地址":"2016H"},{"value_name":"C相有功功率","value_index":"8216","bit_index":"0","bit_length":"32","value_type":"float","magnification":"0.1","determine":"","remark":"单精度浮点","十六进制地址":"2018H"},{"value_name":"合相无功功率","value_index":"8218","bit_index":"0","bit_length":"32","value_type":"float","magnification":"0.1","determine":"","remark":"单精度浮点","十六进制地址":"201AH"},{"value_name":"A相无功功率","value_index":"8220","bit_index":"0","bit_length":"32","value_type":"float","magnification":"0.1","determine":"","remark":"单精度浮点","十六进制地址":"201CH"},{"value_name":"B相无功功率","value_index":"8222","bit_index":"0","bit_length":"32","value_type":"float","magnification":"0.1","determine":"","remark":"单精度浮点","十六进制地址":"201EH"},{"value_name":"C相无功功率","value_index":"8224","bit_index":"0","bit_length":"32","value_type":"float","magnification":"0.1","determine":"","remark":"单精度浮点","十六进制地址":"2020H"},{"value_name":"保留2022H","value_index":"8226","bit_index":"0","bit_length":"32","value_type":"float","magnification":"0.1","determine":"","remark":"单精度浮点","十六进制地址":"2022H"},{"value_name":"保留2024H","value_index":"8228","bit_index":"0","bit_length":"32","value_type":"float","magnification":"0.1","determine":"","remark":"单精度浮点","十六进制地址":"2024H"},{"value_name":"保留2026H","value_index":"8230","bit_index":"0","bit_length":"32","value_type":"float","magnification":"0.1","determine":"","remark":"单精度浮点","十六进制地址":"2026H"},{"value_name":"保留2028H","value_index":"8232","bit_index":"0","bit_length":"32","value_type":"float","magnification":"0.1","determine":"","remark":"单精度浮点","十六进制地址":"2028H"},{"value_name":"合相功率因数","value_index":"8234","bit_index":"0","bit_length":"32","value_type":"float","magnification":"0.1","determine":"","remark":"单精度浮点","十六进制地址":"202AH"},{"value_name":"A相功率因数","value_index":"8236","bit_index":"0","bit_length":"32","value_type":"float","magnification":"0.1","determine":"","remark":"单精度浮点","十六进制地址":"202CH"},{"value_name":"B相功率因数","value_index":"8238","bit_index":"0","bit_length":"32","value_type":"float","magnification":"0.1","determine":"","remark":"单精度浮点","十六进制地址":"202EH"},{"value_name":"C相功率因数","value_index":"8240","bit_index":"0","bit_length":"32","value_type":"float","magnification":"0.1","determine":"","remark":"单精度浮点","十六进制地址":"2030H"},{"value_name":"保留2032H","value_index":"8242","bit_index":"0","bit_length":"32","value_type":"float","magnification":"0.1","determine":"","remark":"单精度浮点","十六进制地址":"2032H"},{"value_name":"保留2034H","value_index":"8244","bit_index":"0","bit_length":"32","value_type":"float","magnification":"0.1","determine":"","remark":"单精度浮点","十六进制地址":"2034H"},{"value_name":"保留2036H","value_index":"8246","bit_index":"0","bit_length":"32","value_type":"float","magnification":"0.1","determine":"","remark":"单精度浮点","十六进制地址":"2036H"},{"value_name":"A相电压总谐波含量(百分数)","value_index":"8248","bit_index":"0","bit_length":"32","value_type":"float","magnification":"0.1","determine":"","remark":"单精度浮点","十六进制地址":"2038H"},{"value_name":"B相电压总谐波含量(百分数)","value_index":"8250","bit_index":"0","bit_length":"32","value_type":"float","magnification":"0.1","determine":"","remark":"单精度浮点","十六进制地址":"203AH"},{"value_name":"C相电压总谐波含量(百分数)","value_index":"8252","bit_index":"0","bit_length":"32","value_type":"float","magnification":"0.1","determine":"","remark":"单精度浮点","十六进制地址":"203CH"},{"value_name":"A相电流总谐波含量(百分数)","value_index":"8254","bit_index":"0","bit_length":"32","value_type":"float","magnification":"0.1","determine":"","remark":"单精度浮点","十六进制地址":"203EH"},{"value_name":"B相电流总谐波含量(百分数)","value_index":"8256","bit_index":"0","bit_length":"32","value_type":"float","magnification":"0.1","determine":"","remark":"单精度浮点","十六进制地址":"2040H"},{"value_name":"C相电流总谐波含量(百分数)","value_index":"8258","bit_index":"0","bit_length":"32","value_type":"float","magnification":"0.1","determine":"","remark":"单精度浮点","十六进制地址":"2042H"},{"value_name":"频率","value_index":"8260","bit_index":"0","bit_length":"32","value_type":"float","magnification":"0.1","determine":"","remark":"单精度浮点","十六进制地址":"2044H"},{"value_name":"总有功功率需量","value_index":"8272","bit_index":"0","bit_length":"32","value_type":"float","magnification":"0.1","determine":"","remark":"单精度浮点","十六进制地址":"2050H"},{"value_name":"保留2052H","value_index":"8274","bit_index":"0","bit_length":"32","value_type":"float","magnification":"0.1","determine":"","remark":"单精度浮点","十六进制地址":"2052H"},{"value_name":"(当前)正向有功总电能","value_index":"4126","bit_index":"0","bit_length":"32","value_type":"float","magnification":"0.1","determine":"","remark":"单精度浮点","十六进制地址":"101EH"},{"value_name":"(当前)正向有功费率1电能","value_index":"4128","bit_index":"0","bit_length":"32","value_type":"float","magnification":"0.1","determine":"","remark":"单精度浮点","十六进制地址":"1020H"},{"value_name":"(当前)正向有功费率2电能","value_index":"4130","bit_index":"0","bit_length":"32","value_type":"float","magnification":"0.1","determine":"","remark":"单精度浮点","十六进制地址":"1022H"},{"value_name":"(当前)正向有功费率3电能","value_index":"4132","bit_index":"0","bit_length":"32","value_type":"float","magnification":"0.1","determine":"","remark":"单精度浮点","十六进制地址":"1024H"},{"value_name":"(当前)正向有功费率4电能","value_index":"4134","bit_index":"0","bit_length":"32","value_type":"float","magnification":"0.1","determine":"","remark":"单精度浮点","十六进制地址":"1026H"},{"value_name":"(当前)反向有功总电能","value_index":"4136","bit_index":"0","bit_length":"32","value_type":"float","magnification":"0.1","determine":"","remark":"单精度浮点","十六进制地址":"1028H"},{"value_name":"(当前)反向有功费率1电能","value_index":"4138","bit_index":"0","bit_length":"32","value_type":"float","magnification":"0.1","determine":"","remark":"单精度浮点","十六进制地址":"102AH"},{"value_name":"(当前)反向有功费率2电能","value_index":"4140","bit_index":"0","bit_length":"32","value_type":"float","magnification":"0.1","determine":"","remark":"单精度浮点","十六进制地址":"102CH"},{"value_name":"(当前)反向有功费率3电能","value_index":"4142","bit_index":"0","bit_length":"32","value_type":"float","magnification":"0.1","determine":"","remark":"单精度浮点","十六进制地址":"102EH"},{"value_name":"(当前)反向有功费率4电能","value_index":"4144","bit_index":"0","bit_length":"32","value_type":"float","magnification":"0.1","determine":"","remark":"单精度浮点","十六进制地址":"1030H"},{"value_name":"(当前)第一象限无功总电能","value_index":"4146","bit_index":"0","bit_length":"32","value_type":"float","magnification":"0.1","determine":"","remark":"单精度浮点","十六进制地址":"1032H"},{"value_name":"(当前)第一象限无功费率1电能","value_index":"4148","bit_index":"0","bit_length":"32","value_type":"float","magnification":"0.1","determine":"","remark":"单精度浮点","十六进制地址":"1034H"},{"value_name":"(当前)第一象限无功费率2电能","value_index":"4150","bit_index":"0","bit_length":"32","value_type":"float","magnification":"0.1","determine":"","remark":"单精度浮点","十六进制地址":"1036H"},{"value_name":"(当前)第一象限无功费率3电能","value_index":"4152","bit_index":"0","bit_length":"32","value_type":"float","magnification":"0.1","determine":"","remark":"单精度浮点","十六进制地址":"1038H"},{"value_name":"(当前)第一象限无功费率4电能","value_index":"4154","bit_index":"0","bit_length":"32","value_type":"float","magnification":"0.1","determine":"","remark":"单精度浮点","十六进制地址":"103AH"},{"value_name":"(当前)第二象限无功总电能","value_index":"4156","bit_index":"0","bit_length":"32","value_type":"float","magnification":"0.1","determine":"","remark":"单精度浮点","十六进制地址":"103CH"},{"value_name":"(当前)第二象限无功费率1电能","value_index":"4158","bit_index":"0","bit_length":"32","value_type":"float","magnification":"0.1","determine":"","remark":"单精度浮点","十六进制地址":"103EH"},{"value_name":"(当前)第二象限无功费率2电能","value_index":"4160","bit_index":"0","bit_length":"32","value_type":"float","magnification":"0.1","determine":"","remark":"单精度浮点","十六进制地址":"1040H"},{"value_name":"(当前)第二象限无功费率3电能","value_index":"4162","bit_index":"0","bit_length":"32","value_type":"float","magnification":"0.1","determine":"","remark":"单精度浮点","十六进制地址":"1042H"},{"value_name":"(当前)第二象限无功费率4电能","value_index":"4164","bit_index":"0","bit_length":"32","value_type":"float","magnification":"0.1","determine":"","remark":"单精度浮点","十六进制地址":"1044H"},{"value_name":"(当前)第三象限无功总电能","value_index":"4166","bit_index":"0","bit_length":"32","value_type":"float","magnification":"0.1","determine":"","remark":"单精度浮点","十六进制地址":"1046H"},{"value_name":"(当前)第三象限无功费率1电能","value_index":"4168","bit_index":"0","bit_length":"32","value_type":"float","magnification":"0.1","determine":"","remark":"单精度浮点","十六进制地址":"1048H"},{"value_name":"(当前)第三象限无功费率2电能","value_index":"4170","bit_index":"0","bit_length":"32","value_type":"float","magnification":"0.1","determine":"","remark":"单精度浮点","十六进制地址":"104AH"},{"value_name":"(当前)第三象限无功费率3电能","value_index":"4172","bit_index":"0","bit_length":"32","value_type":"float","magnification":"0.1","determine":"","remark":"单精度浮点","十六进制地址":"104CH"},{"value_name":"(当前)第三象限无功费率4电能","value_index":"4174","bit_index":"0","bit_length":"32","value_type":"float","magnification":"0.1","determine":"","remark":"单精度浮点","十六进制地址":"104EH"},{"value_name":"(当前)第四象限无功总电能","value_index":"4176","bit_index":"0","bit_length":"32","value_type":"float","magnification":"0.1","determine":"","remark":"单精度浮点","十六进制地址":"1050H"},{"value_name":"(当前)第四象限无功费率1电能","value_index":"4178","bit_index":"0","bit_length":"32","value_type":"float","magnification":"0.1","determine":"","remark":"单精度浮点","十六进制地址":"1052H"},{"value_name":"(当前)第四象限无功费率2电能","value_index":"4180","bit_index":"0","bit_length":"32","value_type":"float","magnification":"0.1","determine":"","remark":"单精度浮点","十六进制地址":"1054H"},{"value_name":"(当前)第四象限无功费率3电能","value_index":"4182","bit_index":"0","bit_length":"32","value_type":"float","magnification":"0.1","determine":"","remark":"单精度浮点","十六进制地址":"1056H"},{"value_name":"(当前)第四象限无功费率4电能","value_index":"4184","bit_index":"0","bit_length":"32","value_type":"float","magnification":"0.1","determine":"","remark":"单精度浮点","十六进制地址":"1058H"},{"value_name":"第一套01时区起始日期","value_index":"24576","bit_index":"0","bit_length":"16","value_type":"int","magnification":"1","determine":"","remark":"16位有符号","十六进制地址":"6000H"},{"value_name":"第一套01时区日时段表号","value_index":"24577","bit_index":"0","bit_length":"16","value_type":"int","magnification":"1","determine":"","remark":"16位有符号","十六进制地址":"6001H"},{"value_name":"第一套02时区起始日期","value_index":"24578","bit_index":"0","bit_length":"16","value_type":"int","magnification":"1","determine":"","remark":"16位有符号","十六进制地址":"6002H"},{"value_name":"第一套02时区日时段表号","value_index":"24579","bit_index":"0","bit_length":"16","value_type":"int","magnification":"1","determine":"","remark":"16位有符号","十六进制地址":"6003H"},{"value_name":"第一套03时区起始日期","value_index":"24580","bit_index":"0","bit_length":"16","value_type":"int","magnification":"1","determine":"","remark":"16位有符号","十六进制地址":"6004H"},{"value_name":"第一套03时区日时段表号","value_index":"24581","bit_index":"0","bit_length":"16","value_type":"int","magnification":"1","determine":"","remark":"16位有符号","十六进制地址":"6005H"},{"value_name":"第一套04时区起始日期","value_index":"24582","bit_index":"0","bit_length":"16","value_type":"int","magnification":"1","determine":"","remark":"16位有符号","十六进制地址":"6006H"},{"value_name":"第一套04时区日时段表号","value_index":"24583","bit_index":"0","bit_length":"16","value_type":"int","magnification":"1","determine":"","remark":"16位有符号","十六进制地址":"6007H"},{"value_name":"第一套05时区起始日期","value_index":"24584","bit_index":"0","bit_length":"16","value_type":"int","magnification":"1","determine":"","remark":"16位有符号","十六进制地址":"6008H"},{"value_name":"第一套05时区日时段表号","value_index":"24585","bit_index":"0","bit_length":"16","value_type":"int","magnification":"1","determine":"","remark":"16位有符号","十六进制地址":"6009H"},{"value_name":"第一套06时区起始日期","value_index":"24586","bit_index":"0","bit_length":"16","value_type":"int","magnification":"1","determine":"","remark":"16位有符号","十六进制地址":"600AH"},{"value_name":"第一套06时区日时段表号","value_index":"24587","bit_index":"0","bit_length":"16","value_type":"int","magnification":"1","determine":"","remark":"16位有符号","十六进制地址":"600BH"},{"value_name":"第一套07时区起始日期","value_index":"24588","bit_index":"0","bit_length":"16","value_type":"int","magnification":"1","determine":"","remark":"16位有符号","十六进制地址":"600CH"},{"value_name":"第一套07时区日时段表号","value_index":"24589","bit_index":"0","bit_length":"16","value_type":"int","magnification":"1","determine":"","remark":"16位有符号","十六进制地址":"600DH"},{"value_name":"第一套08时区起始日期","value_index":"24590","bit_index":"0","bit_length":"16","value_type":"int","magnification":"1","determine":"","remark":"16位有符号","十六进制地址":"600EH"},{"value_name":"第一套08时区日时段表号","value_index":"24591","bit_index":"0","bit_length":"16","value_type":"int","magnification":"1","determine":"","remark":"16位有符号","十六进制地址":"600FH"},{"value_name":"第一套09时区起始日期","value_index":"24592","bit_index":"0","bit_length":"16","value_type":"int","magnification":"1","determine":"","remark":"16位有符号","十六进制地址":"6010H"},{"value_name":"第一套09时区日时段表号","value_index":"24593","bit_index":"0","bit_length":"16","value_type":"int","magnification":"1","determine":"","remark":"16位有符号","十六进制地址":"6011H"},{"value_name":"第一套10时区起始日期","value_index":"24594","bit_index":"0","bit_length":"16","value_type":"int","magnification":"1","determine":"","remark":"16位有符号","十六进制地址":"6012H"},{"value_name":"第一套10时区日时段表号","value_index":"24595","bit_index":"0","bit_length":"16","value_type":"int","magnification":"1","determine":"","remark":"16位有符号","十六进制地址":"6013H"},{"value_name":"第一套11时区起始日期","value_index":"24596","bit_index":"0","bit_length":"16","value_type":"int","magnification":"1","determine":"","remark":"16位有符号","十六进制地址":"6014H"},{"value_name":"第一套11时区日时段表号","value_index":"24597","bit_index":"0","bit_length":"16","value_type":"int","magnification":"1","determine":"","remark":"16位有符号","十六进制地址":"6015H"},{"value_name":"第一套12时区起始日期","value_index":"24598","bit_index":"0","bit_length":"16","value_type":"int","magnification":"1","determine":"","remark":"16位有符号","十六进制地址":"6016H"},{"value_name":"第一套12时区日时段表号","value_index":"24599","bit_index":"0","bit_length":"16","value_type":"int","magnification":"1","determine":"","remark":"16位有符号","十六进制地址":"6017H"},{"value_name":"第一套13时区起始日期","value_index":"24600","bit_index":"0","bit_length":"16","value_type":"int","magnification":"1","determine":"","remark":"16位有符号","十六进制地址":"6018H"},{"value_name":"第一套13时区日时段表号","value_index":"24601","bit_index":"0","bit_length":"16","value_type":"int","magnification":"1","determine":"","remark":"16位有符号","十六进制地址":"6019H"},{"value_name":"第一套14时区起始日期","value_index":"24602","bit_index":"0","bit_length":"16","value_type":"int","magnification":"1","determine":"","remark":"16位有符号","十六进制地址":"601AH"},{"value_name":"第一套14时区日时段表号","value_index":"24603","bit_index":"0","bit_length":"16","value_type":"int","magnification":"1","determine":"","remark":"16位有符号","十六进制地址":"601BH"},{"value_name":"第一套第1日01时段起始时间","value_index":"24604","bit_index":"0","bit_length":"16","value_type":"int","magnification":"1","determine":"","remark":"16位有符号","十六进制地址":"601CH"},{"value_name":"第一套第1日01时段费率号","value_index":"24605","bit_index":"0","bit_length":"16","value_type":"int","magnification":"1","determine":"","remark":"16位有符号","十六进制地址":"601DH"},{"value_name":"第一套第1日02时段起始时间","value_index":"24606","bit_index":"0","bit_length":"16","value_type":"int","magnification":"1","determine":"","remark":"16位有符号","十六进制地址":"601EH"},{"value_name":"第一套第1日02时段费率号","value_index":"24607","bit_index":"0","bit_length":"16","value_type":"int","magnification":"1","determine":"","remark":"16位有符号","十六进制地址":"601FH"},{"value_name":"第一套第1日03时段起始时间","value_index":"24608","bit_index":"0","bit_length":"16","value_type":"int","magnification":"1","determine":"","remark":"16位有符号","十六进制地址":"6020H"},{"value_name":"第一套第1日03时段费率号","value_index":"24609","bit_index":"0","bit_length":"16","value_type":"int","magnification":"1","determine":"","remark":"16位有符号","十六进制地址":"6021H"},{"value_name":"第一套第1日04时段起始时间","value_index":"24610","bit_index":"0","bit_length":"16","value_type":"int","magnification":"1","determine":"","remark":"16位有符号","十六进制地址":"6022H"},{"value_name":"第一套第1日04时段费率号","value_index":"24611","bit_index":"0","bit_length":"16","value_type":"int","magnification":"1","determine":"","remark":"16位有符号","十六进制地址":"6023H"},{"value_name":"第一套第1日05时段起始时","value_index":"24612","bit_index":"0","bit_length":"16","value_type":"int","magnification":"1","determine":"","remark":"16位有符号","十六进制地址":"6024H"},{"value_name":"第一套第1日05时段费率号","value_index":"24613","bit_index":"0","bit_length":"16","value_type":"int","magnification":"1","determine":"","remark":"16位有符号","十六进制地址":"6025H"},{"value_name":"第一套第1日06时段起始时间","value_index":"24614","bit_index":"0","bit_length":"16","value_type":"int","magnification":"1","determine":"","remark":"16位有符号","十六进制地址":"6026H"},{"value_name":"第一套第1日06时段费率号","value_index":"24615","bit_index":"0","bit_length":"16","value_type":"int","magnification":"1","determine":"","remark":"16位有符号","十六进制地址":"6027H"},{"value_name":"第一套第1日07时段起始时间","value_index":"24616","bit_index":"0","bit_length":"16","value_type":"int","magnification":"1","determine":"","remark":"16位有符号","十六进制地址":"6028H"},{"value_name":"第一套第1日07时段费率号","value_index":"24617","bit_index":"0","bit_length":"16","value_type":"int","magnification":"1","determine":"","remark":"16位有符号","十六进制地址":"6029H"},{"value_name":"第一套第1日08时段起始时间","value_index":"24618","bit_index":"0","bit_length":"16","value_type":"int","magnification":"1","determine":"","remark":"16位有符号","十六进制地址":"602AH"},{"value_name":"第一套第1日08时段费率号","value_index":"24619","bit_index":"0","bit_length":"16","value_type":"int","magnification":"1","determine":"","remark":"16位有符号","十六进制地址":"602BH"},{"value_name":"第一套第1日09时段起始时间","value_index":"24620","bit_index":"0","bit_length":"16","value_type":"int","magnification":"1","determine":"","remark":"16位有符号","十六进制地址":"602CH"},{"value_name":"第一套第1日09时段费率号","value_index":"24621","bit_index":"0","bit_length":"16","value_type":"int","magnification":"1","determine":"","remark":"16位有符号","十六进制地址":"602DH"},{"value_name":"莞一套第1日10时段起始时间","value_index":"24622","bit_index":"0","bit_length":"16","value_type":"int","magnification":"1","determine":"","remark":"16位有符号","十六进制地址":"602EH"},{"value_name":"第一套第1日10时段费率号","value_index":"24623","bit_index":"0","bit_length":"16","value_type":"int","magnification":"1","determine":"","remark":"16位有符号","十六进制地址":"602FH"},{"value_name":"莞一套第1日11时段起始时间","value_index":"24624","bit_index":"0","bit_length":"16","value_type":"int","magnification":"1","determine":"","remark":"16位有符号","十六进制地址":"6030H"},{"value_name":"莞一套第1日11时段费率号","value_index":"24625","bit_index":"0","bit_length":"16","value_type":"int","magnification":"1","determine":"","remark":"16位有符号","十六进制地址":"6031H"},{"value_name":"莞一套第1日12时段起始时间","value_index":"24626","bit_index":"0","bit_length":"16","value_type":"int","magnification":"1","determine":"","remark":"16位有符号","十六进制地址":"6032H"},{"value_name":"莞一套第1日12时段费率号","value_index":"24627","bit_index":"0","bit_length":"16","value_type":"int","magnification":"1","determine":"","remark":"16位有符号","十六进制地址":"6033H"},{"value_name":"莞一套第1日13时段起始时","value_index":"24628","bit_index":"0","bit_length":"16","value_type":"int","magnification":"1","determine":"","remark":"16位有符号","十六进制地址":"6034H"},{"value_name":"莞一套第1日13时段费率号","value_index":"24629","bit_index":"0","bit_length":"16","value_type":"int","magnification":"1","determine":"","remark":"16位有符号","十六进制地址":"6035H"},{"value_name":"莞一套第1日14时段起始时间","value_index":"24630","bit_index":"0","bit_length":"16","value_type":"int","magnification":"1","determine":"","remark":"16位有符号","十六进制地址":"6036H"},{"value_name":"第一套第1日14时段费率号","value_index":"24631","bit_index":"0","bit_length":"16","value_type":"int","magnification":"1","determine":"","remark":"16位有符号","十六进制地址":"6037H"},{"value_name":""}]}', '{}', 1713671448144, 1713709002167);

-- 正在导出表  fox_edge.tb_device_status 的数据：~0 rows (大约)
DELETE FROM `tb_device_status`;

-- 正在导出表  fox_edge.tb_extend 的数据：~5 rows (大约)
DELETE FROM `tb_extend`;
INSERT INTO `tb_extend` (`id`, `extend_name`, `extend_type`, `extend_param`, `create_time`, `update_time`) VALUES
	(2, '设备：全体设备', 'DeviceEntityGlobe', '{"binds": [], "fields": [{"dataType": "String", "fieldName": "remark", "defaultValue": ""}, {"dataType": "String", "fieldName": "thingsboardHttpToken", "defaultValue": ""}, {"dataType": "String", "fieldName": "thingspanelHttpToken", "defaultValue": ""}, {"dataType": "Boolean", "fieldName": "huaweiIotDA", "defaultValue": false}]}', 1653308811000, 1698641263687),
	(3, '设备：设备类型-CE+T UPS', 'DeviceEntityType', '{"binds": [{"deviceType": "CE+T UPS", "manufacturer": "深圳安圣电气有限公司"}], "fields": [{"dataType": "String", "fieldName": "remark", "defaultValue": "3"}, {"dataType": "String", "fieldName": "thingsboardHttpToken", "defaultValue": "2"}]}', 1653308811000, 1699453909032),
	(4, '设备：设备对象-CE+T UPS设备-976', 'DeviceEntityObject', '{"binds": ["CE+T UPS设备-976"], "fields": [{"dataType": "String", "fieldName": "remark1", "defaultValue": ""}, {"dataType": "String", "fieldName": "token", "defaultValue": ""}]}', 1653308811000, 1699453822057),
	(24, '设备映射：全体级别', 'DeviceMapperEntityGlobe', '{"binds": [], "fields": [{"dataType": "String", "fieldName": "description", "defaultValue": ""}, {"dataType": "String", "fieldName": "unit", "defaultValue": ""}]}', 1698751244070, 1698753459561),
	(30, '设备映射：类型级别', 'DeviceMapperEntityType', '{"binds": [{"deviceType": "CE+T UPS", "manufacturer": "深圳安圣电气有限公司"}], "fields": []}', 1698751794632, 1699453619330);

-- 正在导出表  fox_edge.tb_iot_device_model 的数据：~2 rows (大约)
DELETE FROM `tb_iot_device_model`;
INSERT INTO `tb_iot_device_model` (`id`, `model_name`, `model_type`, `provider`, `service_param`, `model_schema`, `create_time`, `update_time`) VALUES
	(1, 'CE_T_UPS', 'device', 'HuaWei-IoTDA', '{"service_id": "CE_T_UPS"}', '{"services": [{"events": null, "option": "Optional", "commands": null, "properties": [{"max": "65535", "min": "0", "step": 0, "unit": "", "method": "R", "required": false, "data_type": "int", "enum_list": null, "max_length": 0, "description": null, "default_value": null, "property_name": "系统输出功率"}, {"max": "65535", "min": "0", "step": 0, "unit": "", "method": "R", "required": false, "data_type": "int", "enum_list": null, "max_length": 0, "description": null, "default_value": null, "property_name": "逆变器03输出电流"}, {"max": "65535", "min": "0", "step": 0, "unit": "", "method": "R", "required": false, "data_type": "int", "enum_list": null, "max_length": 0, "description": null, "default_value": null, "property_name": "逆变器11温度"}, {"max": "65535", "min": "0", "step": 0, "unit": "", "method": "R", "required": false, "data_type": "int", "enum_list": null, "max_length": 0, "description": null, "default_value": null, "property_name": "逆变器07输出功率"}, {"max": "65535", "min": "0", "step": 0, "unit": "", "method": "R", "required": false, "data_type": "int", "enum_list": null, "max_length": 0, "description": null, "default_value": null, "property_name": "逆变器01输出功率"}, {"max": "65535", "min": "0", "step": 0, "unit": "", "method": "R", "required": false, "data_type": "int", "enum_list": null, "max_length": 0, "description": null, "default_value": null, "property_name": "逆变器03输出功率"}, {"max": "65535", "min": "0", "step": 0, "unit": "", "method": "R", "required": false, "data_type": "int", "enum_list": null, "max_length": 0, "description": null, "default_value": null, "property_name": "逆变器02输出功率"}, {"max": "65535", "min": "0", "step": 0, "unit": "", "method": "R", "required": false, "data_type": "decimal", "enum_list": null, "max_length": 0, "description": null, "default_value": null, "property_name": "组1输入电压"}, {"max": "65535", "min": "0", "step": 0, "unit": "", "method": "R", "required": false, "data_type": "decimal", "enum_list": null, "max_length": 0, "description": null, "default_value": null, "property_name": "系统输出电流"}, {"max": "65535", "min": "0", "step": 0, "unit": "", "method": "R", "required": false, "data_type": "int", "enum_list": null, "max_length": 0, "description": null, "default_value": null, "property_name": "逆变器02温度"}, {"max": "65535", "min": "0", "step": 0, "unit": "", "method": "R", "required": false, "data_type": "int", "enum_list": null, "max_length": 0, "description": null, "default_value": null, "property_name": "系统输出频率"}, {"max": null, "min": null, "step": 0, "unit": null, "method": "R", "required": false, "data_type": "boolean", "enum_list": null, "max_length": 0, "description": null, "default_value": null, "property_name": "是否有逆变器手动停"}, {"max": null, "min": null, "step": 0, "unit": null, "method": "R", "required": false, "data_type": "boolean", "enum_list": null, "max_length": 0, "description": null, "default_value": null, "property_name": "负载是否由逆变器供电"}], "service_id": "CE_T_UPS", "description": "CE_T_UPS设备", "service_type": "CE_T_UPS"}]}', 1698733975795, 1698914143941),
	(2, 'CJT188', 'device', 'HuaWei-IoTDA', '{"service_id": "CJT188"}', '{"services": [{"events": null, "option": "Optional", "commands": null, "properties": [{"max": null, "min": null, "step": 0, "unit": null, "method": "R", "required": false, "data_type": "string", "enum_list": null, "max_length": 64, "description": null, "default_value": null, "property_name": "时间"}, {"max": "65535", "min": "0", "step": 0, "unit": "", "method": "R", "required": false, "data_type": "int", "enum_list": null, "max_length": 0, "description": null, "default_value": null, "property_name": "本月用量"}, {"max": null, "min": null, "step": 0, "unit": null, "method": "R", "required": false, "data_type": "string", "enum_list": null, "max_length": 16, "description": null, "default_value": null, "property_name": "累计用量单位"}, {"max": null, "min": null, "step": 0, "unit": null, "method": "R", "required": false, "data_type": "string", "enum_list": null, "max_length": 16, "description": null, "default_value": null, "property_name": "本月用量单位"}, {"max": "9999999999", "min": "0", "step": 0, "unit": "", "method": "R", "required": false, "data_type": "long", "enum_list": null, "max_length": 0, "description": null, "default_value": null, "property_name": "累计用量"}], "service_id": "CJT188", "description": "CJT188类型的设备", "service_type": "CJT188"}]}', 1698912227737, 1698914130049);

-- 正在导出表  fox_edge.tb_link 的数据：~1 rows (大约)
DELETE FROM `tb_link`;
INSERT INTO `tb_link` (`id`, `link_name`, `link_type`, `link_param`, `extend_param`, `create_time`, `update_time`) VALUES
	(57, '透传链路测试', 'tcp2tcp', '{"remote": {"host": "192.168.1.7", "port": 502}, "serverPort": 802}', '{"serverPort": 2}', 1695466699485, 1698317831112);

-- 正在导出表  fox_edge.tb_operate 的数据：~244 rows (大约)
DELETE FROM `tb_operate`;
INSERT INTO `tb_operate` (`id`, `operate_name`, `device_type`, `manufacturer`, `engine_type`, `service_type`, `engine_param`, `extend_param`, `operate_mode`, `data_type`, `polling`, `timeout`, `create_time`, `update_time`) VALUES
	(952, '设置设备参数', '五合一空气监测传感器', '武汉中科图灵科技有限公司', 'Java', 'device', '{}', '{"description": ""}', 'publish', 'status', 1, 1000, 1699365717644, 1699365717644),
	(953, '获取状态', '4G控制器', '武汉中科图灵科技有限公司', 'Java', 'device', '{}', '{"description": ""}', 'publish', 'status', 1, 1000, 1699365717704, 1699365717704),
	(954, '消音配置', '电器火灾监控设备', '武汉中科图灵科技有限公司', 'Java', 'device', '{}', '{"description": ""}', 'publish', 'status', 1, 1000, 1699365717728, 1699365717728),
	(955, '设置设备参数', '电器火灾监控设备', '武汉中科图灵科技有限公司', 'Java', 'device', '{}', '{"description": ""}', 'publish', 'status', 1, 1000, 1699365717751, 1699365717751),
	(956, 'DEVICE READ', 'mitsubishi-plc-fx', 'mitsubishi', 'Java', 'device', '{}', '{"description": ""}', 'exchange', 'status', 1, 2000, 1699365717775, 1699365717775),
	(957, '配置服务器IP与端口', '4G控制器', '武汉中科图灵科技有限公司', 'Java', 'device', '{}', '{"description": ""}', 'publish', 'status', 1, 1001, 1699365717791, 1703558614653),
	(958, '时间同步', 'IEC104 Device', 'Fox Edge', 'Java', 'device', '{}', '{"description": ""}', 'exchange', 'status', 1, 10000, 1699365717818, 1699365717818),
	(959, '电流高门限配置', '电器火灾监控设备', '武汉中科图灵科技有限公司', 'Java', 'device', '{}', '{"description": ""}', 'publish', 'status', 1, 1000, 1699365717827, 1699365717827),
	(960, '读数据', 'DLT645 v1997', 'Fox Edge', 'Java', 'device', '{}', '{"description": ""}', 'exchange', 'status', 1, 2000, 1699365717840, 1699365717840),
	(961, '解码器PDU报文', '六合一空气监测传感器', '武汉中科图灵科技有限公司', 'Java', 'device', '{}', '{"description": ""}', 'report', 'status', 0, 0, 1699365717865, 1699365717865),
	(962, '读数据', 'SNMP Device', 'Fox Edge', 'Java', 'device', '{}', '{"description": ""}', 'exchange', 'status', 1, 2000, 1699365717880, 1699365717880),
	(963, '读取刷卡记录', 'BASS260ZJ', '广东高新兴', 'Java', 'device', '{}', '{"description": ""}', 'report', 'status', 0, 0, 1699365717905, 1699365717905),
	(964, '操作支架', '全自动消解控制器', '广州格丹纳仪器有限公司', 'Java', 'device', '{}', '{"description": ""}', 'exchange', 'result', 0, 2000, 1699365717920, 1699365717920),
	(966, '剩余电流高门限配置', '电器火灾监控设备', '武汉中科图灵科技有限公司', 'Java', 'device', '{}', '{"description": ""}', 'publish', 'status', 1, 1000, 1699365717950, 1699365717950),
	(967, '读取温湿度', '温湿度采集模块(ZS-SHT30-1T-1H-485)', '中盛科技', 'Java', 'device', '{}', '{"description": ""}', 'exchange', 'status', 1, 2000, 1699365717972, 1699365717972),
	(968, '解码器PDU报文', '4G控制器', '武汉中科图灵科技有限公司', 'Java', 'device', '{}', '{"description": ""}', 'report', 'status', 0, 0, 1699365717986, 1699365717986),
	(969, '读子节点数值', 'OPC-UA', 'Fox Edge', 'Java', 'device', '{}', '{"description": ""}', 'exchange', 'status', 1, 2000, 1699365718005, 1699365718005),
	(970, '获取整流系统模拟量量化数据', 'ZXDU58', '中兴通讯', 'Java', 'device', '{}', '{"description": ""}', 'exchange', 'status', 1, 2000, 1699365718017, 1699365718017),
	(971, '开启通道', '4G控制器', '武汉中科图灵科技有限公司', 'Java', 'device', '{}', '{"description": ""}', 'publish', 'status', 1, 1000, 1699365718026, 1699365718026),
	(972, '解码器PDU报文', '电器火灾监控设备', '武汉中科图灵科技有限公司', 'Java', 'device', '{}', '{"description": ""}', 'report', 'status', 0, 0, 1699365718039, 1699365718039),
	(973, '设置设备参数', '4G控制器', '武汉中科图灵科技有限公司', 'Java', 'device', '{}', '{"description": ""}', 'publish', 'status', 1, 1000, 1699365718053, 1699365718053),
	(974, 'Read Data', 'omron-fins', 'omron', 'Java', 'device', '{}', '{"description": ""}', 'exchange', 'status', 1, 2000, 1699365718109, 1699365718109),
	(975, '关闭通道', '4G控制器', '武汉中科图灵科技有限公司', 'Java', 'device', '{}', '{"description": ""}', 'publish', 'status', 1, 1000, 1699365718120, 1699365718120),
	(976, '获取当前有功电量集合—总', 'ShangHai Electricity Meter', '上海电表厂', 'Java', 'device', '{}', '{"description": ""}', 'exchange', 'status', 1, 2000, 1699365718129, 1699365718129),
	(977, 'writeData', 'S7 PLC', 'Siemens', 'Java', 'device', '{}', '{"description": ""}', 'exchange', 'status', 1, 2000, 1699365718147, 1699365718147),
	(978, 'Write Single Status', 'ModBus Device', 'Fox Edge', 'Java', 'device', '{}', '{"description": ""}', 'exchange', 'status', 1, 2000, 1699365718161, 1699365718161),
	(979, '开启通道延迟后自动关闭', '4G控制器', '武汉中科图灵科技有限公司', 'Java', 'device', '{}', '{"description": ""}', 'publish', 'status', 1, 1000, 1699365718182, 1699365718182),
	(980, '解码器PDU报文', '五合一空气监测传感器', '武汉中科图灵科技有限公司', 'Java', 'device', '{}', '{"description": ""}', 'report', 'status', 0, 0, 1699365718200, 1699365718200),
	(981, '通道配置', '电器火灾监控设备', '武汉中科图灵科技有限公司', 'Java', 'device', '{}', '{"description": ""}', 'publish', 'status', 1, 1000, 1699365718221, 1699365718221),
	(982, '温度高门限配置', '电器火灾监控设备', '武汉中科图灵科技有限公司', 'Java', 'device', '{}', '{"description": ""}', 'publish', 'status', 1, 1000, 1699365718244, 1699365718244),
	(983, '电压低门限配置', '电器火灾监控设备', '武汉中科图灵科技有限公司', 'Java', 'device', '{}', '{"description": ""}', 'publish', 'status', 1, 1000, 1699365718274, 1699365718274),
	(984, 'Read System Measures Table', 'CE+T UPS', '深圳安圣电气有限公司', 'Java', 'device', '{}', '{"description": ""}', 'exchange', 'status', 1, 2000, 1699365718288, 1699365718288),
	(985, 'Read Discrete Inputs Status', 'ModBus Device', 'Fox Edge', 'Java', 'device', '{}', '{"description": ""}', 'exchange', 'status', 1, 2000, 1699366854965, 1699366854965),
	(986, 'readData', 'S7 PLC', 'Siemens', 'Java', 'device', '{}', '{"description": ""}', 'exchange', 'status', 1, 2000, 1699366855008, 1699366855008),
	(987, '停止设备当前工作', '全自动消解控制器', '广州格丹纳仪器有限公司', 'Java', 'device', '{}', '{"description": ""}', 'exchange', 'status', 0, 2000, 1699366855034, 1699366855034),
	(988, 'Read Coil Status', 'ModBus Device', 'Fox Edge', 'Java', 'device', '{}', '{"description": ""}', 'exchange', 'status', 1, 2000, 1699366855056, 1699366855056),
	(989, '获取交流系统开关输入状态', 'ZXDU58', '中兴通讯', 'Java', 'device', '{}', '{"description": ""}', 'exchange', 'status', 1, 2000, 1699366855082, 1699366855082),
	(990, 'Read Holding Register', 'ModBus Device', 'Fox Edge', 'Java', 'device', '{}', '{"description": ""}', 'exchange', 'status', 1, 2000, 1699366855094, 1699366855094),
	(991, '检测石墨孔位是否放进样品管', '全自动消解控制器', '广州格丹纳仪器有限公司', 'Java', 'device', '{}', '{"description": ""}', 'exchange', 'status', 0, 2000, 1699366855134, 1699366855134),
	(992, '振动摇匀', '全自动消解控制器', '广州格丹纳仪器有限公司', 'Java', 'device', '{}', '{"description": ""}', 'exchange', 'status', 0, 2000, 1699366855150, 1699366855150),
	(993, '添加样本', '全自动消解控制器', '广州格丹纳仪器有限公司', 'Java', 'device', '{}', '{"description": ""}', 'exchange', 'result', 0, 2000, 1699366855172, 1699366855172),
	(994, '检查设备状态', '全自动消解控制器', '广州格丹纳仪器有限公司', 'Java', 'device', '{}', '{"description": ""}', 'exchange', 'status', 0, 2000, 1699366855188, 1699366855188),
	(995, 'Write Single Register', 'ModBus Device', 'Fox Edge', 'Java', 'device', '{}', '{"description": ""}', 'exchange', 'status', 1, 2000, 1699366855209, 1699366855209),
	(996, '获取交流系统模拟量量化数据', 'ZXDU58', '中兴通讯', 'Java', 'device', '{}', '{"description": ""}', 'exchange', 'status', 1, 2000, 1699366855251, 1699366855251),
	(997, 'Read Input Register', 'ModBus Device', 'Fox Edge', 'Java', 'device', '{}', '{"description": ""}', 'exchange', 'status', 1, 2000, 1699366855266, 1699366855266),
	(999, '总召唤', 'IEC104 Device', 'Fox Edge', 'Java', 'device', '{}', '{"description": ""}', 'exchange', 'status', 1, 10000, 1699366855298, 1699366855298),
	(1000, '广播读地址', '全自动消解控制器', '广州格丹纳仪器有限公司', 'Java', 'device', '{}', '{"description": ""}', 'exchange', 'status', 0, 2000, 1699366855309, 1699366855309),
	(1002, '定容', '全自动消解控制器', '广州格丹纳仪器有限公司', 'Java', 'device', '{}', '{"description": ""}', 'exchange', 'status', 0, 2000, 1699366855348, 1699366855348),
	(1003, '操作阀门', 'CJT188', 'Fox Edge', 'Java', 'device', '{}', '{"description": ""}', 'exchange', 'status', 1, 2000, 1699366855371, 1699366855371),
	(1004, '获取交流系统告警状态', 'ZXDU58', '中兴通讯', 'Java', 'device', '{}', '{"description": ""}', 'exchange', 'status', 1, 2000, 1699366855394, 1699366855394),
	(1005, '读取溶液体积', '全自动消解控制器', '广州格丹纳仪器有限公司', 'Java', 'device', '{}', '{"description": ""}', 'exchange', 'status', 0, 2000, 1699366855403, 1699366855403),
	(1006, 'Read Alarms And Events Table', 'CE+T UPS', '深圳安圣电气有限公司', 'Java', 'device', '{}', '{"description": ""}', 'exchange', 'status', 1, 2000, 1699366855417, 1699366855417),
	(1007, '排空', '全自动消解控制器', '广州格丹纳仪器有限公司', 'Java', 'device', '{}', '{"description": ""}', 'exchange', 'status', 0, 2000, 1699366855433, 1699366855433),
	(1008, '读取告警状态', 'BASS260ZJ', '广东高新兴', 'Java', 'device', '{}', '{"description": ""}', 'exchange', 'status', 1, 2000, 1699366855456, 1699366855456),
	(1009, '复位电机', '全自动消解控制器', '广州格丹纳仪器有限公司', 'Java', 'device', '{}', '{"description": ""}', 'exchange', 'result', 0, 2001, 1699366855474, 1699498791024),
	(1039, 'keyHandler', '消防用水五合一（LoRaWan）', '武汉中科图灵科技有限公司', 'JavaScript', 'channel', '{"decode": {"code": "/**\\n* 函数说明：当前报文携带的设备身份ID\\n* 输入参数：HEX格式的字符串，或者是TXT格式的字符串，（具体看通道服务的配置，给你输入的是哪种格式，默认是HEX格式），用于表达接收到的一个报文\\n* 返回格式：当前设备身份信息的字符串\\n* 备注信息：在TCP上传输的协议，它的报文会包身份信息，用于帮助识别是哪个设备主动送过来的数据。\\n*/\\nfunction getServiceKey(message)\\n{\\n  // LORA WAN的报文，它实际上没有设备ID，此时使用LoRa Wan Device来标识\\n  if(message.length() < 32){\\n    return \\"LoRa Wan Device\\";\\n  }\\n  \\n  var deviceId = message.substring(8,23);\\n  return  deviceId;\\n}", "main": "decode"}, "description": "--------------------------------------------------------------------------------------------------------------------------\\n测试报文1：\\n24242415100100E510000000B00A0A\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n测试报文2：\\n2424033886859105813621889861120240012109563001110e4f0006070700aa"}', '{"description": "--------------------------------------------------------------------------------------------------------------------------\\n测试报文1：\\n24242415100100E510000000B00A0A\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n测试报文2：\\n2424033886859105813621889861120240012109563001110e4f0006070700aa"}', 'keyHandler', 'status', 1, 2000, 1699797382233, 1705489679747),
	(1041, 'splitHandler', '消防用水五合一（LoRaWan）', '武汉中科图灵科技有限公司', 'JavaScript', 'channel', '{"decode": {"code": "/**\\n* 函数说明：一组报文的最小长度\\n* 返回格式：最小包长度\\n* 备注信息：在TCP上传输的协议，它的报文会包括包头和包长度，用来帮助数据的分拆。\\n*           包长度所在的位置通常是固定的，所以可以知道一段数据包括包头域和包长度域，至少包括多少字节。\\n*/\\nfunction getHeaderLength()\\n{\\n  return 8;\\n}\\n\\n\\n/**\\n* 函数说明：当前报文的具体长度\\n* 输入参数：HEX格式的字符串，或者是TXT格式的字符串，（具体看通道服务的配置，给你输入的是哪种格式，默认是HEX格式），用于表达接收到的一个报文\\n* 返回格式：当前报文的长度\\n* 备注信息：在TCP上传输的协议，它的报文会包括包头和包长度，用来帮助数据的分拆。\\n*           包长度所在的位置通常是固定的，所以可以知道一段数据包括包头域和包长度域，至少包括多少字节。\\n*/\\nfunction getPackLength(message)\\n{\\n  var hex = message.substring(6,8);  \\n  return  parseInt(hex, 16) + 8;\\n}\\n\\n/**\\n* 函数说明：当前报文是否为非法包\\n* 输入参数：HEX格式的字符串，或者是TXT格式的字符串，（具体看通道服务的配置，给你输入的是哪种格式，默认是HEX格式），用于表达接收到的一个报文\\n* 返回格式：布尔值\\n* 备注信息：在TCP上传输的协议，它的报文会包括包头和包长度，用来帮助数据的分拆。\\n*           包头通常是固定的标识，如果不是这些标识，那么说明是非法包\\n*/\\nfunction isInvalidPack(message)\\n{\\n  if (message.substring(0, 4) == \'2424\') {\\n    return false;\\n  }\\n  \\n  return true;\\n}\\n\\n", "main": "decode"}, "description": "--------------------------------------------------------------------------------------------------------------------------\\n测试报文1：\\n24242415100100E510000000B00A0A\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n测试报文2：\\n2424033886859105813621889861120240012109563001110e4f0006070700aa"}', '{"description": "--------------------------------------------------------------------------------------------------------------------------\\n测试报文1：\\n24242415100100E510000000B00A0A\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n测试报文2：\\n2424033886859105813621889861120240012109563001110e4f0006070700aa"}', 'splitHandler', 'status', 1, 2000, 1699798421694, 1705489698816),
	(1042, '写数据', '风机(JPF4826)', '成都兢志成电子科技有限公司', 'Java', 'device', '{}', '{"description": ""}', 'exchange', 'status', 1, 2000, 1700037876325, 1700037876325),
	(1043, '读数据', '风机(JPF4826)', '成都兢志成电子科技有限公司', 'Java', 'device', '{}', '{"description": ""}', 'exchange', 'status', 1, 2000, 1700037876363, 1700037876363),
	(1069, '读表地址', 'CJT188', 'Fox Edge', 'Java', 'device', '{}', '{"description": ""}', 'exchange', 'status', 1, 2000, 1701352110872, 1701352110872),
	(1070, '设置地址', 'CJT188', 'Fox Edge', 'Java', 'device', '{}', '{"description": ""}', 'exchange', 'status', 1, 2000, 1701352120975, 1701352120975),
	(1071, '读表数据', 'CJT188', 'Fox Edge', 'Java', 'device', '{}', '{"description": ""}', 'exchange', 'status', 1, 2001, 1701523705040, 1703558980982),
	(1073, 'splitHandler', 'JB-QB-GST500', '海湾安全技术有限公司', 'JavaScript', 'channel', '{"decode":{"main":"decode","code":"/**\\n * 编码器的入口函数\\n * 全局参数：\\n *     message：hex string格式的接收数据\\n *              XX+[合法报文]+XXX，合法报文可能混杂在一堆其他数据之中\\n * 返回值：\\n *   从XXX+[合法报文]+XXX中，截取到的[合法报文]\\n */\\nfunction decode(message) {\\n    var endTag = \\"0D\\";\\n\\n    message = message.replace(/\\\\s+/g, \\"\\");\\n    endTag = endTag.replace(/\\\\s+/g, \\"\\");\\n\\n\\n    // 转换成大写\\n    message = message.toUpperCase();\\n    endTag = endTag.toUpperCase();\\n\\n    // 根据换行符0D,查找有多少行\\n    var lns = indexCount(message, endTag);\\n    if (lns.length < 4) {\\n        return \\"\\";\\n    }\\n\\n    // 寻找数据\\n    for (var i = 0; i < lns.length - 3; i++) {\\n        var section = getSection(message, lns, i);\\n        if (section.length > 0) {\\n            return section;\\n        }\\n    }\\n\\n\\n    return \\"\\";\\n}\\n\\nfunction getSection(message, lns, offset) {\\n    var ln1 = lns[offset + 0] + 2;\\n    var ln2 = lns[offset + 1] + 2 - ln1;\\n    var ln3 = lns[offset + 2] + 2 - ln1 - ln2;\\n    var ln4 = lns[offset + 3] + 2 - ln1 - ln2 - ln3;\\n\\n    // 检查：各行是否符合指定的长度\\n    if (ln1 < 20 * 2 || ln2 !== 101 * 2 || ln3 !== 99 * 2 || ln4 !== 3 * 2) {\\n        return \\"\\";\\n    }\\n\\n    // 切行\\n    var line1 = message.substring(lns[offset + 0] - 19 * 2, lns[offset + 0] + 2);\\n    var line2 = message.substring(lns[offset + 0] + 2, lns[offset + 1] + 2);\\n    var line3 = message.substring(lns[offset + 1] + 2, lns[offset + 2] + 2);\\n    var line4 = message.substring(lns[offset + 2] + 2, lns[offset + 3] + 2);\\n\\n    // 检查：第1行，时间行\\n    if (line1.substring(4, 6) !== \\"8D\\" || line1.substring(10, 12) !== \\"8E\\") {\\n        return \\"\\";\\n    }\\n\\n    // 转成ASCII\\n    var yy = \\"/\\".charCodeAt(0).toString(16);\\n    var mm = \\" \\".charCodeAt(0).toString(16);\\n    var timeLine = line1.substring(0, 4) + yy + line1.substring(6, 10) + mm + line1.substring(12, line1.length - 2);\\n    var text = getAscii(timeLine);\\n\\n    var items = text.split(\\"  \\");\\n    if (items.length != 2) {\\n        return \\"\\";\\n    }\\n\\n    // 是否符合10/09 16:18的格式\\n    var regex = /^\\\\d{2}\\\\/\\\\d{2} \\\\d{2}:\\\\d{2}$/;\\n    if (!regex.test(items[0])) {\\n        return \\"\\";\\n    }\\n\\n    // 是否为数字格式\\n    regex = /^\\\\d+$/;\\n    if (!regex.test(items[1])) {\\n        return \\"\\";\\n    }\\n\\n    // 检查：第4行的格式\\n    if (line4 !== \\"04030D\\") {\\n        return \\"\\";\\n    }\\n\\n    return message.substring(lns[offset + 0] - 19 * 2, lns[offset + 3] + 2);\\n}\\n\\nfunction indexCount(hexStr, hexTag, position) {\\n    // 默认值处理\\n    if (position == undefined) {\\n        position = 0;\\n    }\\n\\n    if (position % 2 !== 0) {\\n        return -1;\\n    }\\n\\n    var array = [];\\n\\n    var pos = position;\\n\\n    do {\\n        // 寻找标记\\n        pos = hexStr.indexOf(hexTag, pos);\\n        if (pos < 0) {\\n            break;\\n        }\\n\\n        // 检查：是否是错位，造成的误查\\n        if (pos % 2 !== 0) {\\n            // 纠正错位，并继续查找\\n            pos += 1;\\n            continue;\\n        }\\n\\n        // 没有错位的，才是真数据\\n        array.push(pos);\\n        pos += 2;\\n\\n    } while (true);\\n\\n    return array;\\n}\\n\\nfunction getAscii(hexStr) {\\n    var text = \\"\\";\\n    for (var i = 0; i < hexStr.length; i += 2) {\\n        text += String.fromCharCode(parseInt(hexStr[i] + hexStr[i + 1], 16));\\n    }\\n\\n    return text;\\n}\\n"}}', '{"description":"报文特征：\\n1、由4行组成的段落，中文字符的编码格式是海湾公司自己的私有编码\\n2、第1行（固定19+1字节）是是事件发生的时间和设备编码，其中年(8D)和月(8E)是私有中文编码，10�09�16:20  000000\\n3、第2行（固定100+1字节）的末尾，是告警类型特征，可以凭借这个特征，识别是哪个事件类型的大类\\n4、第3行（固定98+1字节）是告警的设备名称信息，中文字符的编码格式是海湾公司的私有编码，无法识别\\n5、第4行（固定2+1字节）是04 03 \\n--------------------------------------------------------------------------------------------------------------------------\\n\\n测试报文1：\\n31 30 8D 30 39 8E 31 36 3A 32 32 20 20 30 31 31 31 34 39 0D 04 00 0F 60 80 40 37 04 14 64 04 14 24 64 04 17 20 C0 00 00 40 4C 4A 49 48 48 4B 7E 48 48 48 4A 4C 6B 40 00 04 43 30 07 72 82 8A 93 B4 82 E1 12 24 64 07 00 40 30 0F 10 20 FF 50 48 46 41 42 44 58 FF 00 00 00 7F 21 21 21 7F 80 80 43 24 18 24 43 C0 40 00 00 FF 04 08 17 10 17 15 15 FD 15 15 17 10 10 00 0D 0F 60 00 00 C0 40 40 40 7F 48 48 48 48 E8 4C 08 00 00 20 22 22 FE 22 22 FE 23 22 00 FC 00 00 FF 00 00 00 FC 14 D4 54 54 54 D4 14 FF 04 85 66 04 00 00 E0 00 FF 20 10 FE 42 42 42 FA 42 42 42 FF 02 00 10 10 10 FF 10 10 50 20 D0 1F 10 10 F0 18 10 00 00 FE 22 5A 86 10 D2 56 5A 53 5A 56 D2 10 10 00 0D 04 03 0D"}', 'splitHandler', 'status', 1, 2000, 1701916152224, 1713451685962),
	(1076, '上报事件', 'JB-QB-GST500', '海湾安全技术有限公司', 'JavaScript', 'device', '{"decode":{"main":"decode","code":"/**\\n * 解码器的入口函数\\n * 全局参数：\\n *     fox_edge_data：json string格式 或者 hex string格式的接收数据\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   提供给通道的发送数据。根据不同的通道服务，它可能是HEX结构的文本，也可能是JSON结构的对象，请自行根据选定的通道服务进行确认\\n */\\nfunction decode() {\\n\\tvar object = decodeStr(fox_edge_data, fox_edge_param);\\n  return JSON.stringify(object);\\n}\\n\\n/**\\n * 事件解码器函数：消火栓按钮报火警\\n * 全局参数：\\n *     fox_edge_data：hex string格式的接收数据\\n *                    XXX+[合法报文]+XXX，合法报文可能混杂在一堆其他数据之中\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   必须是列表格式的JSON字符串，并且JSON对象必须包含关键字【recordType】，否则不给与入库\\n */\\nfunction decodeStr(message, device_param) {\\n    var result = decodeObj(message);\\n    return result;\\n}"}}', '{"description":""}', 'report', 'record', 1, 2000, 1701943612264, 1713454600295),
	(1079, '设备数据上报', '尼特烟雾传感器-4G-YG', '武汉中科图灵科技有限公司', 'JavaScript', 'device', '{"decode": {"code": "/**\\n* 编码器的入口函数1\\n* 全局参数：\\n*     fox_edge_data：json string格式 或者 hex string格式的接收数据\\n*     fox_edge_param：json string格式的设备参数的合并对象\\n* 返回值：\\n*   提供给通道的发送数据。根据不同的通道服务，它可能是HEX结构的文本，也可能是JSON结构的对象，请自行根据选定的通道服务进行确认\\n*/\\nfunction decode() {\\n  var object = marge(fox_edge_data);\\n  return JSON.stringify(object);\\n}\\n\\n/**\\n * 尼特 -cat1 烟感 mqtt\\n * @param message\\n * @returns {{iccid: string, flag: boolean, offlineFlag: boolean, offlineData: {isalarm: boolean, isguzhang: boolean}, points: {CSQ: {alarmType: string, alarmStatus: number, alarmValue: number}, VOL: {alarmType: string, alarmStatus: number, alarmValue: string}, SWITCH: {alarmType: string, alarmStatus: number, alarmValue: number}, OFFLINE: {alarmType: string, alarmStatus: number, alarmValue: number}, status: number}|{OFFLINE: {alarmType: string, alarmStatus: number, alarmValue: number}, status: number}}}\\n */\\nfunction marge(message) {\\n\\n\\tvar json = JSON.parse(message);\\n\\tvar messageType = json[\'messageType\'];\\n\\tvar baseJson = {\\n\\t\\t\\"isalarm\\": false,\\n\\t\\t\\"isguzhang\\": false\\n\\t};\\n\\tvar points = {};\\n\\tvar status = 2;\\n\\tvar iccid = \\"\\";\\n\\t//是否是指令下发的返回数据\\n\\tvar flag = false;\\n\\t//是否又消防平台的自身离线周期\\n\\tvar offlineFlag = true;\\n\\n\\tvar offlinePoint = {\\n\\t\\t\\"alarmType\\": \'正常\',\\n\\t\\t\\"alarmStatus\\": 2,\\n\\t\\t\\"alarmValue\\": 2\\n\\t}\\n\\tvar offlinePointX = {\\n\\t\\t\\"alarmType\\": \'离线\',\\n\\t\\t\\"alarmStatus\\": 4,\\n\\t\\t\\"alarmValue\\": 4\\n\\t}\\n\\tvar serviceId = json[\'serviceId\'];\\n\\t//数据上报\\n\\tif (messageType === \'dataReport\') {\\n\\t\\tvar payload = json[\'payload\'];\\n\\n\\t\\t//心跳\\n\\t\\tif (serviceId == \'heartbeat\') {\\n\\t\\t\\ticcid = payload[\'ICCID\'];\\n\\t\\t\\tvar battery_value = payload[\'battery_value\'];\\n\\t\\t\\tvar battery_voltage = payload[\'battery_voltage\'];\\n\\n\\t\\t\\tpoints.DL = {\\n\\t\\t\\t\\t\\"alarmType\\": \'正常\',\\n\\t\\t\\t\\t\\"alarmStatus\\": 2,\\n\\t\\t\\t\\t\\"alarmValue\\": battery_value\\n\\t\\t\\t};\\n\\t\\t\\tpoints.VOL = {\\n\\t\\t\\t\\t\\"alarmType\\": \'正常\',\\n\\t\\t\\t\\t\\"alarmStatus\\": 2,\\n\\t\\t\\t\\t\\"alarmValue\\": battery_voltage\\n\\t\\t\\t};\\n\\t\\t}\\n\\t\\t//烟感报警上报\\n\\t\\tif (serviceId == \'data_report\') {\\n\\t\\t\\t//烟雾监测状态\\n\\t\\t\\tvar smoke_state = payload[\'smoke_state\'];\\n\\t\\t\\tvar smoke_value = payload[\'smoke_value\'];\\n\\n\\t\\t\\tif (smoke_state == 0) {\\n\\t\\t\\t\\tpoints.YGD = {\\n\\t\\t\\t\\t\\t\\"alarmType\\": \'烟雾报警\',\\n\\t\\t\\t\\t\\t\\"alarmStatus\\": 1,\\n\\t\\t\\t\\t\\t\\"alarmValue\\": smoke_value\\n\\t\\t\\t\\t};\\n\\t\\t\\t\\tstatus = 1;\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tpoints.YGD = {\\n\\t\\t\\t\\t\\t\\"alarmType\\": \'烟雾报警解除\',\\n\\t\\t\\t\\t\\t\\"alarmStatus\\": 2,\\n\\t\\t\\t\\t\\t\\"alarmValue\\": smoke_value\\n\\t\\t\\t\\t};\\n\\t\\t\\t}\\n\\t\\t\\t//电池电量\\n\\t\\t\\tvar battery_value = payload[\'battery_value\'];\\n\\t\\t\\tpoints.DL = {\\n\\t\\t\\t\\t\\"alarmType\\": \'正常\',\\n\\t\\t\\t\\t\\"alarmStatus\\": 2,\\n\\t\\t\\t\\t\\"alarmValue\\": battery_value\\n\\t\\t\\t};\\n\\n\\t\\t\\t//信号强度\\n\\t\\t\\tvar signalPower = payload[\'signalPower\'];\\n\\t\\t\\tpoints.SIGN = {\\n\\t\\t\\t\\t\\"alarmType\\": \'正常\',\\n\\t\\t\\t\\t\\"alarmStatus\\": 2,\\n\\t\\t\\t\\t\\"alarmValue\\": signalPower\\n\\t\\t\\t};\\n\\n\\t\\t}\\n\\n\\t\\t//注册上报\\n\\t\\tif (serviceId == \'DeviceInfo\') {\\n\\t\\t\\ticcid = payload[\'ICCID\'];\\n\\t\\t}\\n\\n\\t\\t//电量上报\\n\\t\\tif (serviceId == \'Battery\') {\\n\\t\\t\\tvar battery_value = payload[\'batteryLevel\'];\\n\\t\\t\\tvar battery_voltage = payload[\'batteryVoltage\'];\\n\\t\\t\\tpoints.DL = {\\n\\t\\t\\t\\t\\"alarmType\\": \'正常\',\\n\\t\\t\\t\\t\\"alarmStatus\\": 2,\\n\\t\\t\\t\\t\\"alarmValue\\": battery_value\\n\\t\\t\\t};\\n\\t\\t\\tpoints.VOL = {\\n\\t\\t\\t\\t\\"alarmType\\": \'正常\',\\n\\t\\t\\t\\t\\"alarmStatus\\": 2,\\n\\t\\t\\t\\t\\"alarmValue\\": battery_voltage\\n\\t\\t\\t};\\n\\t\\t}\\n\\t\\t//信号质量\\n\\t\\tif (serviceId == \'Connectivity\') {\\n\\t\\t\\t//信号强度\\n\\t\\t\\tvar signalPower = payload[\'signalStrength\'];\\n\\t\\t\\tpoints.SIGN = {\\n\\t\\t\\t\\t\\"alarmType\\": \'正常\',\\n\\t\\t\\t\\t\\"alarmStatus\\": 2,\\n\\t\\t\\t\\t\\"alarmValue\\": signalPower\\n\\t\\t\\t};\\n\\t\\t}\\n\\t\\t//参数上报\\n\\t\\tif (serviceId == \'DevicePara\') {\\n\\t\\t\\tvar smokeConcentration = payload[\'smokeConcentration\'];\\n\\t\\t\\tvar temperature = payload[\'temperature\'];\\n\\n\\t\\t\\tpoints.YGD = {\\n\\t\\t\\t\\t\\"alarmType\\": \'正常\',\\n\\t\\t\\t\\t\\"alarmStatus\\": 2,\\n\\t\\t\\t\\t\\"alarmValue\\": smokeConcentration\\n\\t\\t\\t};\\n\\t\\t\\tpoints.TEMP = {\\n\\t\\t\\t\\t\\"alarmType\\": \'正常\',\\n\\t\\t\\t\\t\\"alarmStatus\\": 2,\\n\\t\\t\\t\\t\\"alarmValue\\": temperature\\n\\t\\t\\t};\\n\\t\\t}\\n\\t}\\n\\t//事件上报\\n\\tif (messageType == \'eventReport\') {\\n\\n\\t\\tvar payload = json[\'eventContent\'];\\n\\n\\t\\t//防拆报警\\n\\t\\tif (serviceId == \'tamper_report\') {\\n\\t\\t\\tvar tamper_alarm = payload[\'tamper_alarm\'];\\n\\t\\t\\tif (tamper_alarm == 1) {\\n\\t\\t\\t\\tpoints.SWITCH = {\\n\\t\\t\\t\\t\\t\\"alarmType\\": \'设备拆除\',\\n\\t\\t\\t\\t\\t\\"alarmStatus\\": 1,\\n\\t\\t\\t\\t\\t\\"alarmValue\\": 1\\n\\t\\t\\t\\t};\\n\\t\\t\\t\\tstatus = 1;\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tpoints.SWITCH = {\\n\\t\\t\\t\\t\\t\\"alarmType\\": \'设备装上\',\\n\\t\\t\\t\\t\\t\\"alarmStatus\\": 2,\\n\\t\\t\\t\\t\\t\\"alarmValue\\": 2\\n\\t\\t\\t\\t};\\n\\t\\t\\t}\\n\\t\\t\\t//电池电量\\n\\t\\t\\tvar battery_value = payload[\'batteryLevel\'];\\n\\t\\t\\tpoints.DL = {\\n\\t\\t\\t\\t\\"alarmType\\": \'正常\',\\n\\t\\t\\t\\t\\"alarmStatus\\": 2,\\n\\t\\t\\t\\t\\"alarmValue\\": battery_value\\n\\t\\t\\t};\\n\\t\\t\\t//信号强度\\n\\t\\t\\tvar signalPower = payload[\'signalPower\'];\\n\\t\\t\\tpoints.SIGN = {\\n\\t\\t\\t\\t\\"alarmType\\": \'正常\',\\n\\t\\t\\t\\t\\"alarmStatus\\": 2,\\n\\t\\t\\t\\t\\"alarmValue\\": signalPower\\n\\t\\t\\t};\\n\\t\\t}\\n\\n\\t\\tif (serviceId == \'error_code_report\') {\\n\\t\\t\\tvar error = payload[\'tamper_alarm\'];\\n\\t\\t\\tif (error == 1) {\\n\\t\\t\\t\\tpoints.SWITCH = {\\n\\t\\t\\t\\t\\t\\"alarmType\\": \'烟感故障\',\\n\\t\\t\\t\\t\\t\\"alarmStatus\\": 0,\\n\\t\\t\\t\\t\\t\\"alarmValue\\": 0\\n\\t\\t\\t\\t};\\n\\t\\t\\t\\tstatus = 0;\\n\\t\\t\\t} else if (error == 2) {\\n\\t\\t\\t\\tpoints.SWITCH = {\\n\\t\\t\\t\\t\\t\\"alarmType\\": \'烟感故障解除\',\\n\\t\\t\\t\\t\\t\\"alarmStatus\\": 2,\\n\\t\\t\\t\\t\\t\\"alarmValue\\": 2\\n\\t\\t\\t\\t};\\n\\t\\t\\t} else if (error == 3) {\\n\\t\\t\\t\\tpoints.SWITCH = {\\n\\t\\t\\t\\t\\t\\"alarmType\\": \'低压故障\',\\n\\t\\t\\t\\t\\t\\"alarmStatus\\": 0,\\n\\t\\t\\t\\t\\t\\"alarmValue\\": 0\\n\\t\\t\\t\\t};\\n\\t\\t\\t\\tstatus = 0;\\n\\t\\t\\t} else if (error == 4) {\\n\\t\\t\\t\\tpoints.SWITCH = {\\n\\t\\t\\t\\t\\t\\"alarmType\\": \'低压故障解除\',\\n\\t\\t\\t\\t\\t\\"alarmStatus\\": 2,\\n\\t\\t\\t\\t\\t\\"alarmValue\\": 2\\n\\t\\t\\t\\t};\\n\\t\\t\\t} else if (error == 5) {\\n\\t\\t\\t\\tpoints.SWITCH = {\\n\\t\\t\\t\\t\\t\\"alarmType\\": \'传感器故障\',\\n\\t\\t\\t\\t\\t\\"alarmStatus\\": 0,\\n\\t\\t\\t\\t\\t\\"alarmValue\\": 0\\n\\t\\t\\t\\t};\\n\\t\\t\\t\\tstatus = 0;\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\t//告警上报\\n\\t\\tif (serviceId == \'Alarm\') {\\n\\t\\t\\tvar alarmCode = payload[\'alarmCode\'];\\n\\t\\t\\tif (alarmCode == 1) {\\n\\t\\t\\t\\tpoints.SWITCH = {\\n\\t\\t\\t\\t\\t\\"alarmType\\": \'报警\',\\n\\t\\t\\t\\t\\t\\"alarmStatus\\": 1,\\n\\t\\t\\t\\t\\t\\"alarmValue\\": 1\\n\\t\\t\\t\\t};\\n\\t\\t\\t\\tstatus = 1;\\n\\t\\t\\t}\\n\\t\\t\\tif (alarmCode == 13) {\\n\\t\\t\\t\\tpoints.SWITCH = {\\n\\t\\t\\t\\t\\t\\"alarmType\\": \'正常\',\\n\\t\\t\\t\\t\\t\\"alarmStatus\\": 2,\\n\\t\\t\\t\\t\\t\\"alarmValue\\": 2\\n\\t\\t\\t\\t};\\n\\t\\t\\t}\\n\\t\\t\\tif (alarmCode == 2) {\\n\\t\\t\\t\\tpoints.SWITCH = {\\n\\t\\t\\t\\t\\t\\"alarmType\\": \'按键报警\',\\n\\t\\t\\t\\t\\t\\"alarmStatus\\": 2,\\n\\t\\t\\t\\t\\t\\"alarmValue\\": 2\\n\\t\\t\\t\\t};\\n\\t\\t\\t}\\n\\t\\t\\tif (alarmCode == 115) {\\n\\t\\t\\t\\tstatus = 1;\\n\\t\\t\\t\\tpoints.SWITCH = {\\n\\t\\t\\t\\t\\t\\"alarmType\\": \'欠压报警\',\\n\\t\\t\\t\\t\\t\\"alarmStatus\\": 1,\\n\\t\\t\\t\\t\\t\\"alarmValue\\": 1\\n\\t\\t\\t\\t};\\n\\t\\t\\t}\\n\\t\\t\\tif (alarmCode == 145) {\\n\\t\\t\\t\\tpoints.SWITCH = {\\n\\t\\t\\t\\t\\t\\"alarmType\\": \'传感器故障恢复\',\\n\\t\\t\\t\\t\\t\\"alarmStatus\\": 2,\\n\\t\\t\\t\\t\\t\\"alarmValue\\": 2\\n\\t\\t\\t\\t};\\n\\t\\t\\t}\\n\\t\\t\\tif (alarmCode == 144) {\\n\\t\\t\\t\\tstatus = 0;\\n\\t\\t\\t\\tpoints.SWITCH = {\\n\\t\\t\\t\\t\\t\\"alarmType\\": \'传感器故障\',\\n\\t\\t\\t\\t\\t\\"alarmStatus\\": 0,\\n\\t\\t\\t\\t\\t\\"alarmValue\\": 0\\n\\t\\t\\t\\t};\\n\\t\\t\\t}\\n\\t\\t\\tif (alarmCode == 147) {\\n\\t\\t\\t\\tpoints.SWITCH = {\\n\\t\\t\\t\\t\\t\\"alarmType\\": \'迷宫污染清除\',\\n\\t\\t\\t\\t\\t\\"alarmStatus\\": 2,\\n\\t\\t\\t\\t\\t\\"alarmValue\\": 2\\n\\t\\t\\t\\t};\\n\\t\\t\\t}\\n\\t\\t\\tif (alarmCode == 146) {\\n\\t\\t\\t\\tstatus = 0;\\n\\t\\t\\t\\tpoints.SWITCH = {\\n\\t\\t\\t\\t\\t\\"alarmType\\": \'迷宫污染提示\',\\n\\t\\t\\t\\t\\t\\"alarmStatus\\": 0,\\n\\t\\t\\t\\t\\t\\"alarmValue\\": 0\\n\\t\\t\\t\\t};\\n\\t\\t\\t}\\n\\t\\t\\tif (alarmCode == 151) {\\n\\t\\t\\t\\tpoints.SWITCH = {\\n\\t\\t\\t\\t\\t\\"alarmType\\": \'脱离底座故障恢复\',\\n\\t\\t\\t\\t\\t\\"alarmStatus\\": 2,\\n\\t\\t\\t\\t\\t\\"alarmValue\\": 2\\n\\t\\t\\t\\t};\\n\\t\\t\\t}\\n\\t\\t\\tif (alarmCode == 150) {\\n\\t\\t\\t\\tstatus = 1;\\n\\t\\t\\t\\tpoints.SWITCH = {\\n\\t\\t\\t\\t\\t\\"alarmType\\": \'脱离底座\',\\n\\t\\t\\t\\t\\t\\"alarmStatus\\": 1,\\n\\t\\t\\t\\t\\t\\"alarmValue\\": 1\\n\\t\\t\\t\\t};\\n\\t\\t\\t}\\n\\t\\t\\tif (alarmCode == 6) {\\n\\t\\t\\t\\tstatus = 1;\\n\\t\\t\\t\\tpoints.SWITCH = {\\n\\t\\t\\t\\t\\t\\"alarmType\\": \'欠压恢复\',\\n\\t\\t\\t\\t\\t\\"alarmStatus\\": 2,\\n\\t\\t\\t\\t\\t\\"alarmValue\\": 2\\n\\t\\t\\t\\t};\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\tif (serviceId == \'Operation\') {\\n\\t\\t\\tvar operationCode = payload[\'operationCode\'];\\n\\t\\t\\tif (operationCode == 1) {\\n\\t\\t\\t\\tpoints.SWITCH = {\\n\\t\\t\\t\\t\\t\\"alarmType\\": \'复位\',\\n\\t\\t\\t\\t\\t\\"alarmStatus\\": 2,\\n\\t\\t\\t\\t\\t\\"alarmValue\\": 2\\n\\t\\t\\t\\t};\\n\\t\\t\\t}\\n\\t\\t\\tif (operationCode == 11) {\\n\\t\\t\\t\\tpoints.SWITCH = {\\n\\t\\t\\t\\t\\t\\"alarmType\\": \'自检\',\\n\\t\\t\\t\\t\\t\\"alarmStatus\\": 2,\\n\\t\\t\\t\\t\\t\\"alarmValue\\": 2\\n\\t\\t\\t\\t};\\n\\t\\t\\t}\\n\\t\\t\\tif (operationCode == 2) {\\n\\t\\t\\t\\tpoints.SWITCH = {\\n\\t\\t\\t\\t\\t\\"alarmType\\": \'消音\',\\n\\t\\t\\t\\t\\t\\"alarmStatus\\": 2,\\n\\t\\t\\t\\t\\t\\"alarmValue\\": 2\\n\\t\\t\\t\\t};\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t}\\n\\n\\tpoints.status = status;\\n\\tpoints.OFFLINE = offlinePoint;\\n\\t//将离线周期数据和测点总数据封装成一个对象 返回   flag ：是否是指令下发返回的响应数据\\n\\tvar obj = {\\n\\t\\t\\"offlineData\\": baseJson,\\n\\t\\t\\"points\\": points,\\n\\t\\t\\"iccid\\": iccid,\\n\\t\\t\\"flag\\": flag,\\n\\t\\t\\"offlineFlag\\": offlineFlag\\n\\t};\\n\\n\\treturn obj;\\n\\n}", "main": "encode"}}', '{"description": ""}', 'report', 'status', 1, 2000, 1702616380623, 1702616380623),
	(1080, '范例2：读取当前工作电流', '基站电源-ABC', '华为技术有限公司', 'JavaScript', 'device', '{"encode": {"code": "/**\\n* 编码器的入口函数\\n* 全局参数：\\n*     fox_edge_param：json string格式的设备参数的合并对象\\n* 返回值：\\n*   提供给通道的发送数据。根据不同的通道服务，它可能是HEX结构的文本，也可能是JSON结构的对象，请自行根据选定的通道服务进行确认\\n*/\\nfunction encode() {\\n\\treturn encodeHex(fox_edge_param);\\n}\\n\\n/**\\n* 开发者自己写的编码函数1\\n* 返回格式1：HEX格式的字符串\\n*     比如串口通道，TCP通道、模拟通道，它们的输入/输出格式，就是HEX格式的文本\\n*/\\nfunction encodeHex(param) {\\n\\treturn \\"46 49 4E 53 00 00 00 1A 00 00 00 02 00 00 00 00 80 00 02 00 0A 00 00 71 00 FF 01 01 B1 00 0A 00 00 01\\";\\n}\\n\\n/**\\n* 开发者自己写的编码函数2\\n* 返回格式2：JSON格式的字符串\\n*     比如S7通道、MQTT通道，它们的输入/输出格式，就是JSON格式的文本\\n*/\\nfunction encodeJson(param) {\\n  var object = JSON.parse(param);\\n\\treturn JSON.stringify(object);\\n}", "main": "encode"}}', '{"description": ""}', 'publish', 'status', 1, 2001, 1702646396415, 1702646396415),
	(1081, '范例1：读取当前工作电压', '基站电源-ABC', '华为技术有限公司', 'JavaScript', 'device', '{"decode": {"code": "/**\\n* 编码器的入口函数\\n* 全局参数：\\n*     fox_edge_data：json string格式 或者 hex string格式的接收数据\\n*     fox_edge_param：json string格式的设备参数的合并对象\\n* 返回值：\\n*   提供给通道的发送数据。根据不同的通道服务，它可能是HEX结构的文本，也可能是JSON结构的对象，请自行根据选定的通道服务进行确认\\n*/\\nfunction decode() {\\n   return decodeJson(fox_edge_data, fox_edge_param);\\n}\\n\\n/**\\n* 开发者自己写的解码函数1\\n* 返回格式：JSON格式的字符串\\n*/\\nfunction decodeJson(recv, param) {\\n  var object = JSON.parse(param);\\n\\treturn JSON.stringify(object);\\n}", "main": "decode"}, "encode": {"code": "/**\\n* 编码器的入口函数\\n* 全局参数：\\n*     fox_edge_param：json string格式的设备参数的合并对象\\n* 返回值：\\n*   提供给通道的发送数据。根据不同的通道服务，它可能是HEX结构的文本，也可能是JSON结构的对象，请自行根据选定的通道服务进行确认\\n*/\\nfunction encode() {\\n\\treturn encodeHex(fox_edge_param);\\n}\\n\\n/**\\n* 开发者自己写的编码函数1\\n* 返回格式1：HEX格式的字符串\\n*     比如串口通道，TCP通道、模拟通道，它们的输入/输出格式，就是HEX格式的文本\\n*/\\nfunction encodeHex(param) {\\n\\treturn \\"46 49 4E 53 00 00 00 1A 00 00 00 02 00 00 00 00 80 00 02 00 0A 00 00 71 00 FF 01 01 B1 00 0A 00 00 01\\";\\n}\\n\\n/**\\n* 开发者自己写的编码函数2\\n* 返回格式2：JSON格式的字符串\\n*     比如S7通道、MQTT通道，它们的输入/输出格式，就是JSON格式的文本\\n*/\\nfunction encodeJson(param) {\\n  var object = JSON.parse(param);\\n\\treturn JSON.stringify(object);\\n}", "main": "encode"}}', '{"description": ""}', 'exchange', 'status', 1, 2000, 1702646396454, 1702646396454),
	(1082, '上报数据', 'DLT645 v1997', 'Fox Edge', 'Java', 'device', '{}', '{"description": ""}', 'report', 'status', 0, 0, 1702737168135, 1702737168135),
	(1083, '告警状态', 'LRW解码器', 'Fox-Edge', 'Java', 'device', '{}', '{"description": ""}', 'report', 'status', 0, 0, 1702784551121, 1702784551121),
	(1084, '检查版本号', 'LRW解码器', 'Fox-Edge', 'Java', 'device', '{}', '{"description": ""}', 'exchange', 'status', 1, 2000, 1702784551171, 1702784551171),
	(1085, '广播地址', 'LRW解码器', 'Fox-Edge', 'Java', 'device', '{}', '{"description": ""}', 'publish', 'status', 1, 1000, 1702784551186, 1702784551186),
	(1086, '查询传感器状态', 'LRW解码器', 'Fox-Edge', 'Java', 'device', '{}', '{"description": ""}', 'exchange', 'status', 1, 2000, 1702784551205, 1702784551205),
	(1087, 'splitHandler', 'JB-QB-GST9000', '海湾安全技术有限公司', 'JavaScript', 'channel', '{"decode":{"main":"decode","code":"/**\\n * 编码器的入口函数\\n * 全局参数：\\n *     message：hex string格式的接收数据\\n *              XX+[合法报文]+XXX，合法报文可能混杂在一堆其他数据之中\\n * 返回值：\\n *   从XXX+[合法报文]+XXX中，截取到的[合法报文]\\n */\\nfunction decode(message) {\\n    var starTag = \\"1B 36\\";\\n    var endTag = \\"0A 0A\\";\\n\\n    message = message.replace(/\\\\s+/g, \\"\\");\\n    starTag = starTag.replace(/\\\\s+/g, \\"\\");\\n    endTag = endTag.replace(/\\\\s+/g, \\"\\");\\n\\n\\n    // 转换成大写\\n    message = message.toUpperCase();\\n    starTag = starTag.toUpperCase();\\n    endTag = endTag.toUpperCase();\\n\\n    // 查找起始标记\\n    var start = indexOf(message, starTag);\\n    if (start < 0) {\\n        return \\"\\";\\n    }\\n\\n    // 查找结束标记\\n    var end = indexOf(message, endTag, start);\\n    if (end < 0) {\\n        return \\"\\";\\n    }\\n\\n    // 截取段落\\n    var section = message.substring(start, end + endTag.length);\\n\\n    // 截取第1个文本行\\n    var ln1 = section.substring(0, indexOf(section, \\"0A\\") + \\"0A\\".length);\\n    var timeHex = ln1.substring(starTag.length, ln1.length-\\"0A\\".length);\\n    var timeTxt = getAscii(timeHex);\\n\\n    // 检查： 前面的日期，符合特定的格式，范例 08/12/02  17:24\\n    var regex = /^\\\\d{2}\\\\/\\\\d{2}\\\\/\\\\d{2}  \\\\d{2}:\\\\d{2}$/;\\n    if (!regex.test(timeTxt)) {\\n        return \\"\\";\\n    }\\n\\n    // 截取第2个文本行\\n    var next = indexOf(message, \\"0A\\", start + ln1.length);\\n    var ln2 = message.substring(start + ln1.length, next + \\"0A\\".length);\\n    if (ln2.substring(0,4) !== \\"2020\\"){\\n        return \\"\\";\\n    }\\n\\n    // 截取第3个文本行\\n    next = indexOf(message, \\"0A\\", start + ln1.length + ln2.length);\\n    var ln3 = message.substring(start + ln1.length + ln2.length, next + \\"0A\\".length);\\n    if (ln3.substring(0,4) !== \\"1B39\\"){\\n        return \\"\\";\\n    }\\n\\n    return section;\\n}\\n\\nfunction getTime(line) {\\n    var text = \\"\\";\\n    for (var i = 2; i < 24; i += 2) {\\n        text += String.fromCharCode(parseInt(line[i] + line[i + 1], 16));\\n    }\\n\\n    return text;\\n}\\n\\n/**\\n * 检查：hex字符串，indexOf错位的问题\\n *\\n * @param hexStr 字符串\\n * @param hexTag 标记\\n * @param position 起始未知\\n * @returns {number|*} 目标位置\\n */\\nfunction indexOf(hexStr, hexTag, position) {\\n    // 默认值处理\\n    if (position == undefined) {\\n        position = 0;\\n    }\\n\\n    if (position % 2 !== 0) {\\n        return -1;\\n    }\\n\\n    var pos = position;\\n\\n    do {\\n        // 寻找标记\\n        pos = hexStr.indexOf(hexTag, pos);\\n        if (pos < 0) {\\n            return -1;\\n        }\\n\\n        // 检查：是否是错位，造成的误查\\n        if (pos % 2 !== 0) {\\n            // 纠正错位，并继续查找\\n            pos += 1;\\n            continue;\\n        }\\n\\n        // 没有错位的，才是真数据\\n        return pos;\\n\\n    } while (true);\\n}\\n\\nfunction getAscii(hexStr) {\\n    var text = \\"\\";\\n    for (var i = 0; i < hexStr.length; i += 2) {\\n        text += String.fromCharCode(parseInt(hexStr[i] + hexStr[i + 1], 16));\\n    }\\n\\n    return text;\\n}\\n"}}', '{"description":"文档：\\nhttps://abg.baidu.com/view/70f35e04cc17552707220808?fr=search-income-top3page\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n报文特征：\\n1、以特殊字符开头为起始符的多行GB2312中文文本，文本行至少3行，段落以0A 0A结尾\\n2、第1行，以\\u001B6开始，加上yy/mm/dd  hh:mm格式的文本\\n3、第2行，以两个空格开始的地址，xxx-xxx\\n4、第3行，以\\u001B9开始，加上告警类型的文本\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n测试报文1：\\n1B 36 30 38 2F 31 32 2F 30 32 20 20 31 37 3A 32 34 0A 20 20 30 30 34  2D 30 30 34 0A  1B 39 CAD7 B4 CE BB F0 BE AF  0AC8 B9 C2A5 D2 BB B2 E3 C9 CF BF D5 0AB8 D0D1CCCC BD B2 E2 C6 F7 0A0A\\n\\n上报报文:\\n\\u001B608/12/02  17:24\\n  004-004\\n\\u001B9首次火警\\n裙楼一层上空\\n感烟探测器\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n测试报文2：\\n1B 36  30 38 2F 31 32 2F 30 32 20 20 31 37 3A 32 31 0A 20 20 30 30 36  2D 30 30 37  0A 1B 39 BB F0 BE AF  BA F3 D0 F8 0A D6 D0D1 CC C1F9 B2E3 BC C6 BB AE B2 BF 0A B8 D0D1 CC CC BD B2E2 C6 F7 0A0A\\n\\n上报报文:\\n\\u001B608/12/02  17:21\\n  006-007\\n\\u001B9火警后续\\n中烟六层计划部\\n感烟探测器\\n--------------------------------------------------------------------------------------------------------------------------\\n测试报文3：\\n1B 36 30 38 2F 31 32 2F 30 32 20 20 31 37 3A 32 35 0A 20 20 0A 1B 39 CF B5 CD B3 B8 B4 CE BB 0A 0A\\n\\n上报报文:\\n\\u001B608/12/02  17:25\\n  \\n\\u001B9系统复位\\n\\n\\n"}', 'splitHandler', 'status', 1, 2000, 1703166735892, 1713420999355),
	(1088, 'keyHandler', 'JB-QB-GST9000', '海湾安全技术有限公司', 'JavaScript', 'channel', '{"decode": {"code": "/**\\n* 编码器的入口函数\\n* 全局参数：\\n*     fox_edge_data：hex string格式的接收数据\\n*                    XXX+[合法报文]+XXX，合法报文可能混杂在一堆其他数据之中\\n*     fox_edge_param：json string格式的设备参数的合并对象\\n* 返回值：\\n*   从XXX+[合法报文]+XXX中，截取到的[合法报文]\\n*/\\nfunction decode(message) {\\n\\t// 测试脚本：JB-QB-GST9000报文的特点，是一行一行的文本流\\n\\t//\\tvar message = \'\';\\n\\t//\\tmessage = message + \'00 1B 36 30 38 2F 31 32 2F 30 32 20 20 31 37 3A 32 34 0A 20 20 30 30 34  2D 30 30 34 0A1B 39 CA D7 B4 CE BB F0 BE AF  0AC8 B9 C2A5 D2 BB B2 E3 C9 CF BF D5 0AB8 D0D1CCCC BD B2 E2 C6 F7 0A0A 11\';\\n\\t//\\tmessage = message.replace(/\\\\s+/g, \\"\\");\\n\\tvar starTag = \\"1B\\";\\n\\tvar endTag = \\"0A0A\\";\\n\\n\\t// 转换成大写\\n\\tmessage = message.toUpperCase();\\n\\n\\t// 寻找起始标记\\n\\tvar start = message.indexOf(starTag);\\n\\tif (start < 0) {\\n\\t\\treturn \\"\\";\\n\\t}\\n\\t// 寻找结束符\\n\\tvar end = message.indexOf(endTag);\\n\\tif (end < 0) {\\n\\t\\treturn \\"\\";\\n\\t}\\n\\n\\tvar data = message.substring(start, end + endTag.length);\\n\\n\\t// 寻找结束符\\n\\tmessage = data;\\n\\tend = 0;\\n\\n\\t// 连续2行数据  \\n  endTag = \\"0A\\";\\n\\tvar result = \\"\\";\\n\\tfor (var i = 0; i < 2; i++) {\\n\\t\\tend = data.indexOf(endTag, end + endTag.length);\\n\\t\\tif (end < 0) {\\n\\t\\t\\treturn \\"\\";\\n\\t\\t}\\n\\n\\t\\tresult = data.substring(start, end + endTag.length);\\n\\t\\tstart = end + endTag.length;\\n\\n\\t}\\n\\n\\tresult = result.substring(0, result.length - endTag.length);\\n\\n\\t// 转成文本\\n\\tresult = hexToString(result);\\n\\n\\t// 去掉多个空格\\n\\tfor (var i = 0; i < 5; i++) {\\n\\t\\tresult = result.replace(\\" \\", \\"\\");\\n\\t}\\n\\n\\treturn result;\\n}\\n\\n/**\\n* 转换成文本\\n*/\\nfunction hexToString(hex) {\\n\\tvar result = \'\';\\n\\tfor (var i = 0; i < hex.length; i += 2) {\\n\\t\\tvar charCode = parseInt(hex.substr(i, 2), 16);\\n\\t\\tresult += String.fromCharCode(charCode);\\n\\t}\\n\\treturn result;\\n}", "main": "decode"}}', '{"description": ""}', 'keyHandler', 'status', 1, 2000, 1703171171879, 1703172576541),
	(1090, '上报事件', 'JB-QB-GST9000', '海湾安全技术有限公司', 'JavaScript', 'device', '{"decode":{"main":"decode","code":"/**\\n * 解码器的入口函数\\n * 全局参数：\\n *     fox_edge_data：json string格式 或者 hex string格式的接收数据\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   提供给通道的发送数据。根据不同的通道服务，它可能是HEX结构的文本，也可能是JSON结构的对象，请自行根据选定的通道服务进行确认\\n */\\nfunction decode() {\\n\\tvar object = decodeStr(fox_edge_data, fox_edge_param);\\n  return JSON.stringify(object);\\n}\\n\\n/**\\n * 事件解码器函数：消火栓按钮报火警\\n * 全局参数：\\n *     fox_edge_data：hex string格式的接收数据\\n *                    XXX+[合法报文]+XXX，合法报文可能混杂在一堆其他数据之中\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   必须是列表格式的JSON字符串，并且JSON对象必须包含关键字【recordType】，否则不给与入库\\n */\\nfunction decodeStr(message, device_param) {\\n    //var message = \\"\\u001B608/12/02  17:24\\\\n  004-004\\\\n\\u001B9首次火警\\\\n裙楼一层上空\\\\n感烟探测器\\";\\n    // 以\'\\\\u001b\'开始\\n    if (message.indexOf(\'\\\\u001b\') != 0) {\\n        return \\"不是以1B 36开始的报文\\";\\n    }\\n\\n    // 以\'\\\\u000a\'为换行符\\n    var datas = message.split(\'\\\\u000a\');\\n    if (datas.length < 3) {\\n        return \\"行数<3\\";\\n    }\\n\\n    // 5行数据\\n    var time = datas[0];\\n    var node = datas[1];\\n    var type = datas[2];\\n    // var position = datas[3];\\n    // var source = datas[4];\\n\\n    // 日期：去掉\'\\\\u001b\'字符，去掉第一个不知道是啥含义的数字，就是日期\\n    if (time.indexOf(\'\\\\u001b\') != 0) {\\n        return \\"error 3\\";\\n    }\\n    time = time.replace(\'\\\\u001b\', \\"\\");\\n    time = time.substring(1, time.length);\\n\\n    // 事件：去掉\'\\\\u001b\'字符，去掉第一个不知道是啥含义的数字，就是事件\\n    if (type.indexOf(\'\\\\u001b\') != 0) {\\n        return \\"error 4\\";\\n    }\\n    type = type.replace(\'\\\\u001b\', \\"\\");\\n    type = type.substring(1, type.length);\\n\\n    // 清空空格\\n    node = node.replace(\\" \\", \\"\\");\\n\\n    // 描述信息\\n    var text = [];\\n    for (var i = 3; i < datas.length; i++) {\\n        if (datas[i].length !== 0){\\n            text.push(datas[i]);\\n        }\\n    }\\n\\n\\n    // 必须包含recordType字段，用来指明事件的类型\\n    var record = {\\n        \\"recordType\\": type, \\"datetime\\": time, \\"node\\": node, \\"text\\": text\\n    };\\n\\n    // 必须以列表格式返回\\n    var result = [];\\n    result.push(record);\\n\\n    return result;\\n}"}}', '{"description":"文档：\\nhttps://abg.baidu.com/view/70f35e04cc17552707220808?fr=search-income-top3page\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n报文特征：\\n1、以特殊字符开头为起始符的多行GB2312中文文本，文本行至少3行，段落以0A 0A结尾\\n2、第1行，以\\u001B6开始，加上yy/mm/dd  hh:mm格式的文本\\n3、第2行，以两个空格开始的地址，xxx-xxx\\n4、第3行，以\\u001B9开始，加上告警类型的文本\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n测试报文1：\\n1B 36 30 38 2F 31 32 2F 30 32 20 20 31 37 3A 32 34 0A 20 20 30 30 34  2D 30 30 34 0A  1B 39 CAD7 B4 CE BB F0 BE AF  0AC8 B9 C2A5 D2 BB B2 E3 C9 CF BF D5 0AB8 D0D1CCCC BD B2 E2 C6 F7 0A0A\\n\\n上报报文:\\u001B608/12/02  17:24\\n  004-004\\n\\u001B9首次火警\\n裙楼一层上空\\n感烟探测器\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n测试报文2：\\n1B 36  30 38 2F 31 32 2F 30 32 20 20 31 37 3A 32 31 0A 20 20 30 30 36  2D 30 30 37  0A 1B 39 BB F0 BE AF  BA F3 D0 F8 0A D6 D0D1 CC C1F9 B2E3 BC C6 BB AE B2 BF 0A B8 D0D1 CC CC BD B2E2 C6 F7 0A0A\\n\\n上报报文:\\u001B608/12/02  17:21\\n  006-007\\n\\u001B9火警后续\\n中烟六层计划部\\n感烟探测器\\n--------------------------------------------------------------------------------------------------------------------------\\n测试报文3：\\n1B 36 30 38 2F 31 32 2F 30 32 20 20 31 37 3A 32 35 0A 20 20 0A 1B 39 CF B5 CD B3 B8 B4 CE BB 0A 0A\\n\\n上报报文:\\u001B608/12/02  17:25\\n  \\n\\u001B9系统复位\\n\\n\\n"}', 'report', 'record', 1, 2000, 1703172666459, 1713422121799),
	(1091, '读取数据', '三相电表(DT-SU666)', '正泰集团股份有限公司', 'JsonScript', 'device', '{"decode": {"code": "/**\\n * 解码器的入口函数\\n * 全局参数：\\n *     fox_edge_data：json string格式 或者 hex string格式的接收数据\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   提供给通道的发送数据。根据不同的通道服务，它可能是HEX结构的文本，也可能是JSON结构的对象，请自行根据选定的通道服务进行确认\\n */\\nfunction decode() {\\n\\tvar object = decodeStr(fox_edge_data, fox_edge_param);\\n  return JSON.stringify(object);\\n}\\n\\n/**\\n* 事件解码器函数：消火栓按钮报火警\\n* 全局参数：\\n*     fox_edge_data：hex string格式的接收数据\\n*                    XXX+[合法报文]+XXX，合法报文可能混杂在一堆其他数据之中\\n*     fox_edge_param：json string格式的设备参数的合并对象\\n* 返回值：\\n*   必须是列表格式的JSON字符串，并且JSON对象必须包含关键字【recordType】，否则不给与入库\\n*/\\nfunction decodeStr(message, device_param) {\\n\\t//var message = \\"----------------------\\\\r\\\\n2023年11月26日 16时46分\\\\r\\\\n\\\\r\\\\n1/5 \\\\r\\\\n消火栓按钮报火警\\\\r\\\\n\\";\\n\\tvar datas = message.split(\'\\\\r\');\\n\\tvar head = datas[0];\\n\\tvar datetime = datas[1];\\n\\tvar node = datas[3];\\n\\tvar event = datas[4];\\n\\n  datetime = datetime.replace(\\"\\\\r\\", \\"\\");\\n  datetime = datetime.replace(\\"\\\\n\\", \\"\\");\\n  \\n\\tnode = node.replace(\\" \\", \\"\\");\\n  var nodes = node.split(\'/\');\\n  var loop = nodes[0];\\n  var address = nodes[1];\\n  \\n  // 必须包含recordType字段，用来指明事件的类型\\n\\tvar obj = {\\n    \\"recordType\\": event,\\n\\t\\t\\"datetime\\": datetime,\\t\\t\\n\\t\\t\\"node\\": node,\\n    \\"loop\\":loop,\\n    \\"address\\":address\\n\\t};\\n\\n  // 必须以列表格式返回\\n\\tvar result = new Array();\\n\\tresult.push(obj);\\n\\n\\treturn result;\\n}", "main": "decode"}}', '{"description": ""}', 'report', 'record', 1, 2000, 1701943612264, 1703600216774),
	(1093, '通用数据上报', 'HJ212-2017', '中国环境保护设备', 'JavaScript', 'device', '{"decode": {"code": "/**\\n * 解码器的入口函数\\n * 全局参数：\\n *     fox_edge_data：json string格式 或者 hex string格式的接收数据\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   提供给通道的发送数据。根据不同的通道服务，它可能是HEX结构的文本，也可能是JSON结构的对象，请自行根据选定的通道服务进行确认\\n */\\nfunction decode() {\\n\\tvar object = decodeStr(fox_edge_data, fox_edge_param);\\n  return JSON.stringify(object);\\n}\\n\\n/**\\n* 事件解码器函数：消火栓按钮报火警\\n* 全局参数：\\n*     fox_edge_data：hex string格式的接收数据\\n*                    XXX+[合法报文]+XXX，合法报文可能混杂在一堆其他数据之中\\n*     fox_edge_param：json string格式的设备参数的合并对象\\n* 返回值：\\n*   必须是列表格式的JSON字符串，并且JSON对象必须包含关键字【recordType】，否则不给与入库\\n*/\\nfunction decodeStr(message, device_param) {\\n\\t//var message = \\"##0336ST=31;CN=2011;PW=123456;MN=63010000020001;CP=&&DataTime=20200108143205;B02-Rtd=9.88,B02-Flag=N;01-Rtd=10.73,01-ZsRtd=12.38,01-Flag=N;02-Rtd=0.705,02-ZsRtd=0.814,02-Flag=N;03-Rtd=69.064,03-ZsRtd=79.684,03-Flag=N;S01-Rtd=5.8,S01-Flag=N;S02-Rtd=19.38,S02-Flag=N;S03-Rtd=99.04,S03-Flag=N;S08-Rtd=-46.12,S08-Flag=N;S05-Rtd=14.66,S05-Flag=N&&8EC1\\\\r\\\\n\\";\\n\\n    // 检查：是否以\\"##\\"开始\\n\\tif (message.indexOf(\\"##\\") != 0) {\\n\\t\\treturn \'1\';\\n\\t}\\n\\t\\n\\t// 检查：是否小于最小长度\\n\\tif (message.length < 12){\\n\\t  return \'2\';\\n\\t}\\n\\t\\n\\t// 检查：是否以\\"\\\\r\\\\n\\"结尾\\n\\tvar end = message.indexOf(\\"\\\\r\\\\n\\");\\n\\tif (end != message.length-2) {\\n\\t\\t//return \\"3\\";\\n\\t}\\n\\t\\n\\t// 报文长度字段\\n\\tvar msg_len_str = message.substring(2, 6);\\n\\tmsg_len_str = parseInt(msg_len_str);\\n\\t\\n\\t// 内容\\n\\tvar content = message.substring(6, 6 + msg_len_str);\\n\\t\\n\\t// crc\\n\\tvar crc = message.substring(6 + msg_len_str,6 + msg_len_str + 4);\\n\\t\\n\\tvar cp_start_tag = \\"CP=&&\\";\\n\\tvar cp_start = content.indexOf(cp_start_tag);\\n\\tvar cp_end = 0;\\n\\tif (cp_start > 0){\\n\\t   cp_end = content.indexOf(\\"&&\\",cp_start+cp_start_tag.length);\\n\\t}\\n\\t\\n\\t// head内容\\n\\tvar head = \\"\\";\\n\\tif (cp_start > 0){\\n\\t\\thead = content.substring(0,cp_start-1);\\n\\t}\\n\\t\\n\\t// body内容\\n\\tvar data = \\"\\";\\n\\tif (cp_start > 0 && cp_end > 0){\\n\\t\\tdata = content.substring(cp_start+cp_start_tag.length,cp_end);\\n\\t}\\n\\t\\n\\t\\n\\t// 根据;字符进行分拆\\n\\tvar heads = head.split(\';\');\\n\\tvar datas = data.split(\';\');\\n\\t\\n\\t// 对head字符串进行结构化\\n\\tvar headObjs = buildHeads(heads);\\n\\tvar dataObjs = buildDatas(datas);\\n\\t\\n\\tvar result = {\\n\\t\\t\\t\'heads\': headObjs,\\n\\t\\t\\t\'datas\': dataObjs\\n\\t\\t};\\n\\t\\n\\t//result =  JSON.stringify(result);\\n\\t\\n\\t//console.log(result)\\n\\t\\n\\treturn result;\\n}\\n\\nfunction buildHeads(heads) {\\n\\tvar list = new Array();\\n\\n\\tfor (var i = 0; i < heads.length; i++) {\\n\\t\\tvar kv = heads[i].split(\'=\');\\n\\n\\t\\tvar k = kv[0];\\n\\t\\tvar v = kv[1];\\n\\n\\t\\tvar obj = {\\n\\t\\t\\tkey: \'\',\\n\\t\\t\\tval: \'\'\\n\\t\\t};\\n\\n\\t\\tobj.key = k;\\n\\t\\tobj.val = v;\\n\\n\\t\\tlist.push(obj);\\n\\t}\\n\\n\\t// 将Map对象转换为对象\\n\\treturn list;\\n}\\n\\nfunction buildDatas(datas) {\\n\\tvar list = new Array();\\n\\n\\tfor (var i = 0; i < datas.length; i++) {\\n\\t\\tvar items = datas[i].split(\',\');\\n\\n\\t\\tvar objs =  new Array();\\n    \\n\\t\\tfor (var j = 0; j < items.length; j++) {\\n\\t\\t\\tvar kv = items[j].split(\'=\');\\n\\t\\t\\tvar k = kv[0];\\n\\t\\t\\tvar v = kv[1];\\n\\n  \\t\\tvar obj = {\\n  \\t\\t\\tkey: \'\',\\n  \\t\\t\\tval: \'\'\\n  \\t\\t};\\n\\n  \\t\\tobj.key = k;\\n  \\t\\tobj.val = v;\\n\\n  \\t\\tobjs.push(obj);\\n\\t\\t}\\n\\n\\t\\tlist.push(objs);\\n\\t}\\n\\n\\treturn list;\\n}", "main": "decode"}, "description": "报文格式：\\n中国环境HJ212-2017协议的格式是字符串格式的协议，它以“##”作为起始符，其后4字节的报文长度，尾部以CRC16进行校验，最后“\\\\r\\\\n”作为结束符，\\n\\n数据部分，包括两段\\n第一段是头部区，包括一堆以“；”分割，“=”为标识的KV\\n第二段是数据区，以CP=&&开始，&&结束。内容格式为“；”分割，“,”分割，“=”分割的2级KV\\n--------------------------------------------------------------------------------------------------------------------------\\n范例1：\\n##0336ST=31;CN=2011;PW=123456;MN=63010000020001;CP=&&DataTime=20200108143205;B02-Rtd=9.88,B02-Flag=N;01-Rtd=10.73,01-ZsRtd=12.38,01-Flag=N;02-Rtd=0.705,02-ZsRtd=0.814,02-Flag=N;03-Rtd=69.064,03-ZsRtd=79.684,03-Flag=N;S01-Rtd=5.8,S01-Flag=N;S02-Rtd=19.38,S02-Flag=N;S03-Rtd=99.04,S03-Flag=N;S08-Rtd=-46.12,S08-Flag=N;S05-Rtd=14.66,S05-Flag=N&&8EC1\\\\r\\\\n\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n范例2：\\n##0457QN=20210320163101890;ST=32;CN=2011;PW=123456;MN=81733553213013;Flag=4;CP=&&DataTime=20210320013400;w00000-Rtd=181.682,w00000-Flag=N;w21001-SampleTime=20210320005400,w21001-Rtd=45.160,w21001-Flag=N;w21011-SampleTime=20210320013400,w21011-Rtd=1.970,w21011-Flag=N;w21003-SampleTime=20210320013400,w21003-Rtd=53.131,w21003-Flag=N;w01018-SampleTime=20210320013400,w01018-Rtd=194.200,w01018-Flag=N;w01001-SampleTime=20210320013406,w01001-Rtd=7.496,w01001-Flag=N&&6E80\\\\r\\\\n\\n\\n--------------------------------------------------------------------------------------------------------------------------"}', '{"description": "报文格式：\\n中国环境HJ212-2017协议的格式是字符串格式的协议，它以“##”作为起始符，其后4字节的报文长度，尾部以CRC16进行校验，最后“\\\\r\\\\n”作为结束符，\\n\\n数据部分，包括两段\\n第一段是头部区，包括一堆以“；”分割，“=”为标识的KV\\n第二段是数据区，以CP=&&开始，&&结束。内容格式为“；”分割，“,”分割，“=”分割的2级KV\\n--------------------------------------------------------------------------------------------------------------------------\\n范例1：\\n##0336ST=31;CN=2011;PW=123456;MN=63010000020001;CP=&&DataTime=20200108143205;B02-Rtd=9.88,B02-Flag=N;01-Rtd=10.73,01-ZsRtd=12.38,01-Flag=N;02-Rtd=0.705,02-ZsRtd=0.814,02-Flag=N;03-Rtd=69.064,03-ZsRtd=79.684,03-Flag=N;S01-Rtd=5.8,S01-Flag=N;S02-Rtd=19.38,S02-Flag=N;S03-Rtd=99.04,S03-Flag=N;S08-Rtd=-46.12,S08-Flag=N;S05-Rtd=14.66,S05-Flag=N&&8EC1\\\\r\\\\n\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n范例2：\\n##0457QN=20210320163101890;ST=32;CN=2011;PW=123456;MN=81733553213013;Flag=4;CP=&&DataTime=20210320013400;w00000-Rtd=181.682,w00000-Flag=N;w21001-SampleTime=20210320005400,w21001-Rtd=45.160,w21001-Flag=N;w21011-SampleTime=20210320013400,w21011-Rtd=1.970,w21011-Flag=N;w21003-SampleTime=20210320013400,w21003-Rtd=53.131,w21003-Flag=N;w01018-SampleTime=20210320013400,w01018-Rtd=194.200,w01018-Flag=N;w01001-SampleTime=20210320013406,w01001-Rtd=7.496,w01001-Flag=N&&6E80\\\\r\\\\n\\n\\n--------------------------------------------------------------------------------------------------------------------------"}', 'report', 'status', 1, 2000, 1704108896417, 1704377253515),
	(1094, 'splitHandler', 'HJ212-2017', '中国环境保护设备', 'JavaScript', 'channel', '{"decode": {"code": "/**\\n* 函数说明：一组报文的最小长度\\n* 返回格式：最小包长度\\n* 备注信息：在TCP上传输的协议，它的报文会包括包头和包长度，用来帮助数据的分拆。\\n*           包长度所在的位置通常是固定的，所以可以知道一段数据包括包头域和包长度域，至少包括多少字节。\\n*/\\nfunction getHeaderLength()\\n{\\n  return 6;\\n}\\n\\n\\n/**\\n* 函数说明：当前报文的具体长度\\n* 输入参数：HEX格式的字符串，或者是TXT格式的字符串，（具体看通道服务的配置，给你输入的是哪种格式，默认是HEX格式），用于表达接收到的一个报文\\n* 返回格式：当前报文的长度\\n* 备注信息：在TCP上传输的协议，它的报文会包括包头和包长度，用来帮助数据的分拆。\\n*           包长度所在的位置通常是固定的，所以可以知道一段数据包括包头域和包长度域，至少包括多少字节。\\n*/\\nfunction getPackLength(message)\\n{\\n\\tvar msg_len_str = message.substring(2, 6);\\n\\tmsg_len_str = parseInt(msg_len_str);\\n  return msg_len_str+12;\\n}\\n\\n/**\\n* 函数说明：当前报文是否为非法包\\n* 输入参数：HEX格式的字符串，或者是TXT格式的字符串，（具体看通道服务的配置，给你输入的是哪种格式，默认是HEX格式），用于表达接收到的一个报文\\n* 返回格式：布尔值\\n* 备注信息：在TCP上传输的协议，它的报文会包括包头和包长度，用来帮助数据的分拆。\\n*           包头通常是固定的标识，如果不是这些标识，那么说明是非法包\\n*/\\nfunction isInvalidPack(message)\\n{\\n  if (message.substring(0, 2) == \'##\') {\\n    return false;\\n  }\\n  \\n  return true;\\n}\\n\\n", "main": "decode"}, "description": "报文格式：\\n中国环境HJ212-2017协议的格式是字符串格式的协议，它以“##”作为起始符，其后4字节的报文长度，尾部以CRC16进行校验，最后“\\\\r\\\\n”作为结束符，\\n\\n数据部分，包括两段\\n第一段是头部区，包括一堆以“；”分割，“=”为标识的KV\\n第二段是数据区，以CP=&&开始，&&结束。内容格式为“；”分割，“,”分割，“=”分割的2级KV\\n--------------------------------------------------------------------------------------------------------------------------\\n范例1：\\n##0336ST=31;CN=2011;PW=123456;MN=63010000020001;CP=&&DataTime=20200108143205;B02-Rtd=9.88,B02-Flag=N;01-Rtd=10.73,01-ZsRtd=12.38,01-Flag=N;02-Rtd=0.705,02-ZsRtd=0.814,02-Flag=N;03-Rtd=69.064,03-ZsRtd=79.684,03-Flag=N;S01-Rtd=5.8,S01-Flag=N;S02-Rtd=19.38,S02-Flag=N;S03-Rtd=99.04,S03-Flag=N;S08-Rtd=-46.12,S08-Flag=N;S05-Rtd=14.66,S05-Flag=N&&8EC1\\\\r\\\\n\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n范例2：\\n##0457QN=20210320163101890;ST=32;CN=2011;PW=123456;MN=81733553213013;Flag=4;CP=&&DataTime=20210320013400;w00000-Rtd=181.682,w00000-Flag=N;w21001-SampleTime=20210320005400,w21001-Rtd=45.160,w21001-Flag=N;w21011-SampleTime=20210320013400,w21011-Rtd=1.970,w21011-Flag=N;w21003-SampleTime=20210320013400,w21003-Rtd=53.131,w21003-Flag=N;w01018-SampleTime=20210320013400,w01018-Rtd=194.200,w01018-Flag=N;w01001-SampleTime=20210320013406,w01001-Rtd=7.496,w01001-Flag=N&&6E80\\\\r\\\\n\\n\\n十六进制：\\n232330343537514e3d32303231303332303136333130313839303b53543d33323b434e3d323031313b50573d3132333435363b4d4e3d38313733333535333231333031333b466c61673d343b43503d26264461746154696d653d32303231303332303031333430303b7730303030302d5274643d3138312e3638322c7730303030302d466c61673d4e3b7732313030312d53616d706c6554696d653d32303231303332303030353430302c7732313030312d5274643d34352e3136302c7732313030312d466c61673d4e3b7732313031312d53616d706c6554696d653d32303231303332303031333430302c7732313031312d5274643d312e3937302c7732313031312d466c61673d4e3b7732313030332d53616d706c6554696d653d32303231303332303031333430302c7732313030332d5274643d35332e3133312c7732313030332d466c61673d4e3b7730313031382d53616d706c6554696d653d32303231303332303031333430302c7730313031382d5274643d3139342e3230302c7730313031382d466c61673d4e3b7730313030312d53616d706c6554696d653d32303231303332303031333430362c7730313030312d5274643d372e3439362c7730313030312d466c61673d4e2626364538300d0a\\n\\n--------------------------------------------------------------------------------------------------------------------------"}', '{"description": "报文格式：\\n中国环境HJ212-2017协议的格式是字符串格式的协议，它以“##”作为起始符，其后4字节的报文长度，尾部以CRC16进行校验，最后“\\\\r\\\\n”作为结束符，\\n\\n数据部分，包括两段\\n第一段是头部区，包括一堆以“；”分割，“=”为标识的KV\\n第二段是数据区，以CP=&&开始，&&结束。内容格式为“；”分割，“,”分割，“=”分割的2级KV\\n--------------------------------------------------------------------------------------------------------------------------\\n范例1：\\n##0336ST=31;CN=2011;PW=123456;MN=63010000020001;CP=&&DataTime=20200108143205;B02-Rtd=9.88,B02-Flag=N;01-Rtd=10.73,01-ZsRtd=12.38,01-Flag=N;02-Rtd=0.705,02-ZsRtd=0.814,02-Flag=N;03-Rtd=69.064,03-ZsRtd=79.684,03-Flag=N;S01-Rtd=5.8,S01-Flag=N;S02-Rtd=19.38,S02-Flag=N;S03-Rtd=99.04,S03-Flag=N;S08-Rtd=-46.12,S08-Flag=N;S05-Rtd=14.66,S05-Flag=N&&8EC1\\\\r\\\\n\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n范例2：\\n##0457QN=20210320163101890;ST=32;CN=2011;PW=123456;MN=81733553213013;Flag=4;CP=&&DataTime=20210320013400;w00000-Rtd=181.682,w00000-Flag=N;w21001-SampleTime=20210320005400,w21001-Rtd=45.160,w21001-Flag=N;w21011-SampleTime=20210320013400,w21011-Rtd=1.970,w21011-Flag=N;w21003-SampleTime=20210320013400,w21003-Rtd=53.131,w21003-Flag=N;w01018-SampleTime=20210320013400,w01018-Rtd=194.200,w01018-Flag=N;w01001-SampleTime=20210320013406,w01001-Rtd=7.496,w01001-Flag=N&&6E80\\\\r\\\\n\\n\\n十六进制：\\n232330343537514e3d32303231303332303136333130313839303b53543d33323b434e3d323031313b50573d3132333435363b4d4e3d38313733333535333231333031333b466c61673d343b43503d26264461746154696d653d32303231303332303031333430303b7730303030302d5274643d3138312e3638322c7730303030302d466c61673d4e3b7732313030312d53616d706c6554696d653d32303231303332303030353430302c7732313030312d5274643d34352e3136302c7732313030312d466c61673d4e3b7732313031312d53616d706c6554696d653d32303231303332303031333430302c7732313031312d5274643d312e3937302c7732313031312d466c61673d4e3b7732313030332d53616d706c6554696d653d32303231303332303031333430302c7732313030332d5274643d35332e3133312c7732313030332d466c61673d4e3b7730313031382d53616d706c6554696d653d32303231303332303031333430302c7730313031382d5274643d3139342e3230302c7730313031382d466c61673d4e3b7730313030312d53616d706c6554696d653d32303231303332303031333430362c7730313030312d5274643d372e3439362c7730313030312d466c61673d4e2626364538300d0a\\n\\n--------------------------------------------------------------------------------------------------------------------------"}', 'splitHandler', 'status', 1, 2000, 1704340178238, 1705324429427),
	(1095, 'keyHandler', 'HJ212-2017', '中国环境保护设备', 'JavaScript', 'channel', '{"decode": {"code": "/**\\n* 函数说明：当前报文携带的设备身份ID\\n* 输入参数：HEX格式的字符串，或者是TXT格式的字符串，（具体看通道服务的配置，给你输入的是哪种格式，默认是HEX格式），用于表达接收到的一个报文\\n* 返回格式：当前设备身份信息的字符串\\n* 备注信息：在TCP上传输的协议，它的报文会包身份信息，用于帮助识别是哪个设备主动送过来的数据。\\n*/\\nfunction getServiceKey(message)\\n{\\n\\t// 检查：是否以\\"##\\"开始\\n\\tif (message.indexOf(\\"##\\") != 0) {\\n\\t\\treturn \\"\\";\\n\\t}\\n\\n\\t// 检查：是否小于最小长度\\n\\tif (message.length < 12) {\\n\\t\\treturn \\"\\";\\n\\t}\\n\\n\\t// 检查：是否以\\"\\\\r\\\\n\\"结尾\\n\\tvar end = message.indexOf(\\"\\\\r\\\\n\\");\\n\\tif (end != message.length - 2) {\\n\\t//\\treturn \\"\\";\\n\\t}\\n\\n\\t// 报文长度字段\\n\\tvar msg_len_str = message.substring(2, 6);\\n\\tmsg_len_str = parseInt(msg_len_str);\\n\\n\\t// 内容\\n\\tvar content = message.substring(6, 6 + msg_len_str);\\n\\n\\t// crc\\n\\tvar crc = message.substring(6 + msg_len_str, 6 + msg_len_str + 4);\\n\\n\\tvar cp_start_tag = \\"CP=&&\\";\\n\\tvar cp_start = content.indexOf(cp_start_tag);\\n\\tvar cp_end = 0;\\n\\tif (cp_start > 0) {\\n\\t\\tcp_end = content.indexOf(\\"&&\\", cp_start + cp_start_tag.length);\\n\\t}\\n\\n\\t// head内容\\n\\tvar head = \\"\\";\\n\\tif (cp_start > 0) {\\n\\t\\thead = content.substring(0, cp_start - 1);\\n\\t}\\n\\n\\t// body内容\\n\\tvar data = \\"\\";\\n\\tif (cp_start > 0 && cp_end > 0) {\\n\\t\\tdata = content.substring(cp_start + cp_start_tag.length, cp_end);\\n\\t}\\n\\n\\t// 根据;字符进行分拆\\n\\tvar heads = head.split(\';\');\\n\\tvar datas = data.split(\';\');\\n\\n\\t// 对head字符串进行结构化\\n\\tvar headObjs = buildHeads(heads);\\n\\n\\tvar result = getHead(headObjs, \'MN\');\\n\\n\\treturn result;\\n}\\n\\nfunction getHead(headObjs, key) {\\n\\tvar t = 0;\\n\\tfor (var i = 0; i < headObjs.length; i++) {\\n\\t\\tvar obj = headObjs[i]\\n\\n\\t\\tif (obj.key == key) {\\n\\t\\t\\treturn obj.val;\\n\\t\\t}\\n\\t}\\n\\n\\treturn \'\';\\n}\\n\\nfunction buildHeads(heads) {\\n\\tvar list = new Array();\\n\\n\\tfor (var i = 0; i < heads.length; i++) {\\n\\t\\tvar kv = heads[i].split(\'=\');\\n\\n\\t\\tvar k = kv[0];\\n\\t\\tvar v = kv[1];\\n\\n\\t\\tvar obj = {\\n\\t\\t\\tkey: \'\',\\n\\t\\t\\tval: \'\'\\n\\t\\t};\\n\\n\\t\\tobj.key = k;\\n\\t\\tobj.val = v;\\n\\n\\t\\tlist.push(obj);\\n\\t}\\n\\n\\t// 将Map对象转换为对象\\n\\treturn list;\\n}\\n", "main": "decode"}, "description": null}', '{"description": ""}', 'keyHandler', 'status', 1, 2000, 1704345723147, 1704372475906),
	(1099, '设备告警', '消防用水五合一（LoRaWan）', '武汉中科图灵科技有限公司', 'JavaScript', 'device', '{"decode": {"code": "/**\\n* 编码器的入口函数\\n* 全局参数：\\n*     fox_edge_data：json string格式 或者 hex string格式的接收数据\\n*     fox_edge_param：json string格式的设备参数的合并对象\\n* 返回值：\\n*   提供给通道的发送数据。根据不同的通道服务，它可能是HEX结构的文本，也可能是JSON结构的对象，请自行根据选定的通道服务进行确认\\n*/\\nfunction decode() {\\n  var object = marge(fox_edge_data);\\n\\treturn JSON.stringify(object);\\n}\\n\\n/**\\n * 消防用水五合一\\n * @param message\\n */\\nfunction marge(message) {\\n\\n\\tif (message.substring(0, 4) == \'2424\') {\\n\\n\\t\\treturn analysis(message);\\n\\t} else {\\n\\t\\t//LoRaWan设备数据接入到了iot.ink上\\n\\t\\tvar json = JSON.parse(message);\\n\\n\\t\\tvar data = json[\'data\'];\\n\\n\\t\\t//需要处理的16进制字符串\\n\\t\\tvar validMessage = data[\'data\'];\\n\\n\\t\\treturn analysis(validMessage);\\n\\t}\\n\\n}\\n\\n/**\\n * 解析数据\\n * @param message\\n */\\nfunction analysis(message) {\\n\\n\\tvar points;\\n\\tvar iccid = \'\';\\n\\tvar status = 2;\\n\\t//是否是指令下发的返回数据\\n\\tvar flag = false;\\n\\t//是否用消防平台的自身离线周期\\n\\tvar offlineFlag = true;\\n\\n\\t//防拆\\n\\tvar fx = message.substring(8, 9);\\n\\t//外部触发状态\\n\\tvar wbc = message.substring(9, 10);\\n\\t//外部开关2\\n\\tvar wbk2 = message.substring(10, 11);\\n\\t//外部开关1\\n\\tvar wbk1 = message.substring(11, 12);\\n\\t//包类型\\n\\tvar blx = message.substring(12, 13);\\n\\t//电池电压\\n\\tvar vol = parseInt(message.substring(13, 17), 16) * 0.001;\\n\\tvol = vol.toFixed(2);\\n\\t//采集数据\\n\\t//2424033886859105813621889861120240012109563001110e4f0006070700aa\\n\\tvar value = parseInt(message.substring(17, 21), 16) * 0.001;\\n\\tvalue = value.toFixed(2);\\n\\tif (value > 60) {\\n\\t\\tvalue = 0;\\n\\t}\\n\\t//24242315101100E5A0000000300A0A  液位0\\n\\t//信号强度\\n\\tvar sign = parseInt(message.substring(29, 31), 16);\\n\\n\\t//防拆测点\\n\\t//var XFC_point = xfcMessage(fx);\\n\\t// if (XFC_point.alarmStatus == 1) {\\n\\t//   status = 1;\\n\\t// }\\n\\t//电压\\n\\tvar VOL_point = {\\n\\t\\t\\"alarmType\\": \'正常\',\\n\\t\\t\\"alarmStatus\\": 2,\\n\\t\\t\\"alarmValue\\": vol\\n\\t};\\n\\t//采集数据\\n\\tvar VALUE_point = {\\n\\t\\t\\"alarmType\\": \'正常\',\\n\\t\\t\\"alarmStatus\\": 2,\\n\\t\\t\\"alarmValue\\": value\\n\\t};\\n\\t//信号强度\\n\\tvar SIGN_point = {\\n\\t\\t\\"alarmType\\": \'正常\',\\n\\t\\t\\"alarmStatus\\": 2,\\n\\t\\t\\"alarmValue\\": sign\\n\\t};\\n\\n\\tvar OFFLINE = {\\n\\t\\t\\"alarmType\\": \'正常\',\\n\\t\\t\\"alarmStatus\\": 2,\\n\\t\\t\\"alarmValue\\": 2\\n\\t}\\n\\n\\t//设备类型3.’1’表示消火栓，’2’表示水压，’3’表示水位，’4’表示门磁，’5’表示水浸；\\n\\tvar deviceType = message.substring(5, 6);\\n\\tif (deviceType == \'4\') {\\n\\n\\t\\tif (wbc == \'1\') {\\n\\t\\t\\tvar MENCI_1 = {\\n\\t\\t\\t\\t\\"alarmType\\": \'正常\',\\n\\t\\t\\t\\t\\"alarmStatus\\": 2,\\n\\t\\t\\t\\t\\"alarmValue\\": 2\\n\\t\\t\\t};\\n\\t\\t\\tstatus = 2;\\n\\t\\t\\tpoints = {\\n\\t\\t\\t\\t\\"OFFLINE\\": OFFLINE,\\n\\t\\t\\t\\t\\"VOL\\": VOL_point,\\n\\t\\t\\t\\t\\"SIGN\\": SIGN_point,\\n\\t\\t\\t\\t\\"MENCI_1\\": MENCI_1,\\n\\t\\t\\t\\t\\"MENCI_2\\": MENCI_1,\\n\\t\\t\\t\\t\\"status\\": status\\n\\t\\t\\t};\\n\\t\\t} else {\\n\\t\\t\\tvar MENCI_1 = menci(wbk1);\\n\\t\\t\\tvar MENCI_2 = menci(wbk2);\\n\\n\\t\\t\\tif (MENCI_1[\'alarmStatus\'] == 1 || MENCI_2[\'alarmStatus\'] == 1) {\\n\\t\\t\\t\\tstatus = 1;\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tstatus = 2;\\n\\t\\t\\t}\\n\\n\\t\\t\\tpoints = {\\n\\t\\t\\t\\t\\"OFFLINE\\": OFFLINE,\\n\\t\\t\\t\\t\\"VOL\\": VOL_point,\\n\\t\\t\\t\\t\\"SIGN\\": SIGN_point,\\n\\t\\t\\t\\t\\"MENCI_1\\": MENCI_1,\\n\\t\\t\\t\\t\\"MENCI_2\\": MENCI_2,\\n\\t\\t\\t\\t\\"status\\": status\\n\\t\\t\\t};\\n\\n\\t\\t}\\n\\n\\t} else if (deviceType == \'5\') {\\n\\t\\tif (wbc == \'1\') { //1外部触发 2,0设备触发\\n\\t\\t\\tstatus = 2;\\n\\t\\t\\tpoints = {\\n\\t\\t\\t\\t\\"OFFLINE\\": OFFLINE,\\n\\t\\t\\t\\t\\"VOL\\": VOL_point,\\n\\t\\t\\t\\t\\"WF\\": {\\n\\t\\t\\t\\t\\t\\"alarmType\\": \'正常\',\\n\\t\\t\\t\\t\\t\\"alarmStatus\\": 2,\\n\\t\\t\\t\\t\\t\\"alarmValue\\": 2\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\"SIGN\\": SIGN_point,\\n\\t\\t\\t\\t\\"status\\": status\\n\\t\\t\\t};\\n\\t\\t} else {\\n\\t\\t\\tvar wf = shuijing(wbk1);\\n\\t\\t\\tif (wf[\'alarmStatus\'] == 1) {\\n\\t\\t\\t\\tstatus = 1;\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tstatus = 2;\\n\\t\\t\\t}\\n\\t\\t\\tpoints = {\\n\\t\\t\\t\\t\\"OFFLINE\\": OFFLINE,\\n\\t\\t\\t\\t\\"VOL\\": VOL_point,\\n\\t\\t\\t\\t\\"WF\\": wf,\\n\\t\\t\\t\\t\\"SIGN\\": SIGN_point,\\n\\t\\t\\t\\t\\"status\\": status\\n\\t\\t\\t};\\n\\t\\t}\\n\\n\\t} else if (deviceType == \'2\' || deviceType == \'3\') {\\n\\n\\t\\tstatus = 2;\\n\\t\\tpoints = {\\n\\t\\t\\t\\"OFFLINE\\": OFFLINE,\\n\\t\\t\\t\\"VOL\\": VOL_point,\\n\\t\\t\\t\\"VALUE\\": VALUE_point,\\n\\t\\t\\t\\"SIGN\\": SIGN_point,\\n\\t\\t\\t\\"status\\": status\\n\\t\\t};\\n\\t} else {\\n\\t\\tpoints = {\\n\\t\\t\\t\\"OFFLINE\\": OFFLINE,\\n\\t\\t\\t\\"VOL\\": VOL_point,\\n\\t\\t\\t\\"VALUE\\": VALUE_point,\\n\\t\\t\\t\\"SIGN\\": SIGN_point,\\n\\t\\t\\t\\"status\\": status\\n\\t\\t};\\n\\t}\\n\\n\\t//redis中存储的离线时间数据\\n\\tvar baseJson = {\\n\\t\\t\\"isalarm\\": false,\\n\\t\\t\\"isguzhang\\": false\\n\\t};\\n\\t//将离线周期数据和测点总数据封装成一个对象 返回   flag ：是否是指令下发返回的响应数据\\n\\tvar obj = {\\n\\t\\t\\"offlineData\\": baseJson,\\n\\t\\t\\"points\\": points,\\n\\t\\t\\"iccid\\": iccid,\\n\\t\\t\\"flag\\": flag,\\n\\t\\t\\"offlineFlag\\": offlineFlag\\n\\t};\\n\\n\\treturn obj;\\n}\\n\\nfunction xfcMessage(fx) {\\n\\tvar fx_alarmType = \'防拆报警解除\';\\n\\tvar fx_alarmStatus = 2;\\n\\tif (fx == \'1\') {\\n\\t\\tfx_alarmType = \'防拆报警\';\\n\\t\\tfx_alarmStatus = 1;\\n\\t}\\n\\n\\treturn {\\n\\t\\t\\"alarmType\\": fx_alarmType,\\n\\t\\t\\"alarmStatus\\": fx_alarmStatus,\\n\\t\\t\\"alarmValue\\": fx_alarmStatus\\n\\t};\\n}\\n\\n/**\\n * 门磁\\n * @param sw\\n */\\nfunction menci(sw) {\\n\\tvar men_alarmType = \'闭合\';\\n\\tvar men_alarmStatus = 2;\\n\\tif (sw == \'1\') {\\n\\t\\tmen_alarmType = \'打开\';\\n\\t\\tmen_alarmStatus = 1;\\n\\t}\\n\\treturn {\\n\\t\\t\\"alarmType\\": men_alarmType,\\n\\t\\t\\"alarmStatus\\": men_alarmStatus,\\n\\t\\t\\"alarmValue\\": men_alarmStatus\\n\\t};\\n}", "main": "decode"}, "description": "--------------------------------------------------------------------------------------------------------------------------\\n测试报文1：\\n24242415100100E510000000B00A0A\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n测试报文2：\\n2424033886859105813621889861120240012109563001110e4f0006070700aa"}', '{"description": "--------------------------------------------------------------------------------------------------------------------------\\n测试报文1：\\n24242415100100E510000000B00A0A\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n测试报文2：\\n2424033886859105813621889861120240012109563001110e4f0006070700aa"}', 'report', 'status', 1, 2000, 1705312684229, 1705489962011),
	(1107, '库函数', '消防主机', '海康威视', 'JavaScript', 'device', '{"include": {"code": "/**1\\n * 用户自定义的函数：\\n * 注意，保持设备类型中的唯一性，设备类型级别的Script引擎，会自动装载include类型的各个操作方法\\n * 那么，其他真正的设备操作方法，就就可以引用它了\\n * /\\n\\n\\n\\n/**\\n * 用户自定义的函数1：注意，保持设备类型中的全局唯一性\\n */\\n/**\\nfunction func1(message)\\n{\\n}\\n */\\n\\n\\n/**\\n * 用户自定义的函数2：注意，保持设备类型中的全局唯一性\\n */\\n/**\\n function func2(message)\\n {\\n}\\n */\\n", "main": "include"}}', '{"description": "库函数"}', 'include', 'status', 1, 2000, 1705585341209, 1705585341209),
	(1108, '上传建筑消防设施系统状态', '消防主机', '海康威视', 'JavaScript', 'device', '{"decode": {"code": "/**\\n * 解码器的入口函数\\n * 全局参数：\\n *     fox_edge_data：json string格式 或者 hex string格式的接收数据\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   提供给通道的发送数据。根据不同的通道服务，它可能是HEX结构的文本，也可能是JSON结构的对象，请自行根据选定的通道服务进行确认\\n */\\nfunction decode() {\\n \\tvar object = decodeStr(fox_edge_data, fox_edge_param);\\n  return JSON.stringify(object);\\n}\\n\\n/**\\n* 事件解码器函数：消火栓按钮报火警\\n* 全局参数：\\n*     fox_edge_data：hex string格式的接收数据\\n*                    XXX+[合法报文]+XXX，合法报文可能混杂在一堆其他数据之中\\n*     fox_edge_param：json string格式的设备参数的合并对象\\n* 返回值：\\n*   必须是列表格式的JSON字符串，并且JSON对象必须包含关键字【recordType】，否则不给与入库\\n*/\\nfunction decodeStr(message, device_param) {\\n  var object = JSON.parse(message);\\n\\t\\n\\t// 检测：设备发送\\n\\tif(object.ctrlEntity.cmd != 2){\\n\\t\\treturn \'\';\\n\\t}\\n\\t// 检测：上传建筑消防设施部件运行状态\\n\\tif(object.aduEntity.type != 2){\\n\\t\\treturn \'\';\\n\\t}\\n\\t\\n\\tvar infObj = object.aduEntity.infObjEntities[0];\\n\\tvar sysType = getSysTypeName(infObj.sysType);\\n\\n  var result = {\\n    \\"sysType\\" : sysType\\n  }\\n\\t\\n\\n\\treturn result;\\n}", "main": "decode"}, "description": "测试报文：\\n4040360001012C230A1C0A15F6380C0000000000000000003000020201010000FB8A01000300020000000000000000000000000000000000000000000000000000000000002C230A1C0A155B2323\\n\\n上报信息：\\n{\\n\\t\\"ctrlEntity\\": {\\n\\t\\t\\"sn\\": 54,\\n\\t\\t\\"protocolVersion\\": \\"1.01\\",\\n\\t\\t\\"time\\": \\"2021-10-28 10:35:44\\",\\n\\t\\t\\"srcAddr\\": \\"F6380C000000\\",\\n\\t\\t\\"dstAddr\\": \\"000000000000\\",\\n\\t\\t\\"aduLength\\": 48,\\n\\t\\t\\"cmd\\": 2\\n\\t},\\n\\t\\"aduEntity\\": {\\n\\t\\t\\"type\\": 2,\\n\\t\\t\\"infObjEntities\\": [{\\n\\t\\t\\t\\"sysType\\": 1,\\n\\t\\t\\t\\"sysAddress\\": 0,\\n\\t\\t\\t\\"compType\\": 0,\\n\\t\\t\\t\\"compCirc\\": 35579,\\n\\t\\t\\t\\"compNode\\": 1,\\n\\t\\t\\t\\"compStatus\\": 3,\\n\\t\\t\\t\\"compDescription\\": \\"\\\\u0002\\",\\n\\t\\t\\t\\"time\\": \\"2021-10-28 10:35:44\\"\\n\\t\\t}]\\n\\t},\\n\\t\\"sn\\": 54\\n}"}', '{"description": "测试报文：\\n4040360001012C230A1C0A15F6380C0000000000000000003000020201010000FB8A01000300020000000000000000000000000000000000000000000000000000000000002C230A1C0A155B2323\\n\\n上报信息：\\n{\\n\\t\\"ctrlEntity\\": {\\n\\t\\t\\"sn\\": 54,\\n\\t\\t\\"protocolVersion\\": \\"1.01\\",\\n\\t\\t\\"time\\": \\"2021-10-28 10:35:44\\",\\n\\t\\t\\"srcAddr\\": \\"F6380C000000\\",\\n\\t\\t\\"dstAddr\\": \\"000000000000\\",\\n\\t\\t\\"aduLength\\": 48,\\n\\t\\t\\"cmd\\": 2\\n\\t},\\n\\t\\"aduEntity\\": {\\n\\t\\t\\"type\\": 2,\\n\\t\\t\\"infObjEntities\\": [{\\n\\t\\t\\t\\"sysType\\": 1,\\n\\t\\t\\t\\"sysAddress\\": 0,\\n\\t\\t\\t\\"compType\\": 0,\\n\\t\\t\\t\\"compCirc\\": 35579,\\n\\t\\t\\t\\"compNode\\": 1,\\n\\t\\t\\t\\"compStatus\\": 3,\\n\\t\\t\\t\\"compDescription\\": \\"\\\\u0002\\",\\n\\t\\t\\t\\"time\\": \\"2021-10-28 10:35:44\\"\\n\\t\\t}]\\n\\t},\\n\\t\\"sn\\": 54\\n}"}', 'report', 'status', 1, 2000, 1705585343320, 1705585343320),
	(1109, '查询系统监视状态', '海尔空调-YCJ-A000', '海尔集团公司', 'Java', 'device', '{}', '{}', 'exchange', 'status', 1, 2000, 1709213995306, 1709213995306),
	(1110, '控制', '海尔空调-YCJ-A000', '海尔集团公司', 'Java', 'device', '{}', '{}', 'exchange', 'status', 1, 2000, 1709213995375, 1709213995375),
	(1111, '查询控制状态监视', '海尔空调-YCJ-A000', '海尔集团公司', 'Java', 'device', '{}', '{}', 'exchange', 'status', 1, 2000, 1709213995398, 1709213995398),
	(1112, '设置运行状态', '柜式空调(KPRd)', 'TCL科技集团股份有限公司', 'Java', 'device', '{}', '{}', 'exchange', 'status', 1, 4000, 1711083152768, 1711083152768),
	(1113, '查询运行状态', '柜式空调(KPRd)', 'TCL科技集团股份有限公司', 'Java', 'device', '{}', '{}', 'exchange', 'status', 1, 4000, 1711083152812, 1711083152812),
	(1114, '用户开关空调', '柜式空调(KPRd)', 'TCL科技集团股份有限公司', 'Java', 'device', '{}', '{}', 'exchange', 'status', 1, 4000, 1711083152829, 1711083152829),
	(1115, '写数据', '空调控制器(U1)', '友邻技术有限公司', 'Java', 'device', '{}', '{}', 'exchange', 'status', 1, 2000, 1711597317870, 1711597317870),
	(1117, '读数据', '美的空调(Ver-3.2)', '美的空调', 'Java', 'device', '{}', '{}', 'exchange', 'status', 1, 2000, 1711597317902, 1711597317902),
	(1119, '读数据', '科龙空调(Ver-1.0)', '科龙空调有限公司', 'Java', 'device', '{}', '{}', 'exchange', 'status', 1, 2000, 1711597317918, 1711597317918),
	(1121, '写数据', '科龙空调(Ver-1.0)', '科龙空调有限公司', 'Java', 'device', '{}', '{}', 'report', 'status', 0, 0, 1711597317946, 1711597317946),
	(1122, '读数据', '美的空调(Ver-1.6)', '美的空调', 'Java', 'device', '{}', '{}', 'exchange', 'status', 1, 2000, 1711597317950, 1711597317950),
	(1123, '写数据', '美的空调(Ver-3.2)', '美的空调', 'Java', 'device', '{}', '{}', 'report', 'status', 0, 0, 1711597317965, 1711597317965),
	(1124, '读数据', '美的空调(Ver-3.2.1)', '美的空调', 'Java', 'device', '{}', '{}', 'exchange', 'status', 1, 2000, 1711597317965, 1711597317965),
	(1126, '读数据', '空调控制器(U1)', '友邻技术有限公司', 'Java', 'device', '{}', '{}', 'exchange', 'status', 1, 2000, 1711597317998, 1711597317998),
	(1127, '写数据', '美的空调(Ver-1.6)', '美的空调', 'Java', 'device', '{}', '{}', 'report', 'status', 0, 0, 1711597317998, 1711597317998),
	(1128, '写数据', '美的空调(Ver-3.2.1)', '美的空调', 'Java', 'device', '{}', '{}', 'report', 'status', 0, 0, 1711597318018, 1711597318018),
	(1132, '获取开关状态', '基站空调(V1.0D)', '广东海悟科技有限公司', 'Java', 'device', '{}', '{}', 'exchange', 'status', 1, 2000, 1711783520762, 1711783520762),
	(1133, '读取版本号', '基站空调(V1.00)', '广东海悟科技有限公司', 'Java', 'device', '{}', '{}', 'exchange', 'status', 1, 2000, 1711783520840, 1711783520840),
	(1134, '读取版本号', '基站空调(V2.00)', '广东海悟科技有限公司', 'Java', 'device', '{}', '{}', 'exchange', 'status', 1, 2000, 1711783520860, 1711783520860),
	(1135, '获取模拟量（定点数）', '基站空调(V1.0D)', '广东海悟科技有限公司', 'Java', 'device', '{}', '{}', 'exchange', 'status', 1, 2000, 1711783520885, 1711783520885),
	(1136, '获取系统参数（定点数）', '基站空调(V1.00)', '广东海悟科技有限公司', 'Java', 'device', '{}', '{}', 'exchange', 'status', 1, 2000, 1711783520937, 1711783520937),
	(1137, '获取开关状态', '基站空调(V2.00)', '广东海悟科技有限公司', 'Java', 'device', '{}', '{}', 'exchange', 'status', 1, 2000, 1711783520969, 1711783520969),
	(1138, '获取开关状态', '基站空调(V1.00)', '广东海悟科技有限公司', 'Java', 'device', '{}', '{}', 'exchange', 'status', 1, 2000, 1711783521021, 1711783521021),
	(1139, '获取厂家信息', '基站空调(V1.00)', '广东海悟科技有限公司', 'Java', 'device', '{}', '{}', 'exchange', 'status', 1, 2000, 1711783521090, 1711783521090),
	(1140, '获取厂家信息', '基站空调(V2.00)', '广东海悟科技有限公司', 'Java', 'device', '{}', '{}', 'exchange', 'status', 1, 2000, 1711783521113, 1711783521113),
	(1141, '设定系统参数（定点数）', '基站空调(V1.00)', '广东海悟科技有限公司', 'Java', 'device', '{}', '{}', 'exchange', 'status', 1, 2000, 1711783521133, 1711783521133),
	(1142, '设定系统参数（定点数）', '基站空调(V2.00)', '广东海悟科技有限公司', 'Java', 'device', '{}', '{}', 'exchange', 'status', 1, 2000, 1711783521157, 1711783521157),
	(1143, '获取模拟量（定点数）', '基站空调(V1.00)', '广东海悟科技有限公司', 'Java', 'device', '{}', '{}', 'exchange', 'status', 1, 2000, 1711783521177, 1711783521177),
	(1144, '遥控关机', '基站空调(V1.0D)', '广东海悟科技有限公司', 'Java', 'device', '{}', '{}', 'exchange', 'status', 1, 2000, 1711783521200, 1711783521200),
	(1145, '读取版本号', '基站空调(V1.0D)', '广东海悟科技有限公司', 'Java', 'device', '{}', '{}', 'exchange', 'status', 1, 2000, 1711783521231, 1711783521231),
	(1146, '获取系统参数（定点数）', '基站空调(V1.0D)', '广东海悟科技有限公司', 'Java', 'device', '{}', '{}', 'exchange', 'status', 1, 2000, 1711783521247, 1711783521247),
	(1147, '获取告警状态', '基站空调(V1.0D)', '广东海悟科技有限公司', 'Java', 'device', '{}', '{}', 'exchange', 'status', 1, 2000, 1711783521271, 1711783521271),
	(1148, '遥控开机', '基站空调(V1.0D)', '广东海悟科技有限公司', 'Java', 'device', '{}', '{}', 'exchange', 'status', 1, 2000, 1711783521290, 1711783521290),
	(1149, '获取时间', '基站空调(V1.0D)', '广东海悟科技有限公司', 'Java', 'device', '{}', '{}', 'exchange', 'status', 1, 2000, 1711783521321, 1711783521321),
	(1150, '遥控开机', '基站空调(V1.00)', '广东海悟科技有限公司', 'Java', 'device', '{}', '{}', 'exchange', 'status', 1, 2000, 1711783521339, 1711783521339),
	(1151, '获取时间', '基站空调(V1.00)', '广东海悟科技有限公司', 'Java', 'device', '{}', '{}', 'exchange', 'status', 1, 2000, 1711783521370, 1711783521370),
	(1152, '获取告警状态', '基站空调(V1.00)', '广东海悟科技有限公司', 'Java', 'device', '{}', '{}', 'exchange', 'status', 1, 2000, 1711783521403, 1711783521403),
	(1153, '获取厂家信息', '基站空调(V1.0D)', '广东海悟科技有限公司', 'Java', 'device', '{}', '{}', 'exchange', 'status', 1, 2000, 1711783521428, 1711783521428),
	(1154, '获取告警状态', '基站空调(V2.00)', '广东海悟科技有限公司', 'Java', 'device', '{}', '{}', 'exchange', 'status', 1, 2000, 1711783521444, 1711783521444),
	(1155, '获取模拟量（定点数）', '基站空调(V2.00)', '广东海悟科技有限公司', 'Java', 'device', '{}', '{}', 'exchange', 'status', 1, 2000, 1711783521472, 1711783521472),
	(1156, '获取时间', '基站空调(V2.00)', '广东海悟科技有限公司', 'Java', 'device', '{}', '{}', 'exchange', 'status', 1, 2000, 1711783521562, 1711783521562),
	(1157, '遥控开机', '基站空调(V2.00)', '广东海悟科技有限公司', 'Java', 'device', '{}', '{}', 'exchange', 'status', 1, 2000, 1711783521619, 1711783521619),
	(1158, '获取系统参数（定点数）', '基站空调(V2.00)', '广东海悟科技有限公司', 'Java', 'device', '{}', '{}', 'exchange', 'status', 1, 2000, 1711783521680, 1711783521680),
	(1159, '遥控关机', '基站空调(V1.00)', '广东海悟科技有限公司', 'Java', 'device', '{}', '{}', 'exchange', 'status', 1, 2000, 1711783521736, 1711783521736),
	(1160, '遥控关机', '基站空调(V2.00)', '广东海悟科技有限公司', 'Java', 'device', '{}', '{}', 'exchange', 'status', 1, 2000, 1711783521799, 1711783521799),
	(1161, '设定系统参数（定点数）', '基站空调(V1.0D)', '广东海悟科技有限公司', 'Java', 'device', '{}', '{}', 'exchange', 'status', 1, 2000, 1711783521830, 1711783521830),
	(1162, '获取开关状态', '基站空调(V2.00)', '美的集团股份有限公司', 'Java', 'device', '{}', '{}', 'exchange', 'status', 1, 2000, 1712491196657, 1712491196657),
	(1163, '获取告警状态', '基站空调(V2.00)', '美的集团股份有限公司', 'Java', 'device', '{}', '{}', 'exchange', 'status', 1, 2000, 1712491196700, 1712491196700),
	(1164, '获取系统参数（定点数）', '基站空调(V2.00)', '美的集团股份有限公司', 'Java', 'device', '{}', '{}', 'exchange', 'status', 1, 2000, 1712491196713, 1712491196713),
	(1165, '读取版本号', '基站空调(V2.00)', '美的集团股份有限公司', 'Java', 'device', '{}', '{}', 'exchange', 'status', 1, 2000, 1712491196725, 1712491196725),
	(1166, '设定系统参数（定点数）', '基站空调(V2.00)', '美的集团股份有限公司', 'Java', 'device', '{}', '{}', 'exchange', 'status', 1, 2000, 1712491196740, 1712491196740),
	(1167, '获取模拟量（定点数）', '基站空调(V2.00)', '美的集团股份有限公司', 'Java', 'device', '{}', '{}', 'exchange', 'status', 1, 2000, 1712491196759, 1712491196759),
	(1168, '获取厂家信息', '基站空调(V2.00)', '美的集团股份有限公司', 'Java', 'device', '{}', '{}', 'exchange', 'status', 1, 2000, 1712491196775, 1712491196775),
	(1169, '获取时间', '基站空调(V2.00)', '美的集团股份有限公司', 'Java', 'device', '{}', '{}', 'exchange', 'status', 1, 2000, 1712491196811, 1712491196811),
	(1170, '遥控关机', '基站空调(V2.00)', '美的集团股份有限公司', 'Java', 'device', '{}', '{}', 'exchange', 'status', 1, 2000, 1712491196824, 1712491196824),
	(1171, '遥控开机', '基站空调(V2.00)', '美的集团股份有限公司', 'Java', 'device', '{}', '{}', 'exchange', 'status', 1, 2000, 1712491196846, 1712491196846),
	(1172, 'splitHandler', 'JB-QB-GST200', '海湾安全技术有限公司', 'JavaScript', 'channel', '{"decode":{"main":"decode","code":"/**\\n* 编码器的入口函数\\n* 全局参数：\\n*     message：hex string格式的接收数据\\n*              XX+[合法报文]+XXX，合法报文可能混杂在一堆其他数据之中\\n* 返回值：\\n*   从XXX+[合法报文]+XXX中，截取到的[合法报文]\\n*/\\nfunction decode(message) {\\n\\tvar starTag = \\"\\";\\n\\tvar endTag = \\"7F 0E 10 0D\\";\\n\\n\\t// 剔除空格\\n\\tmessage = message.replace(/\\\\s+/g, \'\');\\n\\tstarTag = starTag.replace(/\\\\s+/g, \'\');\\n\\tendTag = endTag.replace(/\\\\s+/g, \'\');\\n\\n\\t// 转换成大写\\n\\tmessage = message.toUpperCase();\\n\\n\\t// 寻找起始标记\\n\\tvar start = indexOfStartTags(message, starTag);\\n\\tif (start < 0) {\\n\\t\\treturn \\"\\";\\n\\t}\\n\\n\\t// 寻找结束符\\n\\tvar end = message.indexOf(endTag, end + endTag.length);\\n\\tif (end < 0) {\\n\\t\\treturn \\"\\";\\n\\t}\\n\\n\\t// 截取数据\\n\\tvar result = message.substring(start, end + endTag.length);\\n\\n\\treturn result;\\n}\\n\\nfunction indexOfStartTags(message) {\\n\\tvar starTag = \\"\\";\\n\\tvar start = 0;\\n\\t//Private Function =========================================================================\\n\\t//reset ------\\n\\t//const uint8_t _GST200_TypeRst[74] =\\n\\t//{\\n\\tstarTag = \\"09 08 0F 20 20 10 0C 03 FA AA AA AA AA AA AA FA 03 02 00 00 80 40 20 F8 07 10 D0 10 11 16 10 10 D8 10 00 00 0D\\";\\n\\tstarTag += \\"09 08 0F 20 00 20 90 88 86 47 2A 12 12 2A 46 42 80 80 80 00 00 00 00 FF 20 20 20 23 2C 20 38 27 20 30 20 00 0D\\";\\n\\t//};\\n\\tstart = indexOf(message, starTag);\\n\\tif (start >= 0) {\\n\\t\\treturn start;\\n\\t}\\n\\n\\t//fire -------\\n\\t//const uint8_t _GST200_TypeFire[74] =\\n\\t//{\\n\\tstarTag = \\"09 08 0F 20 00 00 80 70 00 00 00 FF 00 80 40 20 30 00 00 00 80 92 8A BF AA BB CA FA 84 A7 AA 92 AE E2 A0 00 0D\\";\\n\\tstarTag += \\"09 08 0F 20 00 81 40 20 10 0C 03 00 03 0C 10 20 40 C0 40 00 00 00 00 EA AA AA AA AA AA AA AA EA 00 00 00 00 0D\\";\\n\\t//};\\n\\tstart = indexOf(message, starTag);\\n\\tif (start >= 0) {\\n\\t\\treturn start;\\n\\t}\\n\\n\\t//fault ------\\n\\t//const uint8_t _GST200_TypeFault[74] =\\n\\t//{\\n\\tstarTag = \\"09 08 0F 20 10 10 10 FF 10 18 50 20 D0 1F 10 10 F0 18 10 00 00 FE 22 5A 86 10 D2 56 5A 53 5A 56 F2 58 10 00 0D\\";\\n\\tstarTag += \\"09 08 0F 20 00 7F 21 21 21 7F 80 80 43 24 18 24 43 C0 40 00 00 FF 04 08 17 10 17 15 15 FD 15 15 17 10 10 00 0D\\";\\n\\t//};\\n\\tstart = indexOf(message, starTag);\\n\\tif (start >= 0) {\\n\\t\\treturn start;\\n\\t}\\n\\n\\t//act --------\\n\\t//const uint8_t _GST200_TypeAct[74] =\\n\\t//{\\n\\tstarTag = \\"09 08 0F 20 00 00 00 FC 44 44 44 45 46 44 44 44 44 7E 04 00 20 24 24 E4 26 34 20 10 10 FF 10 10 10 F8 10 00 0D\\";\\n\\tstarTag += \\"09 08 0F 20 40 20 18 07 FE 42 42 42 42 42 42 42 42 FF 02 00 08 1C 0B 08 08 8A 4C 30 0C 03 40 80 40 3F 00 00 0D\\";\\n\\t//};\\n\\tstart = indexOf(message, starTag);\\n\\tif (start >= 0) {\\n\\t\\treturn start;\\n\\t}\\n\\n\\t//feedback ---\\n\\t//const uint8_t _GST200_TypeFeedBack[74] =\\n\\t//{\\n\\tstarTag = \\"09 08 0F 20 00 00 FC 24 24 E4 24 24 24 22 22 A3 62 00 00 00 40 30 8F 28 58 40 5C 54 54 7F 54 54 DE 44 40 00 0D\\";\\n\\tstarTag += \\"09 08 0F 20 40 30 0F 80 80 40 23 14 08 14 22 21 40 C0 40 00 00 00 7F 20 10 80 9F 41 21 1D 21 21 5F C1 00 00 0D\\";\\n\\t//};\\n\\tstart = indexOf(message, starTag);\\n\\tif (start >= 0) {\\n\\t\\treturn start;\\n\\t}\\n\\n\\treturn - 1;\\n}\\n\\nfunction indexOf(message, tag) {\\n\\tvar txt = tag.replace(/\\\\s+/g, \'\');\\n\\ttxt = txt.toUpperCase();\\n\\n\\treturn message.indexOf(txt);\\n}"}}', '{"description":"报文格式：\\n以前两行内容为开始\\n09 08 0F 20 20 10 0C 03 FA AA AA AA AA AA AA FA 03 02 00 00 80 40 20 F8 07 10 D0 10 11 16 10 10 D8 10 00 00 0D \\n09 08 0F 20 00 20 90 88 86 47 2A 12 12 2A 46 42 80 80 80 00 00 00 00 FF 20 20 20 23 2C 20 38 27 20 30 20 00 0D \\n\\n以结束行为结束：\\n7F 0E 10 0D\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n测试报文1：\\n09 08 0F 20 20 10 0C 03 FA AA AA AA AA AA AA FA 03 02 00 00 80 40 20 F8 07 10 D0 10 11 16 10 10 D8 10 00 00 0D 09 08 0F 20 00 20 90 88 86 47 2A 12 12 2A 46 42 80 80 80 00 00 00 00 FF 20 20 20 23 2C 20 38 27 20 30 20 00 0D 30 38 8D 30 32 8E 02 31 34 3A 31 36 0D 4E 4F 02 30 30 30 30 30 31 20 20 02 0D 09 08 0F 30 10 10 10 FF 90 50 0C 44 24 15 06 14 24 54 0C 00 40 60 5E 48 48 FF 48 4C 68 40 F8 00 00 FF 00 00 80 80 9F 91 91 91 9F E0 9F 91 B1 D1 9F C0 80 00 0D 09 08 0F 30 02 42 81 7F 00 40 42 42 42 42 7E 42 43 62 40 00 00 00 3F 01 01 FF 11 21 1F 00 07 40 80 7F 00 00 08 08 FC 8C 8A 8A F9 00 F9 8A 8A 8C FC 08 08 00 0D 7F 0E 10 0D\\n"}', 'splitHandler', 'status', 1, 2000, 1712728967664, 1712933526100),
	(1174, '复位', 'JB-QB-GST200', '海湾安全技术有限公司', 'JavaScript', 'device', '{"decode":{"main":"decode","code":"/**\\n * 解码器的入口函数\\n * 全局参数：\\n *     fox_edge_data：json string格式 或者 hex string格式的接收数据\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   提供给通道的发送数据。根据不同的通道服务，它可能是HEX结构的文本，也可能是JSON结构的对象，请自行根据选定的通道服务进行确认\\n */\\nfunction decode() {\\n\\tvar object = decodeStr(fox_edge_data, fox_edge_param);\\n  return JSON.stringify(object);\\n}\\n\\n/**\\n* 事件解码器函数：消火栓按钮报火警\\n* 全局参数：\\n*     fox_edge_data：hex string格式的接收数据\\n*                    XXX+[合法报文]+XXX，合法报文可能混杂在一堆其他数据之中\\n*     fox_edge_param：json string格式的设备参数的合并对象\\n* 返回值：\\n*   必须是列表格式的JSON字符串，并且JSON对象必须包含关键字【recordType】，否则不给与入库\\n*/\\nfunction decodeStr(message, device_param) {\\n\\tvar starTag = \\"\\";\\n\\tstarTag  = \\"09 08 0F 20 20 10 0C 03 FA AA AA AA AA AA AA FA 03 02 00 00 80 40 20 F8 07 10 D0 10 11 16 10 10 D8 10 00 00 0D\\";\\n\\tstarTag += \\"09 08 0F 20 00 20 90 88 86 47 2A 12 12 2A 46 42 80 80 80 00 00 00 00 FF 20 20 20 23 2C 20 38 27 20 30 20 00 0D\\";\\n\\t\\n\\tvar endTag = \\"7F 0E 10 0D\\";\\n\\t\\n\\t// 剔除空格\\n\\tmessage = message.replace(/\\\\s+/g, \'\');\\n\\tstarTag = starTag.replace(/\\\\s+/g, \'\');\\n\\tendTag = endTag.replace(/\\\\s+/g, \'\');\\n\\t\\n\\n\\t// 转换成大写\\n\\tmessage = message.toUpperCase();\\n\\n\\t// 寻找起始标记\\n\\tvar start = message.indexOf(starTag);\\n\\tif (start < 0) {\\n\\t\\treturn \\"\\";\\n\\t}\\n  \\n\\n\\t// 必须包含recordType字段，用来指明事件的类型\\n\\tvar obj = {\\n    \\"recordType\\": \\"\\t复位\\"\\n\\t};\\n\\n  // 必须以列表格式返回\\n\\tvar result = new Array();\\n\\tresult.push(obj);\\n\\t\\n\\treturn result;\\n}"}}', '{"description":"报文格式：\\n以前两行内容为开始\\n09 08 0F 20 20 10 0C 03 FA AA AA AA AA AA AA FA 03 02 00 00 80 40 20 F8 07 10 D0 10 11 16 10 10 D8 10 00 00 0D \\n09 08 0F 20 00 20 90 88 86 47 2A 12 12 2A 46 42 80 80 80 00 00 00 00 FF 20 20 20 23 2C 20 38 27 20 30 20 00 0D \\n\\n以结束行为结束：\\n7F 0E 10 0D\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n测试报文1：\\n09 08 0F 20 20 10 0C 03 FA AA AA AA AA AA AA FA 03 02 00 00 80 40 20 F8 07 10 D0 10 11 16 10 10 D8 10 00 00 0D 09 08 0F 20 00 20 90 88 86 47 2A 12 12 2A 46 42 80 80 80 00 00 00 00 FF 20 20 20 23 2C 20 38 27 20 30 20 00 0D 30 38 8D 30 32 8E 02 31 34 3A 31 36 0D 4E 4F 02 30 30 30 30 30 31 20 20 02 0D 09 08 0F 30 10 10 10 FF 90 50 0C 44 24 15 06 14 24 54 0C 00 40 60 5E 48 48 FF 48 4C 68 40 F8 00 00 FF 00 00 80 80 9F 91 91 91 9F E0 9F 91 B1 D1 9F C0 80 00 0D 09 08 0F 30 02 42 81 7F 00 40 42 42 42 42 7E 42 43 62 40 00 00 00 3F 01 01 FF 11 21 1F 00 07 40 80 7F 00 00 08 08 FC 8C 8A 8A F9 00 F9 8A 8A 8C FC 08 08 00 0D 7F 0E 10 0D\\n"}', 'report', 'record', 1, 2000, 1712729095709, 1712933778941),
	(1175, '火警', 'JB-QB-GST200', '海湾安全技术有限公司', 'JavaScript', 'device', '{"decode":{"main":"decode","code":"/**\\n * 解码器的入口函数\\n * 全局参数：\\n *     fox_edge_data：json string格式 或者 hex string格式的接收数据\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   提供给通道的发送数据。根据不同的通道服务，它可能是HEX结构的文本，也可能是JSON结构的对象，请自行根据选定的通道服务进行确认\\n */\\nfunction decode() {\\n\\tvar object = decodeStr(fox_edge_data, fox_edge_param);\\n\\treturn JSON.stringify(object);\\n}\\n\\n/**\\n* 事件解码器函数：消火栓按钮报火警\\n* 全局参数：\\n*     fox_edge_data：hex string格式的接收数据\\n*                    XXX+[合法报文]+XXX，合法报文可能混杂在一堆其他数据之中\\n*     fox_edge_param：json string格式的设备参数的合并对象\\n* 返回值：\\n*   必须是列表格式的JSON字符串，并且JSON对象必须包含关键字【recordType】，否则不给与入库\\n*/\\nfunction decodeStr(message, device_param) {\\n\\tvar starTag = \\"\\";\\n  starTag  = \\"09 08 0F 20 00 00 80 70 00 00 00 FF 00 80 40 20 30 00 00 00 80 92 8A BF AA BB CA FA 84 A7 AA 92 AE E2 A0 00 0D\\";\\n  starTag += \\"09 08 0F 20 00 81 40 20 10 0C 03 00 03 0C 10 20 40 C0 40 00 00 00 00 EA AA AA AA AA AA AA AA EA 00 00 00 00 0D\\";\\n\\n\\tvar endTag = \\"7F 0E 10 0D\\";\\n\\n\\t// 剔除空格\\n\\tmessage = message.replace(/\\\\s+/g, \'\');\\n\\tstarTag = starTag.replace(/\\\\s+/g, \'\');\\n\\tendTag = endTag.replace(/\\\\s+/g, \'\');\\n\\n\\t// 转换成大写\\n\\tmessage = message.toUpperCase();\\n\\n\\t// 寻找起始标记\\n\\tvar start = message.indexOf(starTag);\\n\\tif (start < 0) {\\n\\t\\treturn \\"1\\";\\n\\t}\\n\\n\\t// 寻找结束标记\\n\\tvar end = message.indexOf(endTag);\\n\\tif (end < 0) {\\n\\t\\treturn \\"2\\";\\n\\t}\\n\\n\\tmessage = message.substring(start + (74 + 13) * 2, end + endTag.length);\\n\\n\\tvar lineH = message.indexOf(\'4E4F\');\\n\\tvar lineE = message.indexOf(\'0D\') + \'0D\'.length;\\n\\n\\tif (lineH < 0 || lineE < 0) {\\n\\t\\treturn \\"3\\";\\n\\t}\\n\\n\\tmessage = message.substring(lineH, lineE);\\n\\tvar adrHex = message.substring(4 * 2, (4 + 4) * 2);\\n\\n\\tvar charCode = hexToString(adrHex);\\n\\tvar adr = charCode[3] * 0x01 + charCode[2] * 0x0100 + charCode[1] * 0x010000 + charCode[0] * 0x01000000;\\n\\n\\t// 必须包含recordType字段，用来指明事件的类型\\n\\tvar obj = {\\n\\t\\t\\"recordType\\": \\"火警\\",\\n\\t\\t\\"devAddr\\": adr\\n\\t};\\n\\n\\t// 必须以列表格式返回\\n\\tvar result = new Array();\\n\\tresult.push(obj);\\n\\n\\treturn result;\\n}\\n\\n/**\\n* 转换成文本\\n*/\\nfunction hexToString(hex) {\\n\\tvar result = \'\';\\n\\tfor (var i = 0; i < hex.length; i += 2) {\\n\\t\\tvar charCode = parseInt(hex.substr(i, 2), 16);\\n\\t\\tresult += String.fromCharCode(charCode);\\n\\t}\\n\\treturn result;\\n}"}}', '{"description":"报文格式：\\n以前两行内容为开始\\n09 08 0F 20 00 00 80 70 00 00 00 FF 00 80 40 20 30 00 00 00 80 92 8A BF AA BB CA FA 84 A7 AA 92 AE E2 A0 00 0D\\n09 08 0F 20 00 81 40 20 10 0C 03 00 03 0C 10 20 40 C0 40 00 00 00 00 EA AA AA AA AA AA AA AA EA 00 00 00 00 0D\\n\\n以结束行为结束：\\n7F 0E 10 0D\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n测试报文1：\\n火警\\n08月04日    14:01\\nNO   100060\\n手动按钮\\n\\t\\n09 08 0F 20 00 00 80 70 00 00 00 FF 00 80 40 20 30 00 00 00 80 92 8A BF AA BB CA FA 84 A7 AA 92 AE E2 A0 00 0D 09 08 0F 20 00 81 40 20 10 0C 03 00 03 0C 10 20 40 C0 40 00 00 00 00 EA AA AA AA AA AA AA AA EA 00 00 00 00 0D 30 38 8D 30 34 8E 02 31 34 3A 30 31 0D 4E 4F 02 31 30 30 30 36 30 20 20 02 0D 09 08 0F 40 00 04 24 24 24 24 24 FC 22 22 22 33 22 00 00 00 20 24 24 E4 26 34 20 10 10 FF 10 10 10 F8 10 00 10 10 90 FF 90 A0 98 88 88 E9 8A 88 88 A8 98 00 10 28 E7 24 24 82 82 FE 82 82 82 82 FF 02 00 00 0D 09 08 0F 40 02 02 02 02 02 42 82 7F 02 02 02 02 02 03 02 00 08 1C 0B 08 08 8A 4C 30 0C 03 40 80 40 3F 00 00 01 41 80 7F 00 00 80 84 4B 30 10 28 47 C0 00 00 01 01 3F 11 49 40 40 7F 40 40 40 40 7F 40 40 00 0D 09 08 0F 48 40 20 F8 47 44 D8 00 48 C8 7F 68 58 CC 68 40 00 10 22 64 0C 00 44 24 9C 44 3F 44 8C 16 34 00 00 00 F8 01 02 F6 10 12 12 12 12 FA 12 02 FF 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 0D 09 08 0F 48 00 00 FF 00 00 3F 12 09 FF 49 49 49 FF 01 00 00 04 04 FE 01 02 22 15 48 80 7F 00 08 15 33 01 00 00 FF 00 00 3F 11 11 11 11 11 3F 40 80 7F 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 0D 09 08 0F 08 00 00 00 00 00 00 00 00 0D 09 08 0F 08 00 00 00 00 00 00 00 00 0D 7F 0E 10 0D \\n\\n"}', 'report', 'record', 1, 2000, 1712729095709, 1712933795485),
	(1176, '故障', 'JB-QB-GST200', '海湾安全技术有限公司', 'JavaScript', 'device', '{"decode":{"main":"decode","code":"/**\\n * 解码器的入口函数\\n * 全局参数：\\n *     fox_edge_data：json string格式 或者 hex string格式的接收数据\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   提供给通道的发送数据。根据不同的通道服务，它可能是HEX结构的文本，也可能是JSON结构的对象，请自行根据选定的通道服务进行确认\\n */\\nfunction decode() {\\n\\tvar object = decodeStr(fox_edge_data, fox_edge_param);\\n\\treturn JSON.stringify(object);\\n}\\n\\n/**\\n* 事件解码器函数：消火栓按钮报火警\\n* 全局参数：\\n*     fox_edge_data：hex string格式的接收数据\\n*                    XXX+[合法报文]+XXX，合法报文可能混杂在一堆其他数据之中\\n*     fox_edge_param：json string格式的设备参数的合并对象\\n* 返回值：\\n*   必须是列表格式的JSON字符串，并且JSON对象必须包含关键字【recordType】，否则不给与入库\\n*/\\nfunction decodeStr(message, device_param) {\\n\\tvar starTag = \\"\\";\\n\\tstarTag = \\"09 08 0F 20 10 10 10 FF 10 18 50 20 D0 1F 10 10 F0 18 10 00 00 FE 22 5A 86 10 D2 56 5A 53 5A 56 F2 58 10 00 0D\\";\\n\\tstarTag += \\"09 08 0F 20 00 7F 21 21 21 7F 80 80 43 24 18 24 43 C0 40 00 00 FF 04 08 17 10 17 15 15 FD 15 15 17 10 10 00 0D\\";\\n\\n\\tvar endTag = \\"7F 0E 10 0D\\";\\n\\n\\t// 剔除空格\\n\\tmessage = message.replace(/\\\\s+/g, \'\');\\n\\tstarTag = starTag.replace(/\\\\s+/g, \'\');\\n\\tendTag = endTag.replace(/\\\\s+/g, \'\');\\n\\n\\t// 转换成大写\\n\\tmessage = message.toUpperCase();\\n\\n\\t// 寻找起始标记\\n\\tvar start = message.indexOf(starTag);\\n\\tif (start < 0) {\\n\\t\\treturn \\"\\";\\n\\t}\\n\\n\\t// 寻找结束标记\\n\\tvar end = message.indexOf(endTag);\\n\\tif (end < 0) {\\n\\t\\treturn \\"\\";\\n\\t}\\n\\n\\tmessage = message.substring(start + (74 + 13) * 2, end + endTag.length);\\n\\n\\tvar lineH = message.indexOf(\'4E4F\');\\n\\tvar lineE = message.indexOf(\'0D\') + \'0D\'.length;\\n\\n\\tif (lineH < 0 || lineE < 0) {\\n\\t\\treturn \\"\\";\\n\\t}\\n\\n\\tmessage = message.substring(lineH, lineE);\\n\\tvar adrHex = message.substring(4 * 2, (4 + 4) * 2);\\n\\n\\tvar charCode = hexToString(adrHex);\\n\\tvar adr = charCode[3] * 0x01 + charCode[2] * 0x0100 + charCode[1] * 0x010000 + charCode[0] * 0x01000000;\\n\\n\\t// 必须包含recordType字段，用来指明事件的类型\\n\\tvar obj = {\\n\\t\\t\\"recordType\\": \\"故障\\",\\n\\t\\t\\"devAddr\\": adr\\n\\t};\\n\\n\\t// 必须以列表格式返回\\n\\tvar result = new Array();\\n\\tresult.push(obj);\\n\\n\\treturn result;\\n}\\n\\n/**\\n* 转换成文本\\n*/\\nfunction hexToString(hex) {\\n\\tvar result = \'\';\\n\\tfor (var i = 0; i < hex.length; i += 2) {\\n\\t\\tvar charCode = parseInt(hex.substr(i, 2), 16);\\n\\t\\tresult += String.fromCharCode(charCode);\\n\\t}\\n\\treturn result;\\n}"}}', '{"description":"报文格式：\\n以前两行内容为开始\\n09 08 0F 20 10 10 10 FF 10 18 50 20 D0 1F 10 10 F0 18 10 00 00 FE 22 5A 86 10 D2 56 5A 53 5A 56 F2 58 10 00 0D\\n09 08 0F 20 00 7F 21 21 21 7F 80 80 43 24 18 24 43 C0 40 00 00 FF 04 08 17 10 17 15 15 FD 15 15 17 10 10 00 0D\\n\\n以结束行为结束：\\n7F 0E 10 0D\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n测试报文1：\\n故障\\n08月04日   14:22\\nNO    100060\\n手动按钮\\n\\t\\n09 08 0F 20 10 10 10 FF 10 18 50 20 D0 1F 10 10 F0 18 10 00 00 FE 22 5A 86 10 D2 56 5A 53 5A 56 F2 58 10 00 0D \\n09 08 0F 20 00 7F 21 21 21 7F 80 80 43 24 18 24 43 C0 40 00 00 FF 04 08 17 10 17 15 15 FD 15 15 17 10 10 00 0D \\n30 38 8D 30 34 8E 02 31 34 3A 33 32 0D \\n4E 4F 02 31 30 30 30 36 30 20 20 02 0D \\n\\n09 08 0F 40 00 04 24 24 24 24 24 FC 22 22 22 33 22 00 00 00 20 24 24 E4 26 34 20 10 10 FF 10 10 10 F8 10 00 10 10 90 FF 90 A0 98 88 88 E9 8A 88 88 A8 98 00 10 28 E7 24 24 82 82 FE 82 82 82 82 FF 02 00 00 0D 09 08 0F 40 02 02 02 02 02 42 82 7F 02 02 02 02 02 03 02 00 08 1C 0B 08 08 8A 4C 30 0C 03 40 80 40 3F 00 00 01 41 80 7F 00 00 80 84 4B 30 10 28 47 C0 00 00 01 01 3F 11 49 40 40 7F 40 40 40 40 7F 40 40 00 0D 09 08 0F 48 40 20 F8 47 44 D8 00 48 C8 7F 68 58 CC 68 40 00 10 22 64 0C 00 44 24 9C 44 3F 44 8C 16 34 00 00 00 F8 01 02 F6 10 12 12 12 12 FA 12 02 FF 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 0D 09 08 0F 48 00 00 FF 00 00 3F 12 09 FF 49 49 49 FF 01 00 00 04 04 FE 01 02 22 15 48 80 7F 00 08 15 33 01 00 00 FF 00 00 3F 11 11 11 11 11 3F 40 80 7F 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 0D 09 08 0F 08 00 00 00 00 00 00 00 00 0D 09 08 0F 08 00 00 00 00 00 00 00 00 0D 7F 0E 10 0D \\n\\n--------------------------------------------------------------------------------------------------------------------------\\n故障\\n08月04日   14:37\\nNO    200077\\n讯响器\\n\\t\\n09 08 0F 20 10 10 10 FF 10 18 50 20 D0 1F 10 10 F0 18 10 00 00 FE 22 5A 86 10 D2 56 5A 53 5A 56 F2 58 10 00 0D \\n09 08 0F 20 00 7F 21 21 21 7F 80 80 43 24 18 24 43 C0 40 00 00 FF 04 08 17 10 17 15 15 FD 15 15 17 10 10 00 0D \\n30 38 8D 30 34 8E 02 31 34 3A 33 37 0D \\n4E 4F 02 32 30 30 30 37 37 20 20 02 0D \\n\\n09 08 0F 30 40 42 44 CC 00 02 02 FA 02 82 02 FF 02 00 00 00 00 FC 04 04 FE 04 F8 08 CC 4A 49 C8 08 FC 08 00 80 80 9F 91 91 91 9F E0 9F 91 B1 D1 9F C0 80 00 0D 09 08 0F 30 00 00 00 7F 20 11 01 FF 01 01 01 0F 30 40 70 00 00 1F 08 08 1F 00 FF 00 0F 08 08 4F 80 7F 00 00 08 08 FC 8C 8A 8A F9 00 F9 8A 8A 8C FC 08 08 00 0D 09 08 0F 48 00 02 02 F2 92 92 92 FE 92 92 92 FA 13 02 00 00 10 62 04 4C 20 50 48 44 C3 44 68 50 20 60 20 00 00 42 24 10 FF 00 44 A4 24 3F 24 34 26 84 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 0D 09 08 0F 48 04 04 04 FF 04 04 04 07 04 44 84 7F 04 06 04 00 04 04 FE 01 22 12 4A 82 7F 02 0A 12 33 02 00 00 01 21 21 11 09 FD 43 21 0D 11 29 25 43 C1 41 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 0D 09 08 0F 08 00 00 00 00 00 00 00 00 0D 09 08 0F 08 00 00 00 00 00 00 00 00 0D 7F 0E 10 0D \\n\\n--------------------------------------------------------------------------------------------------------------------------\\n备电故障\\n09月02日 15：43\\nNO 000001 \\n控制器\\n\\n09 08 0F 20 10 10 10 FF 10 18 50 20 D0 1F 10 10 F0 18 10 00 00 FE 22 5A 86 10 D2 56 5A 53 5A 56 F2 58 10 00 0D 09 08 0F 20 00 7F 21 21 21 7F 80 80 43 24 18 24 43 C0 40 00 00 FF 04 08 17 10 17 15 15 FD 15 15 17 10 10 00 0D 30 39 8D 30 32 8E 02 31 35 3A 34 33 0D 4E 4F 02 30 30 30 30 30 31 20 20 02 0D 09 08 0F 30 00 00 90 88 44 4B 32 12 32 4A 46 82 80 80 80 00 00 F8 48 48 48 48 FF 48 48 48 48 FC 08 00 00 00 10 22 64 0C 80 FE 02 E2 A2 B2 AE A2 A2 F3 22 00 0D 09 08 0F 30 01 01 00 FF 49 49 49 7F 49 49 49 FF 00 01 00 00 00 07 02 02 02 02 3F 42 42 42 42 47 40 70 00 00 04 04 FE 41 30 0F 20 13 5A 82 7E 02 0A 13 30 00 0D 7F 0E 10 0D \\n"}', 'report', 'record', 1, 2000, 1712729095709, 1712933824512),
	(1177, '动作', 'JB-QB-GST200', '海湾安全技术有限公司', 'JavaScript', 'device', '{"decode":{"main":"decode","code":"/**\\n * 解码器的入口函数\\n * 全局参数：\\n *     fox_edge_data：json string格式 或者 hex string格式的接收数据\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   提供给通道的发送数据。根据不同的通道服务，它可能是HEX结构的文本，也可能是JSON结构的对象，请自行根据选定的通道服务进行确认\\n */\\nfunction decode() {\\n\\tvar object = decodeStr(fox_edge_data, fox_edge_param);\\n\\treturn JSON.stringify(object);\\n}\\n\\n/**\\n* 事件解码器函数：消火栓按钮报火警\\n* 全局参数：\\n*     fox_edge_data：hex string格式的接收数据\\n*                    XXX+[合法报文]+XXX，合法报文可能混杂在一堆其他数据之中\\n*     fox_edge_param：json string格式的设备参数的合并对象\\n* 返回值：\\n*   必须是列表格式的JSON字符串，并且JSON对象必须包含关键字【recordType】，否则不给与入库\\n*/\\nfunction decodeStr(message, device_param) {\\n\\tvar starTag = \\"\\";\\n  starTag  = \\"09 08 0F 20 00 00 00 FC 44 44 44 45 46 44 44 44 44 7E 04 00 20 24 24 E4 26 34 20 10 10 FF 10 10 10 F8 10 00 0D\\"; \\n  starTag += \\"09 08 0F 20 40 20 18 07 FE 42 42 42 42 42 42 42 42 FF 02 00 08 1C 0B 08 08 8A 4C 30 0C 03 40 80 40 3F 00 00 0D\\";\\n\\n\\tvar endTag = \\"7F 0E 10 0D\\";\\n\\n\\t// 剔除空格\\n\\tmessage = message.replace(/\\\\s+/g, \'\');\\n\\tstarTag = starTag.replace(/\\\\s+/g, \'\');\\n\\tendTag = endTag.replace(/\\\\s+/g, \'\');\\n\\n\\t// 转换成大写\\n\\tmessage = message.toUpperCase();\\n\\n\\t// 寻找起始标记\\n\\tvar start = message.indexOf(starTag);\\n\\tif (start < 0) {\\n\\t\\treturn \\"\\";\\n\\t}\\n\\n\\t// 寻找结束标记\\n\\tvar end = message.indexOf(endTag);\\n\\tif (end < 0) {\\n\\t\\treturn \\"\\";\\n\\t}\\n\\n\\tmessage = message.substring(start + (74 + 13) * 2, end + endTag.length);\\n\\n\\tvar lineH = message.indexOf(\'4E4F\');\\n\\tvar lineE = message.indexOf(\'0D\') + \'0D\'.length;\\n\\n\\tif (lineH < 0 || lineE < 0) {\\n\\t\\treturn \\"\\";\\n\\t}\\n\\n\\tmessage = message.substring(lineH, lineE);\\n\\tvar adrHex = message.substring(4 * 2, (4 + 4) * 2);\\n\\n\\tvar charCode = hexToString(adrHex);\\n\\tvar adr = charCode[3] * 0x01 + charCode[2] * 0x0100 + charCode[1] * 0x010000 + charCode[0] * 0x01000000;\\n\\n\\t// 必须包含recordType字段，用来指明事件的类型\\n\\tvar obj = {\\n\\t\\t\\"recordType\\": \\"动作\\",\\n\\t\\t\\"devAddr\\": adr\\n\\t};\\n\\n\\t// 必须以列表格式返回\\n\\tvar result = new Array();\\n\\tresult.push(obj);\\n\\n\\treturn result;\\n}\\n\\n/**\\n* 转换成文本\\n*/\\nfunction hexToString(hex) {\\n\\tvar result = \'\';\\n\\tfor (var i = 0; i < hex.length; i += 2) {\\n\\t\\tvar charCode = parseInt(hex.substr(i, 2), 16);\\n\\t\\tresult += String.fromCharCode(charCode);\\n\\t}\\n\\treturn result;\\n}"}}', '{"description":"报文格式：\\n以前两行内容为开始\\n09 08 0F 20 00 00 00 FC 44 44 44 45 46 44 44 44 44 7E 04 00 20 24 24 E4 26 34 20 10 10 FF 10 10 10 F8 10 00 0D\\n09 08 0F 20 40 20 18 07 FE 42 42 42 42 42 42 42 42 FF 02 00 08 1C 0B 08 08 8A 4C 30 0C 03 40 80 40 3F 00 00 0D\\n\\n以结束行为结束：\\n7F 0E 10 0D\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n测试报文1：\\n启动没反应\\n08月04日    15:02\\nNO   000300\\n气体启动\\n\\n09 08 0F 20 00 00 00 FC 44 44 44 45 46 44 44 44 44 7E 04 00 20 24 24 E4 26 34 20 10 10 FF 10 10 10 F8 10 00 0D 09 08 0F 20 40 20 18 07 FE 42 42 42 42 42 42 42 42 FF 02 00 08 1C 0B 08 08 8A 4C 30 0C 03 40 80 40 3F 00 00 0D 30 38 8D 30 34 8E 02 31 35 3A 30 32 0D 4E 4F 02 30 30 30 33 30 30 20 20 02 0D 09 08 0F 40 40 20 58 47 54 54 54 54 54 54 D4 14 06 04 00 00 40 20 F8 07 10 90 70 10 FF 10 70 90 18 10 00 00 00 00 00 FC 44 44 44 45 46 44 44 44 44 7E 04 00 20 24 24 E4 26 34 20 10 10 FF 10 10 10 F8 10 00 0D 09 08 0F 40 00 00 00 00 00 00 00 00 00 00 1F 20 40 80 70 00 00 00 FF 08 06 01 04 04 FF 04 04 01 06 0C 04 00 40 20 18 07 FE 42 42 42 42 42 42 42 42 FF 02 00 08 1C 0B 08 08 8A 4C 30 0C 03 40 80 40 3F 00 00 0D 7F 0E 10 0D \\n"}', 'report', 'record', 1, 2000, 1712729095709, 1712933809161),
	(1178, '反馈', 'JB-QB-GST200', '海湾安全技术有限公司', 'JavaScript', 'device', '{"decode":{"main":"decode","code":"/**\\n * 解码器的入口函数\\n * 全局参数：\\n *     fox_edge_data：json string格式 或者 hex string格式的接收数据\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   提供给通道的发送数据。根据不同的通道服务，它可能是HEX结构的文本，也可能是JSON结构的对象，请自行根据选定的通道服务进行确认\\n */\\nfunction decode() {\\n\\tvar object = decodeStr(fox_edge_data, fox_edge_param);\\n\\treturn JSON.stringify(object);\\n}\\n\\n/**\\n* 事件解码器函数：消火栓按钮报火警\\n* 全局参数：\\n*     fox_edge_data：hex string格式的接收数据\\n*                    XXX+[合法报文]+XXX，合法报文可能混杂在一堆其他数据之中\\n*     fox_edge_param：json string格式的设备参数的合并对象\\n* 返回值：\\n*   必须是列表格式的JSON字符串，并且JSON对象必须包含关键字【recordType】，否则不给与入库\\n*/\\nfunction decodeStr(message, device_param) {\\n\\tvar starTag = \\"\\";\\n  starTag  = \\"09 08 0F 20 00 00 FC 24 24 E4 24 24 24 22 22 A3 62 00 00 00 40 30 8F 28 58 40 5C 54 54 7F 54 54 DE 44 40 00 0D\\"; \\n  starTag += \\"09 08 0F 20 40 30 0F 80 80 40 23 14 08 14 22 21 40 C0 40 00 00 00 7F 20 10 80 9F 41 21 1D 21 21 5F C1 00 00 0D\\";\\n\\n\\tvar endTag = \\"7F 0E 10 0D\\";\\n\\n\\t// 剔除空格\\n\\tmessage = message.replace(/\\\\s+/g, \'\');\\n\\tstarTag = starTag.replace(/\\\\s+/g, \'\');\\n\\tendTag = endTag.replace(/\\\\s+/g, \'\');\\n\\n\\t// 转换成大写\\n\\tmessage = message.toUpperCase();\\n\\n\\t// 寻找起始标记\\n\\tvar start = message.indexOf(starTag);\\n\\tif (start < 0) {\\n\\t\\treturn \\"\\";\\n\\t}\\n\\n\\t// 寻找结束标记\\n\\tvar end = message.indexOf(endTag);\\n\\tif (end < 0) {\\n\\t\\treturn \\"\\";\\n\\t}\\n\\n\\tmessage = message.substring(start + (74 + 13) * 2, end + endTag.length);\\n\\n\\tvar lineH = message.indexOf(\'4E4F\');\\n\\tvar lineE = message.indexOf(\'0D\') + \'0D\'.length;\\n\\n\\tif (lineH < 0 || lineE < 0) {\\n\\t\\treturn \\"\\";\\n\\t}\\n\\n\\tmessage = message.substring(lineH, lineE);\\n\\tvar adrHex = message.substring(4 * 2, (4 + 4) * 2);\\n\\n\\tvar charCode = hexToString(adrHex);\\n\\tvar adr = charCode[3] * 0x01 + charCode[2] * 0x0100 + charCode[1] * 0x010000 + charCode[0] * 0x01000000;\\n\\n\\t// 必须包含recordType字段，用来指明事件的类型\\n\\tvar obj = {\\n\\t\\t\\"recordType\\": \\"反馈\\",\\n\\t\\t\\"devAddr\\": adr\\n\\t};\\n\\n\\t// 必须以列表格式返回\\n\\tvar result = new Array();\\n\\tresult.push(obj);\\n\\n\\treturn result;\\n}\\n\\n/**\\n* 转换成文本\\n*/\\nfunction hexToString(hex) {\\n\\tvar result = \'\';\\n\\tfor (var i = 0; i < hex.length; i += 2) {\\n\\t\\tvar charCode = parseInt(hex.substr(i, 2), 16);\\n\\t\\tresult += String.fromCharCode(charCode);\\n\\t}\\n\\treturn result;\\n}"}}', '{"description":"报文格式：\\n以前两行内容为开始\\n09 08 0F 20 00 00 FC 24 24 E4 24 24 24 22 22 A3 62 00 00 00 40 30 8F 28 58 40 5C 54 54 7F 54 54 DE 44 40 00 0D \\n09 08 0F 20 40 30 0F 80 80 40 23 14 08 14 22 21 40 C0 40 00 00 00 7F 20 10 80 9F 41 21 1D 21 21 5F C1 00 00 0D\\n\\n以结束行为结束：\\n7F 0E 10 0D\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n测试报文1：\\n反馈\\n08月04日  13:38\\nNO  300065\\n防火阀\\n涂装\\n\\n09 08 0F 20 00 00 FC 24 24 E4 24 24 24 22 22 A3 62 00 00 00 40 30 8F 28 58 40 5C 54 54 7F 54 54 DE 44 40 00 0D 09 08 0F 20 40 30 0F 80 80 40 23 14 08 14 22 21 40 C0 40 00 00 00 7F 20 10 80 9F 41 21 1D 21 21 5F C1 00 00 0D 30 38 8D 30 34 8E 02 31 33 3A 33 38 0D 4E 4F 02 33 30 30 30 36 35 20 20 02 0D 09 08 0F 30 00 FE 02 22 DA 16 10 10 F1 96 90 90 D0 98 10 00 00 00 80 70 00 00 00 FF 00 80 40 20 30 00 00 00 00 F8 01 86 E0 9A 82 FA 42 4A 52 42 02 FF 02 00 0D 09 08 0F 30 00 FF 08 10 08 87 40 30 0F 40 80 40 3F 00 00 00 00 81 40 20 10 0C 03 00 03 0C 10 20 40 C0 40 00 00 FF 01 00 7F 00 10 09 06 1A 21 30 80 FF 00 00 0D 09 08 0F 40 10 62 04 4C 20 50 48 44 C3 44 68 50 20 60 20 00 00 42 24 10 FF 00 44 A4 24 3F 24 34 26 84 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 0D 09 08 0F 40 04 04 FE 01 22 12 4A 82 7F 02 0A 12 33 02 00 00 01 21 21 11 09 FD 43 21 0D 11 29 25 43 C1 41 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 0D 09 08 0F 08 00 00 00 00 00 00 00 00 0D 09 08 0F 08 00 00 00 00 00 00 00 00 0D 7F 0E 10 0D \\n"}', 'report', 'record', 1, 2000, 1712729095709, 1712933837501),
	(1180, 'splitHandler', 'JB-QB-GST1500H', '海湾安全技术有限公司', 'JavaScript', 'channel', '{"decode":{"main":"decode","code":"/**\\n * 编码器的入口函数\\n * 全局参数：\\n *     message：hex string格式的接收数据\\n *              XX+[合法报文]+XXX，合法报文可能混杂在一堆其他数据之中\\n * 返回值：\\n *   从XXX+[合法报文]+XXX中，截取到的[合法报文]\\n */\\nfunction decode(message) {\\n    var starTag = \\"2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 0D\\";\\n    var endTag = \\"0D 0D \\";\\n\\n    message = message.replace(/\\\\s+/g, \\"\\");\\n    starTag = starTag.replace(/\\\\s+/g, \\"\\");\\n    endTag = endTag.replace(/\\\\s+/g, \\"\\");\\n\\n    // 转换成大写\\n    message = message.toUpperCase();\\n    starTag = starTag.toUpperCase();\\n    endTag = endTag.toUpperCase();\\n\\n    // 寻找起始标记\\n    var start = message.indexOf(starTag);\\n    if (start < 0) {\\n        return \\"\\";\\n    }\\n\\n    // 寻找第一个结束标记\\n    var end = message.indexOf(endTag);\\n    if (end < 0) {\\n        return \\"\\";\\n    }\\n\\n    // 寻找后续多行\\n    var lines = message.substring(start, message.length);\\n    for (var i = 0; i < 8; i++) {\\n        var next = lines.indexOf(starTag, end + 2);\\n        var pos = lines.indexOf(endTag, end + 2);\\n\\n        // 检查：是否还有下一行，或者出现了实际上的下一行换行符\\n        if (pos < 0 || pos > next) {\\n            break;\\n        }\\n\\n        end = pos;\\n    }\\n\\n    // 分拆数据\\n    var data = message.substring(start, end + endTag.length);\\n\\n\\n    // 截取数据\\n    var result = data;\\n\\n    return result;\\n}\\n"}}', '{"description":"报文格式：\\n以2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 0D开始，以0D 0D 字符结束的多行文本\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n测试报文1：\\n2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 0D 1C 26 0D C7 EB BC EC B2 E9 BF D8 D6 C6 C6 F7 D6 F7 B5 E7 D4 B4 0D 30 30 35 30 30 31 2D 30 30 30 20 20 BD BB C1 F7 B5 E7 D4 B4 0D B9 CA D5 CF 20 20 20 20 1C 2E 20 32 30 32 31 2D 31 32 2D 30 35 20 31 34 3A 30 31 3A 34 33 0D 0D \\n\\n报文内容：\\n-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\\n\\u001C&\\n请检查控制器主电源\\n005001-000  交流电源\\n故障    \\u001C. 2021-12-05 14:01:43\\n"}', 'splitHandler', 'status', 1, 2000, 1712750921257, 1712933218025),
	(1181, '故障', 'JB-QB-GST1500H', '海湾安全技术有限公司', 'JavaScript', 'device', '{"decode":{"main":"decode","code":"/**\\n * 解码器的入口函数\\n * 全局参数：\\n *     fox_edge_data：json string格式 或者 hex string格式的接收数据\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   提供给通道的发送数据。根据不同的通道服务，它可能是HEX结构的文本，也可能是JSON结构的对象，请自行根据选定的通道服务进行确认\\n */\\nfunction decode() {\\n\\tvar object = decodeStr(fox_edge_data, fox_edge_param);\\n  return JSON.stringify(object);\\n}\\n\\n/**\\n * 事件解码器函数：消火栓按钮报火警\\n * 全局参数：\\n *     fox_edge_data：hex string格式的接收数据\\n *                    XXX+[合法报文]+XXX，合法报文可能混杂在一堆其他数据之中\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   必须是列表格式的JSON字符串，并且JSON对象必须包含关键字【recordType】，否则不给与入库\\n */\\nfunction decodeStr(message, device_param) {\\n    //var message = \\"----------------------\\\\r\\\\n2023年11月26日 16时46分\\\\r\\\\n\\\\r\\\\n1/5 \\\\r\\\\n消火栓按钮报火警\\\\r\\\\n\\";\\n    var datas = message.split(\'\\\\r\');\\n    if (datas.length < 5) {\\n        return \\"行数小于5\\";\\n    }\\n\\n\\n    var head = datas[0];\\n    if (head.indexOf(\\"-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\\") < 0) {\\n        return \\"\\";\\n    }\\n\\n    var typeLine = datas[3];\\n    var faultLine = datas[4];\\n\\n    if (faultLine.indexOf(\\"故障\\") == 0 ){\\n        var items = typeLine.split(\\"  \\");\\n        if (items.length < 2) {\\n            return \\"格式不正确\\";\\n        }\\n\\n        var devAddr = items[0];\\n        var almInfo = items[1];\\n        var almTime = faultLine.substring(faultLine.indexOf(\\".\\")+1);\\n\\n        // 必须包含recordType字段，用来指明事件的类型\\n        var obj = {\\n            \\"recordType\\": \\"故障\\", almInfo: almInfo, \\"datetime\\": almTime, \\"devAddr\\": devAddr\\n        };\\n\\n        // 必须以列表格式返回\\n        var result = [];\\n        result.push(obj);\\n\\n        return result;\\n    }\\n\\n    \\n    return \\"\\";\\n}"}}', '{"description":"报文格式：\\n以2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 0D开始，以0D 0D 字符结束的多行文本\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n测试报文1：\\n2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 0D 1C 26 0D C7 EB BC EC B2 E9 BF D8 D6 C6 C6 F7 D6 F7 B5 E7 D4 B4 0D 30 30 35 30 30 31 2D 30 30 30 20 20 BD BB C1 F7 B5 E7 D4 B4 0D B9 CA D5 CF 20 20 20 20 1C 2E 20 32 30 32 31 2D 31 32 2D 30 35 20 31 34 3A 30 31 3A 34 33 0D 0D \\n\\n报文内容：\\n-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\\n\\u001C&\\n请检查控制器主电源\\n005001-000  交流电源\\n故障    \\u001C. 2021-12-05 14:01:43\\n"}', 'report', 'record', 1, 2000, 1712752115335, 1712758075472),
	(1182, '用户操作', 'JB-QB-GST1500H', '海湾安全技术有限公司', 'JavaScript', 'device', '{"decode":{"main":"decode","code":"/**\\n * 解码器的入口函数\\n * 全局参数：\\n *     fox_edge_data：json string格式 或者 hex string格式的接收数据\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   提供给通道的发送数据。根据不同的通道服务，它可能是HEX结构的文本，也可能是JSON结构的对象，请自行根据选定的通道服务进行确认\\n */\\nfunction decode() {\\n\\tvar object = decodeStr(fox_edge_data, fox_edge_param);\\n  return JSON.stringify(object);\\n}\\n\\n/**\\n * 事件解码器函数：消火栓按钮报火警\\n * 全局参数：\\n *     fox_edge_data：hex string格式的接收数据\\n *                    XXX+[合法报文]+XXX，合法报文可能混杂在一堆其他数据之中\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   必须是列表格式的JSON字符串，并且JSON对象必须包含关键字【recordType】，否则不给与入库\\n */\\nfunction decodeStr(message, device_param) {\\n    //var message = \\"----------------------\\\\r\\\\n2023年11月26日 16时46分\\\\r\\\\n\\\\r\\\\n1/5 \\\\r\\\\n消火栓按钮报火警\\\\r\\\\n\\";\\n    var datas = message.split(\'\\\\r\');\\n    if (datas.length < 4) {\\n        return \\"行数小于4\\";\\n    }\\n\\n\\n    var head = datas[0];\\n    if (head.indexOf(\\"-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\\") < 0) {\\n        return \\"\\";\\n    }\\n\\n    var typeLine = datas[2];\\n    var faultLine = datas[3];\\n\\n    if (faultLine.indexOf(\\"用户操作\\") == 0 && typeLine.indexOf(\\"复位操作\\") >= 0 ){\\n        var items = typeLine.split(\\"  \\");\\n        if (items.length < 2) {\\n            return \\"格式不正确\\";\\n        }\\n\\n        var devAddr = items[0];\\n        var almInfo = items[1];\\n        var almTime = faultLine.substring(faultLine.indexOf(\\".\\")+1);\\n\\n        devAddr = devAddr.replace(/\\\\s+/g, \'\');\\n\\n        // 必须包含recordType字段，用来指明事件的类型\\n        var obj = {\\n            \\"recordType\\": \\"用户操作\\", \\"almInfo\\": almInfo, \\"datetime\\": almTime, \\"devAddr\\": devAddr\\n        };\\n\\n        // 必须以列表格式返回\\n        var result = [];\\n        result.push(obj);\\n\\n        return result;\\n    }\\n\\n    return \\"\\";\\n}"}}', '{"description":"报文格式：\\n以2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 0D开始，以0D 0D 字符结束的多行文本\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n测试报文1：\\n2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 0D 1C 26 0D 39 39 39 39 39 39 2D 30 30 35 20 20 B8 B4 CE BB B2 D9 D7 F7 0D D3 C3 BB A7 B2 D9 D7 F7 1C 2E 20 32 30 32 31 2D 31 32 2D 30 35 20 31 34 3A 32 35 3A 32 32 0D 0D\\n\\n报文内容：\\n-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\\n\\u001C&\\n999999-005  复位操作\\n用户操作\\u001C. 2021-12-05 14:25:22\\n\\n"}', 'report', 'record', 1, 2000, 1712753749164, 1712828787782),
	(1183, '火警', 'JB-QB-GST1500H', '海湾安全技术有限公司', 'JavaScript', 'device', '{"decode":{"main":"decode","code":"/**\\n * 解码器的入口函数\\n * 全局参数：\\n *     fox_edge_data：json string格式 或者 hex string格式的接收数据\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   提供给通道的发送数据。根据不同的通道服务，它可能是HEX结构的文本，也可能是JSON结构的对象，请自行根据选定的通道服务进行确认\\n */\\nfunction decode() {\\n\\tvar object = decodeStr(fox_edge_data, fox_edge_param);\\n  return JSON.stringify(object);\\n}\\n\\n/**\\n * 事件解码器函数：消火栓按钮报火警\\n * 全局参数：\\n *     fox_edge_data：hex string格式的接收数据\\n *                    XXX+[合法报文]+XXX，合法报文可能混杂在一堆其他数据之中\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   必须是列表格式的JSON字符串，并且JSON对象必须包含关键字【recordType】，否则不给与入库\\n */\\nfunction decodeStr(message, device_param) {\\n    //var message = \\"----------------------\\\\r\\\\n2023年11月26日 16时46分\\\\r\\\\n\\\\r\\\\n1/5 \\\\r\\\\n消火栓按钮报火警\\\\r\\\\n\\";\\n    var datas = message.split(\'\\\\r\');\\n    if (datas.length < 6) {\\n        return \\"行数小于6\\";\\n    }\\n\\n\\n    var head = datas[0];\\n    if (head.indexOf(\\"-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\\") < 0) {\\n        return \\"\\";\\n    }\\n\\n    var typeLine = datas[4];\\n    var faultLine = datas[5];\\n\\n    if (faultLine.indexOf(\\"火警\\") == 0){\\n        var items = typeLine.split(\\"  \\");\\n        if (items.length < 2) {\\n            return \\"格式不正确\\";\\n        }\\n\\n        var devAddr = items[0];\\n        var almInfo = items[1];\\n        var almTime = faultLine.substring(faultLine.indexOf(\\".\\")+1);\\n\\n        devAddr = devAddr.replace(/\\\\s+/g, \'\');\\n\\n        // 必须包含recordType字段，用来指明事件的类型\\n        var obj = {\\n            \\"recordType\\": \\"火警\\", \\"almInfo\\": almInfo, \\"datetime\\": almTime, \\"devAddr\\": devAddr\\n        };\\n\\n        // 必须以列表格式返回\\n        var result = [];\\n        result.push(obj);\\n\\n        return result;\\n    }\\n\\n    return \\"\\";\\n}"}}', '{"description":"报文格式：\\n以2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 0D开始，以0D 0D 字符结束的多行文本\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n测试报文1：\\n2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 0D 1C 26 0D 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 0D 38 33 31 B3 A7 B7 BF 31 23 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 0D 35 34 31 30 32 33 2D 30 32 33 20 20 B9 E2 CA F8 B8 D0 D1 CC 0D BB F0 BE AF 20 20 20 20 1C 2E 20 32 30 32 31 2D 31 32 2D 30 35 20 31 33 3A 35 30 3A 34 37 0D 0D\\n\\n报文内容：\\n-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\\n\\u001C&\\n                \\n831厂房1#               \\n541023-023  光束感烟\\n火警    \\u001C. 2021-12-05 13:50:47\\n\\n"}', 'report', 'record', 1, 2000, 1712755093825, 1712758082626),
	(1184, '启动操作', 'JB-QB-GST1500H', '海湾安全技术有限公司', 'JavaScript', 'device', '{"decode":{"main":"decode","code":"/**\\n * 解码器的入口函数\\n * 全局参数：\\n *     fox_edge_data：json string格式 或者 hex string格式的接收数据\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   提供给通道的发送数据。根据不同的通道服务，它可能是HEX结构的文本，也可能是JSON结构的对象，请自行根据选定的通道服务进行确认\\n */\\nfunction decode() {\\n\\tvar object = decodeStr(fox_edge_data, fox_edge_param);\\n  return JSON.stringify(object);\\n}\\n\\n/**\\n * 事件解码器函数：消火栓按钮报火警\\n * 全局参数：\\n *     fox_edge_data：hex string格式的接收数据\\n *                    XXX+[合法报文]+XXX，合法报文可能混杂在一堆其他数据之中\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   必须是列表格式的JSON字符串，并且JSON对象必须包含关键字【recordType】，否则不给与入库\\n */\\nfunction decodeStr(message, device_param) {\\n    //var message = \\"----------------------\\\\r\\\\n2023年11月26日 16时46分\\\\r\\\\n\\\\r\\\\n1/5 \\\\r\\\\n消火栓按钮报火警\\\\r\\\\n\\";\\n    var datas = message.split(\'\\\\r\');\\n    if (datas.length < 6) {\\n        return \\"行数小于6\\";\\n    }\\n\\n\\n    var head = datas[0];\\n    if (head.indexOf(\\"-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\\") < 0) {\\n        return \\"\\";\\n    }\\n\\n    var typeLine = datas[4];\\n    var faultLine = datas[5];\\n\\n    if (faultLine.indexOf(\\"启动操作\\") == 0 ){\\n        var items = typeLine.split(\\"  \\");\\n        if (items.length < 2) {\\n            return \\"格式不正确\\";\\n        }\\n\\n        var devAddr = items[0];\\n        var almInfo = items[1];\\n        var almTime = faultLine.substring(faultLine.indexOf(\\".\\")+1);\\n\\n        // 必须包含recordType字段，用来指明事件的类型\\n        var obj = {\\n            \\"recordType\\": \\"启动操作\\", almInfo: almInfo, \\"datetime\\": almTime, \\"devAddr\\": devAddr\\n        };\\n\\n        // 必须以列表格式返回\\n        var result = [];\\n        result.push(obj);\\n\\n        return result;\\n    }\\n\\n\\n    return \\"\\";\\n}"}}', '{"description":"报文格式：\\n以2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 0D开始，以0D 0D 字符结束的多行文本\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n测试报文1：\\n2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 2D 2B 0D 1C 26 0D 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 0D 38 33 31 B3 A7 B7 BF CD E2 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 0D 35 34 31 30 33 32 2D 30 33 32 20 20 D1 B6 CF EC C6 F7 20 20 0D C6 F4 B6 AF B2 D9 D7 F7 1C 2E 20 32 30 32 31 2D 31 32 2D 30 35 20 31 34 3A 32 34 3A 35 32 0D 0D\\n\\n报文内容：\\n-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\\n\\u001C&\\n                \\n831厂房外               \\n541032-032  讯响器  \\n启动操作\\u001C. 2021-12-05 14:24:52\\n\\n"}', 'report', 'record', 1, 2000, 1712756605700, 1712758068908),
	(1185, 'splitHandler', 'JB-QG-LD128E(Q)I', '北京利达华信电子有限公司', 'JavaScript', 'channel', '{"decode":{"main":"decode","code":"/**\\n * 编码器的入口函数\\n * 全局参数：\\n *     message：hex string格式的接收数据\\n *              XX+[合法报文]+XXX，合法报文可能混杂在一堆其他数据之中\\n * 返回值：\\n *   从XXX+[合法报文]+XXX中，截取到的[合法报文]\\n */\\nfunction decode(message) {\\n    var starTag = \\"1B 40 1B 31 05 1B 36 1B 39\\";\\n    var endTag = \\"0A 1B 4A 01 1B 39\\";\\n\\n    message = message.replace(/\\\\s+/g, \\"\\");\\n    starTag = starTag.replace(/\\\\s+/g, \\"\\");\\n    endTag = endTag.replace(/\\\\s+/g, \\"\\");\\n\\n    // 转换成大写\\n    message = message.toUpperCase();\\n    starTag = starTag.toUpperCase();\\n    endTag = endTag.toUpperCase();\\n\\n    // 寻找起始标记\\n    var start = message.indexOf(starTag);\\n    if (start < 0) {\\n        return \\"\\";\\n    }\\n\\n    // 寻找第一个结束标记\\n    var end = message.indexOf(endTag);\\n    if (end < 0) {\\n        return \\"\\";\\n    }\\n\\n    // 寻找后续多行\\n    var lines = message.substring(start, message.length);\\n    for (var i = 0; i < 8; i++) {\\n        var next = lines.indexOf(starTag, end + 2);\\n        var pos = lines.indexOf(endTag, end + 2);\\n\\n        // 检查：是否还有下一行，或者出现了实际上的下一行换行符\\n        if (pos < 0 || pos > next) {\\n            break;\\n        }\\n\\n        end = pos;\\n    }\\n\\n    // 分拆数据\\n    var data = message.substring(start, end + endTag.length);\\n\\n\\n    // 截取数据\\n    var result = data;\\n\\n    return result;\\n}\\n"}}', '{"description":"报文格式：\\n以1B 40 1B 31 05 1B 36 1B 39开始，以0A 1B 4A 01 1B 39 字符结束的多行文本\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n测试报文1：\\n1B 40 1B 31 05 1B 36 1B 39 32 31 2F 30 34 2F 30 32 20 31 36 3A 33 34 3A 30 38 0A CF B5 CD B3 B8 B4 CE BB 0A 1B 4A 01 1B 39\\n\\n报文内容：\\n\\u001B@\\u001B1\\u0005\\u001B6\\u001B921/04/02 16:34:08\\n系统复位\\n\\u001BJ\\u0001\\u001B9\\n"}', 'splitHandler', 'status', 1, 2000, 1712828091343, 1712933180891),
	(1186, '系统复位', 'JB-QG-LD128E(Q)I', '北京利达华信电子有限公司', 'JavaScript', 'device', '{"decode":{"main":"decode","code":"/**\\n * 解码器的入口函数\\n * 全局参数：\\n *     fox_edge_data：json string格式 或者 hex string格式的接收数据\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   提供给通道的发送数据。根据不同的通道服务，它可能是HEX结构的文本，也可能是JSON结构的对象，请自行根据选定的通道服务进行确认\\n */\\nfunction decode() {\\n\\tvar object = decodeStr(fox_edge_data, fox_edge_param);\\n  return JSON.stringify(object);\\n}\\n\\n/**\\n * 事件解码器函数：消火栓按钮报火警\\n * 全局参数：\\n *     fox_edge_data：hex string格式的接收数据\\n *                    XXX+[合法报文]+XXX，合法报文可能混杂在一堆其他数据之中\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   必须是列表格式的JSON字符串，并且JSON对象必须包含关键字【recordType】，否则不给与入库\\n */\\nfunction decodeStr(message, device_param) {\\n    var result = decodeType(message, \\"系统复位\\");\\n    return result;\\n}"}}', '{"description":"报文格式：\\n以1B 40 1B 31 05 1B 36 1B 39开始，以0A 1B 4A 01 1B 39 字符结束的多行文本\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n测试报文1：\\n1B 40 1B 31 05 1B 36 1B 39 32 31 2F 30 34 2F 30 32 20 31 36 3A 33 34 3A 30 38 0A CF B5 CD B3 B8 B4 CE BB 0A 1B 4A 01 1B 39\\n\\n报文内容：\\n\\u001B@\\u001B1\\u0005\\u001B6\\u001B921/04/02 16:34:08\\n系统复位\\n\\u001BJ\\u0001\\u001B9"}', 'report', 'record', 1, 2000, 1712828694537, 1712904068793),
	(1187, '主电故障', 'JB-QG-LD128E(Q)I', '北京利达华信电子有限公司', 'JavaScript', 'device', '{"decode":{"main":"decode","code":"/**\\n * 解码器的入口函数\\n * 全局参数：\\n *     fox_edge_data：json string格式 或者 hex string格式的接收数据\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   提供给通道的发送数据。根据不同的通道服务，它可能是HEX结构的文本，也可能是JSON结构的对象，请自行根据选定的通道服务进行确认\\n */\\nfunction decode() {\\n\\tvar object = decodeStr(fox_edge_data, fox_edge_param);\\n  return JSON.stringify(object);\\n}\\n\\n/**\\n * 事件解码器函数：消火栓按钮报火警\\n * 全局参数：\\n *     fox_edge_data：hex string格式的接收数据\\n *                    XXX+[合法报文]+XXX，合法报文可能混杂在一堆其他数据之中\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   必须是列表格式的JSON字符串，并且JSON对象必须包含关键字【recordType】，否则不给与入库\\n */\\nfunction decodeStr(message, device_param) {\\n    var result = decodeType(message, \\"主电故障\\");\\n    return result;\\n}"}}', '{"description":"报文格式：\\n以1B 40 1B 31 05 1B 36 1B 39开始，以0A 1B 4A 01 1B 39 字符结束的多行文本\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n测试报文1：\\n1B 40 1B 31 05 1B 36 1B 39 32 31 2F 30 34 2F 30 32 20 31 36 3A 33 37 3A 30 38 0A D6 F7 B5 E7 B9 CA D5 CF 0A 1B 4A 01 1B 39\\n\\n报文内容：\\n\\u001B@\\u001B1\\u0005\\u001B6\\u001B921/04/02 16:37:08\\n主电故障\\n\\u001BJ\\u0001\\u001B9"}', 'report', 'record', 1, 2000, 1712829524043, 1712904056459),
	(1188, '备电故障', 'JB-QG-LD128E(Q)I', '北京利达华信电子有限公司', 'JavaScript', 'device', '{"decode":{"main":"decode","code":"/**\\n * 解码器的入口函数\\n * 全局参数：\\n *     fox_edge_data：json string格式 或者 hex string格式的接收数据\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   提供给通道的发送数据。根据不同的通道服务，它可能是HEX结构的文本，也可能是JSON结构的对象，请自行根据选定的通道服务进行确认\\n */\\nfunction decode() {\\n\\tvar object = decodeStr(fox_edge_data, fox_edge_param);\\n  return JSON.stringify(object);\\n}\\n\\n/**\\n * 事件解码器函数：消火栓按钮报火警\\n * 全局参数：\\n *     fox_edge_data：hex string格式的接收数据\\n *                    XXX+[合法报文]+XXX，合法报文可能混杂在一堆其他数据之中\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   必须是列表格式的JSON字符串，并且JSON对象必须包含关键字【recordType】，否则不给与入库\\n */\\nfunction decodeStr(message, device_param) {\\n    var result = decodeType(message, \\"备电故障\\");\\n    return result;\\n}"}}', '{"description":"报文格式：\\n以1B 40 1B 31 05 1B 36 1B 39开始，以0A 1B 4A 01 1B 39 字符结束的多行文本\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n测试报文1：\\n1B 40 1B 31 05 1B 36 1B 39 32 31 2F 30 34 2F 30 32 20 31 36 3A 33 38 3A 35 31 0A B1 B8 B5 E7 B9 CA D5 CF 0A 1B 4A 01 1B 39\\n\\n报文内容：\\n\\u001B@\\u001B1\\u0005\\u001B6\\u001B921/04/02 16:38:51\\n备电故障\\n\\u001BJ\\u0001\\u001B9"}', 'report', 'record', 1, 2000, 1712829661152, 1712904036491),
	(1192, '火警', 'JB-QG-LD128E(Q)I', '北京利达华信电子有限公司', 'JavaScript', 'device', '{"decode":{"main":"decode","code":"/**\\n * 解码器的入口函数\\n * 全局参数：\\n *     fox_edge_data：json string格式 或者 hex string格式的接收数据\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   提供给通道的发送数据。根据不同的通道服务，它可能是HEX结构的文本，也可能是JSON结构的对象，请自行根据选定的通道服务进行确认\\n */\\nfunction decode() {\\n\\tvar object = decodeStr(fox_edge_data, fox_edge_param);\\n  return JSON.stringify(object);\\n}\\n\\n/**\\n * 事件解码器函数：消火栓按钮报火警\\n * 全局参数：\\n *     fox_edge_data：hex string格式的接收数据\\n *                    XXX+[合法报文]+XXX，合法报文可能混杂在一堆其他数据之中\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   必须是列表格式的JSON字符串，并且JSON对象必须包含关键字【recordType】，否则不给与入库\\n */\\nfunction decodeStr(message, device_param) {\\n    var result = decodeType(message, \\"火警\\");\\n    return result;\\n}"}}', '{"description":"报文格式：\\n以1B 40 1B 31 05 1B 36 1B 39开始，以0A 1B 4A 01 1B 39 字符结束的多行文本\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n测试报文1：\\n1B 40 1B 31 05 1B 36 1B 39 32 31 2F 30 34 2F 30 32 20 31 36 3A 32 38 3A 34 39 0A 30 30 C2 A5 30 30 B2 E3 30 30 B7 BF BC E4 0A 00 00 00 00 00 00 00 00 00 00 0A BB EE B6 AF D6 D0 D0 C4 A3 B1 A3 C6 0A BB F0 BE AF 3A 30 30 31 36 37 0A CF FB BB F0 CB A8 B0 B4 C5 A5 0A 1B 4A 01 1B 39 \\n\\n报文内容：\\n\\u001B@\\u001B1\\u0005\\u001B6\\u001B921/04/02 16:28:49\\n00楼00层00房间\\n\\n活动中心１Ｆ\\n火警:00167\\n消火栓按钮\\n\\u001BJ\\u0001\\u001B9\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n测试报文2：\\n1B 40 1B 31 05 1B 36 1B 39 32 31 2F 30 34 2F 30 32 20 31 36 3A 34 35 3A 35 39 0A 30 30 C2 A5 30 30 B2 E3 30 30 B7 BF BC E4 0A 00 00 00 00 00 00 00 00 00 00 0A BB EE B6 AF D6 D0 D0 C4 A3 B1 A3 C6 0A BB F0 BE AF 3A 30 30 31 33 31 0A CA D6 B1 A8 0A 1B 4A 01 1B 39\\n"}', 'report', 'record', 1, 2000, 1712829927205, 1712904097744),
	(1193, '故障', 'JB-QG-LD128E(Q)I', '北京利达华信电子有限公司', 'JavaScript', 'device', '{"decode":{"main":"decode","code":"/**\\n * 解码器的入口函数\\n * 全局参数：\\n *     fox_edge_data：json string格式 或者 hex string格式的接收数据\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   提供给通道的发送数据。根据不同的通道服务，它可能是HEX结构的文本，也可能是JSON结构的对象，请自行根据选定的通道服务进行确认\\n */\\nfunction decode() {\\n\\tvar object = decodeStr(fox_edge_data, fox_edge_param);\\n  return JSON.stringify(object);\\n}\\n\\n/**\\n * 事件解码器函数：消火栓按钮报火警\\n * 全局参数：\\n *     fox_edge_data：hex string格式的接收数据\\n *                    XXX+[合法报文]+XXX，合法报文可能混杂在一堆其他数据之中\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   必须是列表格式的JSON字符串，并且JSON对象必须包含关键字【recordType】，否则不给与入库\\n */\\nfunction decodeStr(message, device_param) {\\n    var result = decodeType(message, \\"故障\\");\\n    return result;\\n}"}}', '{"description":"报文格式：\\n以1B 40 1B 31 05 1B 36 1B 39开始，以0A 1B 4A 01 1B 39 字符结束的多行文本\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n测试报文1：\\n1B 40 1B 31 05 1B 36 1B 39 32 31 2F 30 34 2F 30 32 20 31 36 3A 34 33 3A 34 33 0A 30 30 C2 A5 30 30 B2 E3 30 30 B7 BF BC E4 0A 00 00 00 00 00 00 00 00 00 00 0A BB EE B6 AF D6 D0 D0 C4 A3 B1 A3 C6 0A B9 CA D5 CF 3A 30 30 31 36 37 0A CF FB BB F0 CB A8 B0 B4 C5 A5 0A 1B 4A 01 1B 39\\n\\n\\n报文内容：\\n\\u001B@\\u001B1\\u0005\\u001B6\\u001B921/04/02 16:43:43\\n00楼00层00房间\\n\\n活动中心１Ｆ\\n故障:00167\\n消火栓按钮\\n\\u001BJ\\u0001\\u001B9\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n测试报文2：\\n\\n1B 40 1B 31 05 1B 36 1B 39 32 31 2F 30 34 2F 30 32 20 31 36 3A 34 39 3A 35 34 0A 30 30 C2 A5 30 30 B2 E3 30 30 B7 BF BC E4 0A 00 00 00 00 00 00 00 00 00 00 0A BB EE B6 AF D6 D0 D0 C4 A3 B1 A3 C6 0A B9 CA D5 CF 3A 30 30 31 33 31 0A CA D6 B1 A8 0A 1B 4A 01 1B 39\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n测试报文3：\\n\\n1B 40 1B 31 05 1B 36 1B 39 32 31 2F 30 34 2F 30 32 20 31 36 3A 35 31 3A 35 37 0A 30 30 C2 A5 30 30 B2 E3 30 30 B7 BF BC E4 0A 00 00 00 00 00 00 00 00 00 00 0A BB EE B6 AF D6 D0 D0 C4 A3 B4 A3 C6 0A B9 CA D5 CF 3A 30 30 32 31 34 0A D0 C5 BA C5 B7 A7 0A 1B 4A 01 1B 39\\n\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n测试报文4：\\n\\n1B 40 1B 31 05 1B 36 1B 39 32 31 2F 30 34 2F 30 32 20 31 36 3A 35 39 3A 31 32 0A 30 30 C2 A5 30 30 B2 E3 30 30 B7 BF BC E4 0A 00 00 00 00 00 00 00 00 00 00 0A BB EE B6 AF D6 D0 D0 C4 A3 B4 A3 C6 0A B9 CA D5 CF 3A 30 30 31 32 38 0A B8 D0 D1 CC 0A 1B 4A 01 1B 39\\n\\n\\n"}', 'report', 'record', 1, 2000, 1712829951949, 1712904078079),
	(1194, '请求', 'JB-QG-LD128E(Q)I', '北京利达华信电子有限公司', 'JavaScript', 'device', '{"decode":{"main":"decode","code":"/**\\n * 解码器的入口函数\\n * 全局参数：\\n *     fox_edge_data：json string格式 或者 hex string格式的接收数据\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   提供给通道的发送数据。根据不同的通道服务，它可能是HEX结构的文本，也可能是JSON结构的对象，请自行根据选定的通道服务进行确认\\n */\\nfunction decode() {\\n\\tvar object = decodeStr(fox_edge_data, fox_edge_param);\\n  return JSON.stringify(object);\\n}\\n\\n/**\\n * 事件解码器函数：消火栓按钮报火警\\n * 全局参数：\\n *     fox_edge_data：hex string格式的接收数据\\n *                    XXX+[合法报文]+XXX，合法报文可能混杂在一堆其他数据之中\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   必须是列表格式的JSON字符串，并且JSON对象必须包含关键字【recordType】，否则不给与入库\\n */\\nfunction decodeStr(message, device_param) {\\n    var result = decodeType(message, \\"请求\\");\\n    return result;\\n}"}}', '{"description":"报文格式：\\n以1B 40 1B 31 05 1B 36 1B 39开始，以0A 1B 4A 01 1B 39 字符结束的多行文本\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n测试报文1：\\n1B 40 1B 31 05 1B 36 1B 39 32 31 2F 30 34 2F 30 32 20 31 36 3A 32 38 3A 34 39 0A 30 30 C2 A5 30 30 B2 E3 30 30 B7 BF BC E4 0A 00 00 00 00 00 00 00 00 00 00 0A 00 00 00 00 00 00 00 00 00 00 00 00 0A C7 EB C7 F3 3A 30 30 32 35 34 0A CF FB B7 C0 B1 C3 0A 1B 4A 01 1B 39\\n\\n\\n报文内容：\\n\\u001B@\\u001B1\\u0005\\u001B6\\u001B921/04/02 16:28:49\\n00楼00层00房间\\n\\n\\n请求:00254\\n消防泵\\n\\u001BJ\\u0001\\u001B9"}', 'report', 'record', 1, 2000, 1712829981145, 1712904087809),
	(1195, '反馈', 'JB-QG-LD128E(Q)I', '北京利达华信电子有限公司', 'JavaScript', 'device', '{"decode":{"main":"decode","code":"/**\\n * 解码器的入口函数\\n * 全局参数：\\n *     fox_edge_data：json string格式 或者 hex string格式的接收数据\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   提供给通道的发送数据。根据不同的通道服务，它可能是HEX结构的文本，也可能是JSON结构的对象，请自行根据选定的通道服务进行确认\\n */\\nfunction decode() {\\n\\tvar object = decodeStr(fox_edge_data, fox_edge_param);\\n  return JSON.stringify(object);\\n}\\n\\n/**\\n * 事件解码器函数：消火栓按钮报火警\\n * 全局参数：\\n *     fox_edge_data：hex string格式的接收数据\\n *                    XXX+[合法报文]+XXX，合法报文可能混杂在一堆其他数据之中\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   必须是列表格式的JSON字符串，并且JSON对象必须包含关键字【recordType】，否则不给与入库\\n */\\nfunction decodeStr(message, device_param) {\\n    var result = decodeType(message, \\"反馈\\");\\n    return result;\\n}"}}', '{"description":"报文格式：\\n以1B 40 1B 31 05 1B 36 1B 39开始，以0A 1B 4A 01 1B 39 字符结束的多行文本\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n测试报文1：\\n1B 40 1B 31 05 1B 36 1B 39 32 32 2F 30 38 2F 30 38 20 31 33 3A 32 30 3A 31 31 0A 30 30 C2 A5 30 30 B2 E3 30 30 B7 BF BC E4 0A 00 00 00 00 00 00 00 00 00 00 0A B3 AC CA D0 A3 B2 A3 C6 CE F7 00 00 0A B7 B4 C0 A1 3A 35 34 32 33 37 0A BE ED C1 B1 C3 C5 0A 1B 4A 01 1B 39\\n\\n报文内容：\\n\\u001B@\\u001B1\\u0005\\u001B6\\u001B922/08/08 13:20:11\\n00楼00层00房间\\n\\n超市２Ｆ西\\n反馈:54237\\n卷帘门\\n\\u001BJ\\u0001\\u001B9"}', 'report', 'record', 1, 2000, 1712830298356, 1712904045295),
	(1204, 'splitHandler', 'JB-QT-LD188EL', '北京利达华信电子有限公司', 'JavaScript', 'channel', '{"decode":{"main":"decode","code":"/**\\n * 编码器的入口函数\\n * 全局参数：\\n *     message：hex string格式的接收数据\\n *              XX+[合法报文]+XXX，合法报文可能混杂在一堆其他数据之中\\n * 返回值：\\n *   从XXX+[合法报文]+XXX中，截取到的[合法报文]\\n */\\nfunction decode(message) {\\n    var starTag = \\"1B 40 1C 69 00 1B 43 06 1B 78 00 1C 26 00 00 00 \\";\\n    var endTag = \\"0A 00 00 00 00 00 00 00 0A 00 00 00 00 00 00 00\\";\\n\\n    message = message.replace(/\\\\s+/g, \\"\\");\\n    starTag = starTag.replace(/\\\\s+/g, \\"\\");\\n    endTag = endTag.replace(/\\\\s+/g, \\"\\");\\n\\n    // 转换成大写\\n    message = message.toUpperCase();\\n    starTag = starTag.toUpperCase();\\n    endTag = endTag.toUpperCase();\\n\\n    // 寻找起始标记\\n    var start = message.indexOf(starTag);\\n    if (start < 0) {\\n        return \\"\\";\\n    }\\n\\n    // 寻找第一个结束标记\\n    var end = message.indexOf(endTag);\\n    if (end < 0) {\\n        return \\"\\";\\n    }\\n\\n    // 寻找后续多行\\n    var lines = message.substring(start, message.length);\\n    for (var i = 0; i < 8; i++) {\\n        var next = lines.indexOf(starTag, end + 2);\\n        var pos = lines.indexOf(endTag, end + 2);\\n\\n        // 检查：是否还有下一行，或者出现了实际上的下一行换行符\\n        if (pos < 0 || pos > next) {\\n            break;\\n        }\\n\\n        end = pos;\\n    }\\n\\n    // 分拆数据\\n    var data = message.substring(start, end + endTag.length);\\n\\n\\n    // 截取数据\\n    var result = data;\\n\\n    return result;\\n}\\n"}}', '{"description":"报文格式：\\n以\\n1B 40 1C 69 00 1B 43 06 1B 78 00 1C 26 00 00 00 \\n开始，\\n以\\n0A 00 00 00 00 00 00 00 0A 00 00 00 00 00 00 00\\n字符结束的多行文本\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n测试报文1：\\n1B 40 1C 69 00 1B 43 06 1B 78 00 1C 26 00 00 00 31 33 3A 34 35 3A 34 34 20 32 31 2D 30 36 2D 30 39 00 00 00 00 00 00 00 0A 00 00 00 00 00 00 00 B5 E7 B3 D8 B1 B8 B5 E7 0A 00 00 00 00 00 00 00 BF D8 D6 C6 C6 F7 B1 B8 B5 E7 00 20 20 20 20 20 0A 00 00 00 00 00 00 00 B9 CA D5 CF 20 20 20 20 00 20 00 00 00 00 00 00 0A 00 00 00 00 00 00 00 0A 00 00 00 00 00 00 00 \\n\\n报文内容：\\n\\u001B@\\u001Ci\\u001BC\\u0006\\u001Bx\\u001C&13:45:44 21-06-09\\n电池备电\\n控制器备电     \\n故障     \\n\\n"}', 'splitHandler', 'status', 1, 2000, 1712828091343, 1712933154400),
	(1206, '故障', 'JB-QT-LD188EL', '北京利达华信电子有限公司', 'JavaScript', 'device', '{"decode":{"main":"decode","code":"/**\\n * 解码器的入口函数\\n * 全局参数：\\n *     fox_edge_data：json string格式 或者 hex string格式的接收数据\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   提供给通道的发送数据。根据不同的通道服务，它可能是HEX结构的文本，也可能是JSON结构的对象，请自行根据选定的通道服务进行确认\\n */\\nfunction decode() {\\n\\tvar object = decodeStr(fox_edge_data, fox_edge_param);\\n  return JSON.stringify(object);\\n}\\n\\n/**\\n * 事件解码器函数：消火栓按钮报火警\\n * 全局参数：\\n *     fox_edge_data：hex string格式的接收数据\\n *                    XXX+[合法报文]+XXX，合法报文可能混杂在一堆其他数据之中\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   必须是列表格式的JSON字符串，并且JSON对象必须包含关键字【recordType】，否则不给与入库\\n */\\nfunction decodeStr(message, device_param) {\\n    var result = decodeType(message, \\"故障\\");\\n    return result;\\n}"}}', '{"description":"报文格式：\\n以\\n1B 40 1C 69 00 1B 43 06 1B 78 00 1C 26 00 00 00 \\n开始，\\n以\\n0A 00 00 00 00 00 00 00 0A 00 00 00 00 00 00 00\\n字符结束的多行文本\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n测试报文1：\\n1B 40 1C 69 00 1B 43 06 1B 78 00 1C 26 00 00 00 31 33 3A 34 35 3A 34 34 20 32 31 2D 30 36 2D 30 39 00 00 00 00 00 00 00 0A 00 00 00 00 00 00 00 B5 E7 B3 D8 B1 B8 B5 E7 0A 00 00 00 00 00 00 00 BF D8 D6 C6 C6 F7 B1 B8 B5 E7 00 20 20 20 20 20 0A 00 00 00 00 00 00 00 B9 CA D5 CF 20 20 20 20 00 20 00 00 00 00 00 00 0A 00 00 00 00 00 00 00 0A 00 00 00 00 00 00 00 \\n\\n报文内容：\\n\\u001B@\\u001Ci\\u001BC\\u0006\\u001Bx\\u001C&13:45:44 21-06-09\\n电池备电\\n控制器备电     \\n故障     \\n\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n测试报文2：\\n1B 40 1C 69 00 1B 43 06 1B 78 00 1C 26 00 00 00 31 33 3A 35 33 3A 31 35 20 32 31 2D 30 36 2D 30 39 00 00 00 00 00 00 00 0A 00 00 00 00 00 00 00 32 32 30 56 BD BB C1 F7 0A 00 00 00 00 00 00 00 BF D8 D6 C6 C6 F7 D6 F7 B5 E7 00 20 20 20 20 20 0A 00 00 00 00 00 00 00 B9 CA D5 CF 20 20 20 20 00 20 00 00 00 00 00 00 0A 00 00 00 00 00 00 00 0A 00 00 00 00 00 00 00\\n\\n报文内容：\\n\\u001B@\\u001Ci\\u001BC\\u0006\\u001Bx\\u001C&13:53:15 21-06-09\\n220V交流\\n控制器主电     \\n故障     \\n\\n1B 40 1C 69 00 1B 43 06 1B 78 00 1C 26 00 00 00 31 35 3A 32 38 3A 32 32 20 32 31 2D 30 36 2D 30 39 00 00 00 00 00 00 00 0A 00 00 00 00 00 00 00 B3 C9 C6 B7 B6 FE C2 A5 0A 00 00 00 00 00 00 00 CF FB BB F0 CB A8 B0 B4 C5 A5 00 20 20 20 20 20 0A 00 00 00 00 00 00 00 41 30 32 20 32 32 33 00 20 20 20 20 20 20 20 20 0A 00 00 00 00 00 00 00 B9 CA D5 CF 20 20 20 20 00 20 00 00 00 00 00 00 0A 00 00 00 00 00 00 00 0A 00 00 00 00 00 00 00 \\n\\n--------------------------------------------------------------------------------------------------------------------------\\n报文内容：\\n\\u001B@\\u001Ci\\u001BC\\u0006\\u001Bx\\u001C&15:28:22 21-06-09\\n成品二楼\\n消火栓按钮     \\nA02 223        \\n故障     \\n\\n\\n"}', 'report', 'record', 1, 2000, 1712829951949, 1712904456289),
	(1207, '请求', 'JB-QT-LD188EL', '北京利达华信电子有限公司', 'JavaScript', 'device', '{"decode":{"main":"decode","code":"/**\\n * 解码器的入口函数\\n * 全局参数：\\n *     fox_edge_data：json string格式 或者 hex string格式的接收数据\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   提供给通道的发送数据。根据不同的通道服务，它可能是HEX结构的文本，也可能是JSON结构的对象，请自行根据选定的通道服务进行确认\\n */\\nfunction decode() {\\n\\tvar object = decodeStr(fox_edge_data, fox_edge_param);\\n  return JSON.stringify(object);\\n}\\n\\n/**\\n * 事件解码器函数：消火栓按钮报火警\\n * 全局参数：\\n *     fox_edge_data：hex string格式的接收数据\\n *                    XXX+[合法报文]+XXX，合法报文可能混杂在一堆其他数据之中\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   必须是列表格式的JSON字符串，并且JSON对象必须包含关键字【recordType】，否则不给与入库\\n */\\nfunction decodeStr(message, device_param) {\\n    var result = decodeType(message, \\"请求\\");\\n    return result;\\n}"}}', '{"description":"报文格式：\\n以\\n1B 40 1C 69 00 1B 43 06 1B 78 00 1C 26 00 00 00 \\n开始，\\n以\\n0A 00 00 00 00 00 00 00 0A 00 00 00 00 00 00 00\\n字符结束的多行文本\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n测试报文1：\\n1B 40 1C 69 00 1B 43 06 1B 78 00 1C 26 00 00 00 31 35 3A 34 32 3A 32 39 20 32 31 2D 30 36 2D 30 39 00 00 00 00 00 00 00 0A 00 00 00 00 00 00 00 CF FB B7 C0 B1 C3 20 20 20 20 00 20 20 20 20 20 0A 00 00 00 00 00 00 00 50 30 32 20 30 30 30 00 20 20 20 20 20 20 20 20 0A 00 00 00 00 00 00 00 C7 EB C7 F3 20 20 20 20 00 20 00 00 00 00 00 00 0A 00 00 00 00 00 00 00 0A 00 00 00 00 00 00 00 \\n\\n\\n报文内容：\\n\\u001B@\\u001Ci\\u001BC\\u0006\\u001Bx\\u001C&15:42:29 21-06-09\\n消防泵         \\nP02 000        \\n请求     \\n\\n"}', 'report', 'record', 1, 2000, 1712829981145, 1712904446379),
	(1208, '火警', 'JB-QT-LD188EL', '北京利达华信电子有限公司', 'JavaScript', 'device', '{"decode":{"main":"decode","code":"/**\\n * 解码器的入口函数\\n * 全局参数：\\n *     fox_edge_data：json string格式 或者 hex string格式的接收数据\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   提供给通道的发送数据。根据不同的通道服务，它可能是HEX结构的文本，也可能是JSON结构的对象，请自行根据选定的通道服务进行确认\\n */\\nfunction decode() {\\n\\tvar object = decodeStr(fox_edge_data, fox_edge_param);\\n  return JSON.stringify(object);\\n}\\n\\n/**\\n * 事件解码器函数：消火栓按钮报火警\\n * 全局参数：\\n *     fox_edge_data：hex string格式的接收数据\\n *                    XXX+[合法报文]+XXX，合法报文可能混杂在一堆其他数据之中\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   必须是列表格式的JSON字符串，并且JSON对象必须包含关键字【recordType】，否则不给与入库\\n */\\nfunction decodeStr(message, device_param) {\\n    var result = decodeType(message, \\"火警\\");\\n    return result;\\n}"}}', '{"description":"报文格式：\\n以\\n1B 40 1C 69 00 1B 43 06 1B 78 00 1C 26 00 00 00 \\n开始，\\n以\\n0A 00 00 00 00 00 00 00 0A 00 00 00 00 00 00 00\\n字符结束的多行文本\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n测试报文1：\\n1B 40 1C 69 00 1B 43 06 1B 78 00 1C 26 00 00 00 31 35 3A 34 32 3A 32 39 20 32 31 2D 30 36 2D 30 39 00 00 00 00 00 00 00 0A 00 00 00 00 00 00 00 B3 C9 C6 B7 B6 FE C2 A5 0A 00 00 00 00 00 00 00 CF FB BB F0 CB A8 B0 B4 C5 A5 00 20 20 20 20 20 0A 00 00 00 00 00 00 00 41 30 32 20 32 32 33 00 20 20 20 20 20 20 20 20 0A 00 00 00 00 00 00 00 BB F0 BE AF 20 20 20 20 00 20 00 00 00 00 00 00 0A 00 00 00 00 00 00 00 0A 00 00 00 00 00 00 00 \\n\\n\\n报文内容：\\n\\u001B@\\u001Ci\\u001BC\\u0006\\u001Bx\\u001C&15:42:29 21-06-09\\n成品二楼\\n消火栓按钮     \\nA02 223        \\n火警     \\n\\n"}', 'report', 'record', 1, 2000, 1712829927205, 1712904464863),
	(1211, 'libs', 'JB-QG-LD128E(Q)I', '北京利达华信电子有限公司', 'JavaScript', 'device', '{"include":{"main":"include","code":"/**\\n * 按类型解码数据\\n *\\n * @param message 消息内容\\n * @param typeHeadTag 类型\\n * @returns {string|*[]} 数据\\n */\\nfunction decodeType(message, typeHeadTag) {\\n    var lines = message.split(\'\\\\n\');\\n\\n    // 剔除空行\\n    lines = removeEmpty(lines);\\n    if (lines.length < 2) {\\n        return \\"行数小于2\\";\\n    }\\n\\n    var timeHeadTag = \\"\\u001B@\\u001B1\\u0005\\u001B6\\u001B9\\";\\n    var tailHeadTag = \\"\\u001BJ\\u0001\\u001B9\\";\\n\\n    var timeLine = findLine(lines, timeHeadTag);\\n    var typeLine = findLine(lines, typeHeadTag);\\n\\n\\n    if (typeLine.length !== 0 && timeLine.length !== 0) {\\n        lines = removeLine(lines, tailHeadTag);\\n        lines = removeLine(lines, timeLine);\\n        lines = removeLine(lines, typeLine);\\n\\n        var oid = \'\';\\n        var items = typeLine.split(\':\');\\n        if (items.length > 1) {\\n            oid = items[1];\\n        }\\n\\n\\n        var almTime = timeLine.substring(timeHeadTag.length);\\n\\n        // 必须包含recordType字段，用来指明事件的类型\\n        var obj = {\\n            \\"recordType\\": typeHeadTag, \\"oid\\": oid, \\"datetime\\": almTime, \\"data\\": lines\\n        };\\n\\n        // 必须以列表格式返回\\n        var result = [];\\n        result.push(obj);\\n\\n        return result;\\n    }\\n\\n    return \\"\\";\\n}\\n\\nfunction removeLine(array, line) {\\n    var dats = [];\\n    for (i = 0; i < array.length; i++) {\\n        if (array[i] === line) {\\n            continue;\\n        }\\n        dats.push(array[i]);\\n    }\\n\\n    return dats;\\n}\\n\\nfunction removeEmpty(lines) {\\n    var dats = [];\\n    for (var i = 0; i < lines.length; i++) {\\n        var line = lines[i].replace(/\\\\u0000/g, \'\');\\n        if (line.length == 0) {\\n            continue;\\n        }\\n\\n        dats.push(line);\\n    }\\n\\n    return dats;\\n}\\n\\nfunction findLine(lines, headTag) {\\n    for (var i = 0; i < lines.length; i++) {\\n        if (lines[i].indexOf(headTag) == 0) {\\n            return lines[i];\\n        }\\n    }\\n\\n    return \\"\\";\\n}\\n"}}', '{"description":"报文格式：\\n以1B 40 1B 31 05 1B 36 1B 39开始，以0A 1B 4A 01 1B 39 字符结束的多行文本\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n测试报文1：\\n1B 40 1B 31 05 1B 36 1B 39 32 31 2F 30 34 2F 30 32 20 31 36 3A 34 33 3A 34 33 0A 30 30 C2 A5 30 30 B2 E3 30 30 B7 BF BC E4 0A 00 00 00 00 00 00 00 00 00 00 0A BB EE B6 AF D6 D0 D0 C4 A3 B1 A3 C6 0A B9 CA D5 CF 3A 30 30 31 36 37 0A CF FB BB F0 CB A8 B0 B4 C5 A5 0A 1B 4A 01 1B 39\\n\\n\\n报文内容：\\n\\u001B@\\u001B1\\u0005\\u001B6\\u001B921/04/02 16:43:43\\n00楼00层00房间\\n\\n活动中心１Ｆ\\n故障:00167\\n消火栓按钮\\n\\u001BJ\\u0001\\u001B9\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n测试报文2：\\n\\n1B 40 1B 31 05 1B 36 1B 39 32 31 2F 30 34 2F 30 32 20 31 36 3A 34 39 3A 35 34 0A 30 30 C2 A5 30 30 B2 E3 30 30 B7 BF BC E4 0A 00 00 00 00 00 00 00 00 00 00 0A BB EE B6 AF D6 D0 D0 C4 A3 B1 A3 C6 0A B9 CA D5 CF 3A 30 30 31 33 31 0A CA D6 B1 A8 0A 1B 4A 01 1B 39\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n测试报文3：\\n\\n1B 40 1B 31 05 1B 36 1B 39 32 31 2F 30 34 2F 30 32 20 31 36 3A 35 31 3A 35 37 0A 30 30 C2 A5 30 30 B2 E3 30 30 B7 BF BC E4 0A 00 00 00 00 00 00 00 00 00 00 0A BB EE B6 AF D6 D0 D0 C4 A3 B4 A3 C6 0A B9 CA D5 CF 3A 30 30 32 31 34 0A D0 C5 BA C5 B7 A7 0A 1B 4A 01 1B 39\\n\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n测试报文4：\\n\\n1B 40 1B 31 05 1B 36 1B 39 32 31 2F 30 34 2F 30 32 20 31 36 3A 35 39 3A 31 32 0A 30 30 C2 A5 30 30 B2 E3 30 30 B7 BF BC E4 0A 00 00 00 00 00 00 00 00 00 00 0A BB EE B6 AF D6 D0 D0 C4 A3 B4 A3 C6 0A B9 CA D5 CF 3A 30 30 31 32 38 0A B8 D0 D1 CC 0A 1B 4A 01 1B 39\\n\\n\\n"}', 'include', 'record', 1, 2000, 1712903951637, 1712904002321),
	(1212, 'libs', 'JB-QT-LD188EL', '北京利达华信电子有限公司', 'JavaScript', 'device', '{"include":{"main":"include","code":"/**\\n * 按类型解码数据\\n *\\n * @param message 消息内容\\n * @param typeHeadTag 类型\\n * @returns {string|*[]} 数据\\n */\\nfunction decodeType(message, typeHeadTag) {\\n    var lines = message.split(\'\\\\n\');\\n\\n    // 剔除空行\\n    lines = removeEmpty(lines);\\n    if (lines.length < 2) {\\n        return \\"行数小于2\\";\\n    }\\n\\n    // 获得首行和尾尾\\n    var timeLine = lines[0];\\n    var typeLine = lines[lines.length - 1];\\n\\n    // 清除空行\\n    lines = removeLine(lines, timeLine);\\n    lines = removeLine(lines, typeLine);\\n\\n\\n    var timeHeadTag = \\"\\u001B@\\u001Ci\\u001BC\\u0006\\u001Bx\\u001C&\\";\\n    if (typeLine.indexOf(typeHeadTag) == 0) {\\n        if (timeLine.indexOf(timeHeadTag) < 0) {\\n            return \\"格式不正确\\";\\n        }\\n\\n        // 查找\\n        var almTime = timeLine.substring(timeHeadTag.length);\\n\\n        // 查找地址行\\n        var addrLine = findAddress(lines);\\n\\n\\n        // 必须包含recordType字段，用来指明事件的类型\\n        var obj = \'\';\\n        if (addrLine.length !== 0) {\\n            // 剔除地址行\\n            lines = removeLine(lines, addrLine);\\n\\n            // 格式化地址行\\n            var address = formatAddress(addrLine);\\n\\n            obj = {\\n                \\"recordType\\": typeHeadTag, \\"datetime\\": almTime, \\"address\\": address, \\"data\\": lines\\n            };\\n        } else {\\n            obj = {\\n                \\"recordType\\": typeHeadTag, \\"datetime\\": almTime, \\"data\\": lines\\n            };\\n        }\\n\\n        // 必须以列表格式返回\\n        var result = [];\\n        result.push(obj);\\n\\n        return result;\\n    }\\n\\n    return \\"\\";\\n}\\n\\nfunction removeLine(array, line) {\\n    var dats = [];\\n    for (var i = 0; i < array.length; i++) {\\n        if (array[i] === line) {\\n            continue;\\n        }\\n        dats.push(array[i]);\\n    }\\n\\n    return dats;\\n}\\n\\nfunction removeEmpty(lines) {\\n    var dats = [];\\n    for (var i = 0; i < lines.length; i++) {\\n        var line = lines[i].replace(/\\\\u0000/g, \'\');\\n        if (line.length == 0) {\\n            continue;\\n        }\\n\\n        dats.push(line);\\n    }\\n\\n    return dats;\\n}\\n\\nfunction findAddress(lines) {\\n    for (var i = 0; i < lines.length; i++) {\\n        if (isAddress(lines[i])) {\\n            return lines[i];\\n        }\\n    }\\n\\n    return \\"\\";\\n}\\n\\n/**\\n * 用空格隔开的两个16进制格式\\n * @param line 一行数据\\n * @returns {boolean}\\n */\\nfunction isAddress(line) {\\n    // 分拆\\n    var items = line.split(\' \');\\n\\n    // 剔除空格\\n    items = removeEmpty(items);\\n\\n    if (items.length < 2) {\\n        return false;\\n    }\\n\\n    // 检查：是否为数字和字母\\n    for (var i = 0; i < items.length; i++) {\\n        var isHex = /^[0-9a-zA-Z]+$/.test(items[i]);\\n        if (isHex !== true) {\\n            return false\\n        }\\n    }\\n\\n    return true;\\n}\\n\\nfunction formatAddress(line) {\\n    // 分拆\\n    var items = line.split(\' \');\\n\\n    // 剔除空格\\n    items = removeEmpty(items);\\n\\n    if (items.length != 2) {\\n        return \'\';\\n    }\\n\\n    return items[0] + \' \' + items[1];\\n}\\n"}}', '{"description":"报文格式：\\n以\\n1B 40 1C 69 00 1B 43 06 1B 78 00 1C 26 00 00 00 \\n开始，\\n以\\n0A 00 00 00 00 00 00 00 0A 00 00 00 00 00 00 00\\n字符结束的多行文本\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n测试报文1：\\n1B 40 1C 69 00 1B 43 06 1B 78 00 1C 26 00 00 00 31 33 3A 34 35 3A 34 34 20 32 31 2D 30 36 2D 30 39 00 00 00 00 00 00 00 0A 00 00 00 00 00 00 00 B5 E7 B3 D8 B1 B8 B5 E7 0A 00 00 00 00 00 00 00 BF D8 D6 C6 C6 F7 B1 B8 B5 E7 00 20 20 20 20 20 0A 00 00 00 00 00 00 00 B9 CA D5 CF 20 20 20 20 00 20 00 00 00 00 00 00 0A 00 00 00 00 00 00 00 0A 00 00 00 00 00 00 00 \\n\\n报文内容：\\n\\u001B@\\u001Ci\\u001BC\\u0006\\u001Bx\\u001C&13:45:44 21-06-09\\n电池备电\\n控制器备电     \\n故障     \\n\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n测试报文2：\\n1B 40 1C 69 00 1B 43 06 1B 78 00 1C 26 00 00 00 31 33 3A 35 33 3A 31 35 20 32 31 2D 30 36 2D 30 39 00 00 00 00 00 00 00 0A 00 00 00 00 00 00 00 32 32 30 56 BD BB C1 F7 0A 00 00 00 00 00 00 00 BF D8 D6 C6 C6 F7 D6 F7 B5 E7 00 20 20 20 20 20 0A 00 00 00 00 00 00 00 B9 CA D5 CF 20 20 20 20 00 20 00 00 00 00 00 00 0A 00 00 00 00 00 00 00 0A 00 00 00 00 00 00 00\\n\\n报文内容：\\n\\u001B@\\u001Ci\\u001BC\\u0006\\u001Bx\\u001C&13:53:15 21-06-09\\n220V交流\\n控制器主电     \\n故障     \\n\\n1B 40 1C 69 00 1B 43 06 1B 78 00 1C 26 00 00 00 31 35 3A 32 38 3A 32 32 20 32 31 2D 30 36 2D 30 39 00 00 00 00 00 00 00 0A 00 00 00 00 00 00 00 B3 C9 C6 B7 B6 FE C2 A5 0A 00 00 00 00 00 00 00 CF FB BB F0 CB A8 B0 B4 C5 A5 00 20 20 20 20 20 0A 00 00 00 00 00 00 00 41 30 32 20 32 32 33 00 20 20 20 20 20 20 20 20 0A 00 00 00 00 00 00 00 B9 CA D5 CF 20 20 20 20 00 20 00 00 00 00 00 00 0A 00 00 00 00 00 00 00 0A 00 00 00 00 00 00 00 \\n\\n--------------------------------------------------------------------------------------------------------------------------\\n报文内容：\\n\\u001B@\\u001Ci\\u001BC\\u0006\\u001Bx\\u001C&15:28:22 21-06-09\\n成品二楼\\n消火栓按钮     \\nA02 223        \\n故障     \\n"}', 'include', 'record', 1, 2000, 1712904146350, 1712904416004),
	(1213, 'splitHandler', 'JB-QG-LD128E(Q)II', '北京利达华信电子有限公司', 'JavaScript', 'channel', '{"decode":{"main":"decode","code":"/**\\n * 编码器的入口函数\\n * 全局参数：\\n *     message：hex string格式的接收数据\\n *              XX+[合法报文]+XXX，合法报文可能混杂在一堆其他数据之中\\n * 返回值：\\n *   从XXX+[合法报文]+XXX中，截取到的[合法报文]\\n */\\nfunction decode(message) {\\n    var starTag = \\"1B 40 1B 31 05 1B 36 1B 39\\";\\n    var endTag = \\"0A 1B 4A 01 1B 39\\";\\n\\n    message = message.replace(/\\\\s+/g, \\"\\");\\n    starTag = starTag.replace(/\\\\s+/g, \\"\\");\\n    endTag = endTag.replace(/\\\\s+/g, \\"\\");\\n\\n    // 转换成大写\\n    message = message.toUpperCase();\\n    starTag = starTag.toUpperCase();\\n    endTag = endTag.toUpperCase();\\n\\n    // 寻找起始标记\\n    var start = message.indexOf(starTag);\\n    if (start < 0) {\\n        return \\"\\";\\n    }\\n\\n    // 寻找第一个结束标记\\n    var end = message.indexOf(endTag);\\n    if (end < 0) {\\n        return \\"\\";\\n    }\\n\\n    // 寻找后续多行\\n    var lines = message.substring(start, message.length);\\n    for (var i = 0; i < 8; i++) {\\n        var next = lines.indexOf(starTag, end + 2);\\n        var pos = lines.indexOf(endTag, end + 2);\\n\\n        // 检查：是否还有下一行，或者出现了实际上的下一行换行符\\n        if (pos < 0 || pos > next) {\\n            break;\\n        }\\n\\n        end = pos;\\n    }\\n\\n    // 分拆数据\\n    var data = message.substring(start, end + endTag.length);\\n\\n\\n    // 截取数据\\n    var result = data;\\n\\n    return result;\\n}\\n"}}', '{"description":"报文格式：\\n以1B 40 1B 31 05 1B 36 1B 39开始，以0A 1B 4A 01 1B 39 字符结束的多行文本\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n测试报文1：\\n1B 40 1B 31 05 1B 36 1B 39 32 31 2F 30 34 2F 30 32 20 31 36 3A 33 34 3A 30 38 0A CF B5 CD B3 B8 B4 CE BB 0A 1B 4A 01 1B 39\\n\\n报文内容：\\n\\u001B@\\u001B1\\u0005\\u001B6\\u001B921/04/02 16:34:08\\n系统复位\\n\\u001BJ\\u0001\\u001B9\\n"}', 'splitHandler', 'status', 1, 2000, 1712828091343, 1712933115669),
	(1214, 'libs', 'JB-QG-LD128E(Q)II', '北京利达华信电子有限公司', 'JavaScript', 'device', '{"include":{"main":"include","code":"/**\\n * 按类型解码数据\\n *\\n * @param message 消息内容\\n * @param typeHeadTag 类型\\n * @returns {string|*[]} 数据\\n */\\nfunction decodeType(message, typeHeadTag) {\\n    var lines = message.split(\'\\\\n\');\\n\\n    // 剔除空行\\n    lines = removeEmpty(lines);\\n    if (lines.length < 2) {\\n        return \\"行数小于2\\";\\n    }\\n\\n    var timeHeadTag = \\"\\u001B@\\u001B1\\u0005\\u001B6\\u001B9\\";\\n    var tailHeadTag = \\"\\u001BJ\\u0001\\u001B9\\";\\n\\n    var timeLine = findLine(lines, timeHeadTag);\\n    var typeLine = findLine(lines, typeHeadTag);\\n\\n\\n    if (typeLine.length !== 0 && timeLine.length !== 0) {\\n        lines = removeLine(lines, tailHeadTag);\\n        lines = removeLine(lines, timeLine);\\n        lines = removeLine(lines, typeLine);\\n\\n        var oid = \'\';\\n        var items = typeLine.split(\':\');\\n        if (items.length > 1) {\\n            oid = items[1];\\n        }\\n\\n\\n        var almTime = timeLine.substring(timeHeadTag.length);\\n\\n        // 必须包含recordType字段，用来指明事件的类型\\n        var obj = {\\n            \\"recordType\\": typeHeadTag, \\"oid\\": oid, \\"datetime\\": almTime, \\"data\\": lines\\n        };\\n\\n        // 必须以列表格式返回\\n        var result = [];\\n        result.push(obj);\\n\\n        return result;\\n    }\\n\\n    return \\"\\";\\n}\\n\\nfunction removeLine(array, line) {\\n    var dats = [];\\n    for (i = 0; i < array.length; i++) {\\n        if (array[i] === line) {\\n            continue;\\n        }\\n        dats.push(array[i]);\\n    }\\n\\n    return dats;\\n}\\n\\nfunction removeEmpty(lines) {\\n    var dats = [];\\n    for (var i = 0; i < lines.length; i++) {\\n        var line = lines[i].replace(/\\\\u0000/g, \'\');\\n        if (line.length == 0) {\\n            continue;\\n        }\\n\\n        dats.push(line);\\n    }\\n\\n    return dats;\\n}\\n\\nfunction findLine(lines, headTag) {\\n    for (var i = 0; i < lines.length; i++) {\\n        if (lines[i].indexOf(headTag) == 0) {\\n            return lines[i];\\n        }\\n    }\\n\\n    return \\"\\";\\n}\\n"}}', '{"description":"报文格式：\\n以1B 40 1B 31 05 1B 36 1B 39开始，以0A 1B 4A 01 1B 39 字符结束的多行文本\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n测试报文1：\\n1B 40 1B 31 05 1B 36 1B 39 32 31 2F 30 34 2F 30 32 20 31 36 3A 34 33 3A 34 33 0A 30 30 C2 A5 30 30 B2 E3 30 30 B7 BF BC E4 0A 00 00 00 00 00 00 00 00 00 00 0A BB EE B6 AF D6 D0 D0 C4 A3 B1 A3 C6 0A B9 CA D5 CF 3A 30 30 31 36 37 0A CF FB BB F0 CB A8 B0 B4 C5 A5 0A 1B 4A 01 1B 39\\n\\n\\n报文内容：\\n\\u001B@\\u001B1\\u0005\\u001B6\\u001B921/04/02 16:43:43\\n00楼00层00房间\\n\\n活动中心１Ｆ\\n故障:00167\\n消火栓按钮\\n\\u001BJ\\u0001\\u001B9\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n测试报文2：\\n\\n1B 40 1B 31 05 1B 36 1B 39 32 31 2F 30 34 2F 30 32 20 31 36 3A 34 39 3A 35 34 0A 30 30 C2 A5 30 30 B2 E3 30 30 B7 BF BC E4 0A 00 00 00 00 00 00 00 00 00 00 0A BB EE B6 AF D6 D0 D0 C4 A3 B1 A3 C6 0A B9 CA D5 CF 3A 30 30 31 33 31 0A CA D6 B1 A8 0A 1B 4A 01 1B 39\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n测试报文3：\\n\\n1B 40 1B 31 05 1B 36 1B 39 32 31 2F 30 34 2F 30 32 20 31 36 3A 35 31 3A 35 37 0A 30 30 C2 A5 30 30 B2 E3 30 30 B7 BF BC E4 0A 00 00 00 00 00 00 00 00 00 00 0A BB EE B6 AF D6 D0 D0 C4 A3 B4 A3 C6 0A B9 CA D5 CF 3A 30 30 32 31 34 0A D0 C5 BA C5 B7 A7 0A 1B 4A 01 1B 39\\n\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n测试报文4：\\n\\n1B 40 1B 31 05 1B 36 1B 39 32 31 2F 30 34 2F 30 32 20 31 36 3A 35 39 3A 31 32 0A 30 30 C2 A5 30 30 B2 E3 30 30 B7 BF BC E4 0A 00 00 00 00 00 00 00 00 00 00 0A BB EE B6 AF D6 D0 D0 C4 A3 B4 A3 C6 0A B9 CA D5 CF 3A 30 30 31 32 38 0A B8 D0 D1 CC 0A 1B 4A 01 1B 39\\n\\n\\n"}', 'include', 'record', 1, 2000, 1712903951637, 1712904002321),
	(1215, '系统复位', 'JB-QG-LD128E(Q)II', '北京利达华信电子有限公司', 'JavaScript', 'device', '{"decode":{"main":"decode","code":"/**\\n * 解码器的入口函数\\n * 全局参数：\\n *     fox_edge_data：json string格式 或者 hex string格式的接收数据\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   提供给通道的发送数据。根据不同的通道服务，它可能是HEX结构的文本，也可能是JSON结构的对象，请自行根据选定的通道服务进行确认\\n */\\nfunction decode() {\\n\\tvar object = decodeStr(fox_edge_data, fox_edge_param);\\n  return JSON.stringify(object);\\n}\\n\\n/**\\n * 事件解码器函数：消火栓按钮报火警\\n * 全局参数：\\n *     fox_edge_data：hex string格式的接收数据\\n *                    XXX+[合法报文]+XXX，合法报文可能混杂在一堆其他数据之中\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   必须是列表格式的JSON字符串，并且JSON对象必须包含关键字【recordType】，否则不给与入库\\n */\\nfunction decodeStr(message, device_param) {\\n    var result = decodeType(message, \\"系统复位\\");\\n    return result;\\n}"}}', '{"description":"报文格式：\\n以1B 40 1B 31 05 1B 36 1B 39开始，以0A 1B 4A 01 1B 39 字符结束的多行文本\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n测试报文1：\\n1B 40 1B 31 05 1B 36 1B 39 31 39 2F 30 36 2F 32 31 20 31 30 3A 30 38 3A 30 39 0A CF B5 CD B3 B8 B4 CE BB 0A 1B 4A 01 1B 39 \\n\\n报文内容：\\n\\u001B@\\u001B1\\u0005\\u001B6\\u001B919/06/21 10:08:09\\n系统复位\\n\\u001BJ\\u0001\\u001B9"}', 'report', 'record', 1, 2000, 1712828694537, 1712917652382),
	(1216, '主电故障', 'JB-QG-LD128E(Q)II', '北京利达华信电子有限公司', 'JavaScript', 'device', '{"decode":{"main":"decode","code":"/**\\n * 解码器的入口函数\\n * 全局参数：\\n *     fox_edge_data：json string格式 或者 hex string格式的接收数据\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   提供给通道的发送数据。根据不同的通道服务，它可能是HEX结构的文本，也可能是JSON结构的对象，请自行根据选定的通道服务进行确认\\n */\\nfunction decode() {\\n\\tvar object = decodeStr(fox_edge_data, fox_edge_param);\\n  return JSON.stringify(object);\\n}\\n\\n/**\\n * 事件解码器函数：消火栓按钮报火警\\n * 全局参数：\\n *     fox_edge_data：hex string格式的接收数据\\n *                    XXX+[合法报文]+XXX，合法报文可能混杂在一堆其他数据之中\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   必须是列表格式的JSON字符串，并且JSON对象必须包含关键字【recordType】，否则不给与入库\\n */\\nfunction decodeStr(message, device_param) {\\n    var result = decodeType(message, \\"主电故障\\");\\n    return result;\\n}"}}', '{"description":"报文格式：\\n以1B 40 1B 31 05 1B 36 1B 39开始，以0A 1B 4A 01 1B 39 字符结束的多行文本\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n测试报文1：\\n1B 40 1B 31 05 1B 36 1B 39 31 39 2F 30 36 2F 3231 20 31 30 3A 34 31 3A 33 39 0A D6 F7 B5 E7 B9CA D5 CF 0A 1B 4A 01 1B 39  \\n\\n报文内容：\\n\\u001B@\\u001B1\\u0005\\u001B6\\u001B919/06/21 10:41:39\\n主电故障\\n\\u001BJ\\u0001\\u001B9"}', 'report', 'record', 1, 2000, 1712829524043, 1712917809245),
	(1217, '备电故障', 'JB-QG-LD128E(Q)II', '北京利达华信电子有限公司', 'JavaScript', 'device', '{"decode":{"main":"decode","code":"/**\\n * 解码器的入口函数\\n * 全局参数：\\n *     fox_edge_data：json string格式 或者 hex string格式的接收数据\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   提供给通道的发送数据。根据不同的通道服务，它可能是HEX结构的文本，也可能是JSON结构的对象，请自行根据选定的通道服务进行确认\\n */\\nfunction decode() {\\n\\tvar object = decodeStr(fox_edge_data, fox_edge_param);\\n  return JSON.stringify(object);\\n}\\n\\n/**\\n * 事件解码器函数：消火栓按钮报火警\\n * 全局参数：\\n *     fox_edge_data：hex string格式的接收数据\\n *                    XXX+[合法报文]+XXX，合法报文可能混杂在一堆其他数据之中\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   必须是列表格式的JSON字符串，并且JSON对象必须包含关键字【recordType】，否则不给与入库\\n */\\nfunction decodeStr(message, device_param) {\\n    var result = decodeType(message, \\"备电故障\\");\\n    return result;\\n}"}}', '{"description":"报文格式：\\n以1B 40 1B 31 05 1B 36 1B 39开始，以0A 1B 4A 01 1B 39 字符结束的多行文本\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n测试报文1：\\n1B 40 1B 31 05 1B 36 1B 39 31 39 2F 30 36 2F 3231 20 31 30 3A 34 37 3A 34 30 0A B1 B8 B5 E7 B9CA D5 CF 0A 1B 4A 01 1B 39\\n\\n报文内容：\\n\\u001B@\\u001B1\\u0005\\u001B6\\u001B919/06/21 10:47:40\\n备电故障\\n\\u001BJ\\u0001\\u001B9"}', 'report', 'record', 1, 2000, 1712829661152, 1712917846964),
	(1218, '火警', 'JB-QG-LD128E(Q)II', '北京利达华信电子有限公司', 'JavaScript', 'device', '{"decode":{"main":"decode","code":"/**\\n * 解码器的入口函数\\n * 全局参数：\\n *     fox_edge_data：json string格式 或者 hex string格式的接收数据\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   提供给通道的发送数据。根据不同的通道服务，它可能是HEX结构的文本，也可能是JSON结构的对象，请自行根据选定的通道服务进行确认\\n */\\nfunction decode() {\\n\\tvar object = decodeStr(fox_edge_data, fox_edge_param);\\n  return JSON.stringify(object);\\n}\\n\\n/**\\n * 事件解码器函数：消火栓按钮报火警\\n * 全局参数：\\n *     fox_edge_data：hex string格式的接收数据\\n *                    XXX+[合法报文]+XXX，合法报文可能混杂在一堆其他数据之中\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   必须是列表格式的JSON字符串，并且JSON对象必须包含关键字【recordType】，否则不给与入库\\n */\\nfunction decodeStr(message, device_param) {\\n    var result = decodeType(message, \\"火警\\");\\n    return result;\\n}"}}', '{"description":"报文格式：\\n以1B 40 1B 31 05 1B 36 1B 39开始，以0A 1B 4A 01 1B 39 字符结束的多行文本\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n测试报文1：\\n1B 40 1B 31 05 1B 36 1B 39 31 39 2F 30 36 2F 3231 20 31 30 3A 32 32 3A 34 36 0A 30 30 C2 A5 3032 B2 E3 30 30 B7 BF BC E4 0A D7 DF B5 C0 D3 D200 00 00 00 0A 00 00 00 00 00 00 00 00 00 00 0000 0A BB F0 BE AF 3A 30 30 31 32 37 0A CA D6 B1 A8 0A 1B 4A 01 1B 39 \\n\\n\\n报文内容：\\n\\u001B@\\u001B1\\u0005\\u001B6\\u001B919/06/21 10:22:46\\n00楼02层00房间\\n走道右\\n\\n火警:00127\\n手报\\n\\u001BJ\\u0001\\u001B9\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n测试报文2：\\n1B 40 1B 31 05 1B 36 1B 39 31 39 2F 30 36 2F 3231 20 31 30 3A 35 38 3A 34 38 0A 30 30 C2 A5 3032 B2 E3 30 30 B7 BF BC E4 0A D7 DF B5 C0 00 0000 00 00 00 0A 00 00 00 00 00 00 00 00 00 00 0000 0A BB F0 BE AF 3A 30 30 31 33 36 0A B8 D0 D1CC 0A 1B 4A 01 1B 39\\n\\n报文内容：\\n\\u001B@\\u001B1\\u0005\\u001B6\\u001B919/06/21 10:58:48\\n00楼02层00房间\\n走道\\n\\n火警:00136\\n感烟\\n\\u001BJ\\u0001\\u001B9\\n"}', 'report', 'record', 1, 2000, 1712829927205, 1712917967845),
	(1219, '故障', 'JB-QG-LD128E(Q)II', '北京利达华信电子有限公司', 'JavaScript', 'device', '{"decode":{"main":"decode","code":"/**\\n * 解码器的入口函数\\n * 全局参数：\\n *     fox_edge_data：json string格式 或者 hex string格式的接收数据\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   提供给通道的发送数据。根据不同的通道服务，它可能是HEX结构的文本，也可能是JSON结构的对象，请自行根据选定的通道服务进行确认\\n */\\nfunction decode() {\\n\\tvar object = decodeStr(fox_edge_data, fox_edge_param);\\n  return JSON.stringify(object);\\n}\\n\\n/**\\n * 事件解码器函数：消火栓按钮报火警\\n * 全局参数：\\n *     fox_edge_data：hex string格式的接收数据\\n *                    XXX+[合法报文]+XXX，合法报文可能混杂在一堆其他数据之中\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   必须是列表格式的JSON字符串，并且JSON对象必须包含关键字【recordType】，否则不给与入库\\n */\\nfunction decodeStr(message, device_param) {\\n    var result = decodeType(message, \\"故障\\");\\n    return result;\\n}"}}', '{"description":"报文格式：\\n以1B 40 1B 31 05 1B 36 1B 39开始，以0A 1B 4A 01 1B 39 字符结束的多行文本\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n测试报文1：\\n1B 40 1B 31 05 1B 36 1B 39 31 39 2F 30 36 2F 32 31 20 31 30 3A 31 35 3A 32 37 0A 30 30 C2 A5 30 32 B2 E3 30 30 B7 BF BC E4 0A D7 DF B5 C0 D3 D2 00 00 00 00 0A 00 00 00 00 00 00 00 00 00 00 00 00 0A B9 CA D5 CF 3A 30 30 31 32 31 0A CA D6 B1 A8 0A 1B 4A 01 1B 39\\n\\n\\n报文内容：\\n\\u001B@\\u001B1\\u0005\\u001B6\\u001B919/06/21 10:15:27\\n00楼02层00房间\\n走道右\\n\\n故障:00121\\n手报\\n\\u001BJ\\u0001\\u001B9\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n测试报文2：\\n\\n1B 40 1B 31 05 1B 36 1B 39 31 39 2F 30 36 2F 3231 20 31 30 3A 35 33 3A 32 30 0A 30 30 C2 A5 3032 B2 E3 30 30 B7 BF BC E4 0A B5 E7 CC DD C7 B0CA D2 00 00 0A 00 00 00 00 00 00 00 00 00 00 0000 0A B9 CA D5 CF 3A 30 30 31 30 32 0A B8 D0 D1CC 0A 1B 4A 01 1B 39\\n\\n\\n"}', 'report', 'record', 1, 2000, 1712829951949, 1712917937576),
	(1220, '请求', 'JB-QG-LD128E(Q)II', '北京利达华信电子有限公司', 'JavaScript', 'device', '{"decode":{"main":"decode","code":"/**\\n * 解码器的入口函数\\n * 全局参数：\\n *     fox_edge_data：json string格式 或者 hex string格式的接收数据\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   提供给通道的发送数据。根据不同的通道服务，它可能是HEX结构的文本，也可能是JSON结构的对象，请自行根据选定的通道服务进行确认\\n */\\nfunction decode() {\\n\\tvar object = decodeStr(fox_edge_data, fox_edge_param);\\n  return JSON.stringify(object);\\n}\\n\\n/**\\n * 事件解码器函数：消火栓按钮报火警\\n * 全局参数：\\n *     fox_edge_data：hex string格式的接收数据\\n *                    XXX+[合法报文]+XXX，合法报文可能混杂在一堆其他数据之中\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   必须是列表格式的JSON字符串，并且JSON对象必须包含关键字【recordType】，否则不给与入库\\n */\\nfunction decodeStr(message, device_param) {\\n    var result = decodeType(message, \\"请求\\");\\n    return result;\\n}"}}', '{"description":"报文格式：\\n以1B 40 1B 31 05 1B 36 1B 39开始，以0A 1B 4A 01 1B 39 字符结束的多行文本\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n测试报文1：\\n1B 40 1B 31 05 1B 36 1B 39 32 31 2F 30 34 2F 30 32 20 31 36 3A 32 38 3A 34 39 0A 30 30 C2 A5 30 30 B2 E3 30 30 B7 BF BC E4 0A 00 00 00 00 00 00 00 00 00 00 0A 00 00 00 00 00 00 00 00 00 00 00 00 0A C7 EB C7 F3 3A 30 30 32 35 34 0A CF FB B7 C0 B1 C3 0A 1B 4A 01 1B 39\\n\\n\\n报文内容：\\n\\u001B@\\u001B1\\u0005\\u001B6\\u001B921/04/02 16:28:49\\n00楼00层00房间\\n\\n\\n请求:00254\\n消防泵\\n\\u001BJ\\u0001\\u001B9"}', 'report', 'record', 1, 2000, 1712829981145, 1712904087809),
	(1221, '反馈', 'JB-QG-LD128E(Q)II', '北京利达华信电子有限公司', 'JavaScript', 'device', '{"decode":{"main":"decode","code":"/**\\n * 解码器的入口函数\\n * 全局参数：\\n *     fox_edge_data：json string格式 或者 hex string格式的接收数据\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   提供给通道的发送数据。根据不同的通道服务，它可能是HEX结构的文本，也可能是JSON结构的对象，请自行根据选定的通道服务进行确认\\n */\\nfunction decode() {\\n\\tvar object = decodeStr(fox_edge_data, fox_edge_param);\\n  return JSON.stringify(object);\\n}\\n\\n/**\\n * 事件解码器函数：消火栓按钮报火警\\n * 全局参数：\\n *     fox_edge_data：hex string格式的接收数据\\n *                    XXX+[合法报文]+XXX，合法报文可能混杂在一堆其他数据之中\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   必须是列表格式的JSON字符串，并且JSON对象必须包含关键字【recordType】，否则不给与入库\\n */\\nfunction decodeStr(message, device_param) {\\n    var result = decodeType(message, \\"反馈\\");\\n    return result;\\n}"}}', '{"description":"报文格式：\\n以1B 40 1B 31 05 1B 36 1B 39开始，以0A 1B 4A 01 1B 39 字符结束的多行文本\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n测试报文1：\\n1B 40 1B 31 05 1B 36 1B 39 32 32 2F 30 38 2F 30 38 20 31 33 3A 32 30 3A 31 31 0A 30 30 C2 A5 30 30 B2 E3 30 30 B7 BF BC E4 0A 00 00 00 00 00 00 00 00 00 00 0A B3 AC CA D0 A3 B2 A3 C6 CE F7 00 00 0A B7 B4 C0 A1 3A 35 34 32 33 37 0A BE ED C1 B1 C3 C5 0A 1B 4A 01 1B 39\\n\\n报文内容：\\n\\u001B@\\u001B1\\u0005\\u001B6\\u001B922/08/08 13:20:11\\n00楼00层00房间\\n\\n超市２Ｆ西\\n反馈:54237\\n卷帘门\\n\\u001BJ\\u0001\\u001B9"}', 'report', 'record', 1, 2000, 1712830298356, 1712904045295),
	(1222, 'splitHandler', 'JB-QB-TX3001DY', '泰和安消防科技有限公司', 'JavaScript', 'channel', '{"decode":{"main":"decode","code":"/**\\n * 编码器的入口函数\\n * 全局参数：\\n *     message：hex string格式的接收数据\\n *              XX+[合法报文]+XXX，合法报文可能混杂在一堆其他数据之中\\n * 返回值：\\n *   从XXX+[合法报文]+XXX中，截取到的[合法报文]\\n */\\nfunction decode(message) {\\n    var starTag = \\"2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A\\";\\n    var endTag = \\"00 00 00 00 00 00 00 00 00 00 00 00 0A\\";\\n\\n    message = message.replace(/\\\\s+/g, \\"\\");\\n    starTag = starTag.replace(/\\\\s+/g, \\"\\");\\n    endTag = endTag.replace(/\\\\s+/g, \\"\\");\\n\\n    // 转换成大写\\n    message = message.toUpperCase();\\n    starTag = starTag.toUpperCase();\\n    endTag = endTag.toUpperCase();\\n\\n    // 寻找起始标记\\n    var start = message.indexOf(starTag);\\n    if (start < 0) {\\n        return \\"\\";\\n    }\\n\\n    // 寻找第一个结束标记\\n    var end = message.indexOf(endTag);\\n    if (end < 0) {\\n        return \\"\\";\\n    }\\n\\n    // 寻找后续多行\\n    var lines = message.substring(start, message.length);\\n    for (var i = 0; i < 8; i++) {\\n        var next = lines.indexOf(starTag, end + 2);\\n        var pos = lines.indexOf(endTag, end + 2);\\n\\n        // 检查：是否还有下一行，或者出现了实际上的下一行换行符\\n        if (pos < 0 || pos > next) {\\n            break;\\n        }\\n\\n        end = pos;\\n    }\\n\\n    // 分拆数据\\n    var data = message.substring(start, end + endTag.length);\\n\\n\\n    // 截取数据\\n    var result = data;\\n\\n    return result;\\n}\\n"}}', '{"description":"报文格式：\\n以\\n2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A\\n开始，\\n以多行\\n00 00 00 00 00 00 00 00 00 00 00 00 0A \\n字符结束的多行文本\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n测试报文1：\\n2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 32 33 2D 30 39 2D 30 38 20 31 33 3A 33 39 3A 33 34 0A B7 B4 C0 A1 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 0A 30 30 31 30 31 30 32 37 20 CF FB BB F0 CB A8 B0 B4 C5 A5 00 00 00 00 00 00 0A 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 0A\\n\\n报文内容：\\n********************************23-09-08 13:39:34\\n反馈\\n00101027 消火栓按钮"}', 'splitHandler', 'status', 1, 2000, 1712828091343, 1712932751308),
	(1223, 'libs', 'JB-QB-TX3001DY', '泰和安消防科技有限公司', 'JavaScript', 'device', '{"include":{"main":"include","code":"/**\\n * 按类型解码数据\\n *\\n * @param message 消息内容\\n * @param typeHeadTag 类型\\n * @returns {string|*[]} 数据\\n */\\nfunction decodeType(message, typeHeadTag) {\\n    var lines = message.split(\'\\\\n\');\\n\\n    // 剔除空行\\n    lines = removeEmpty(lines);\\n    if (lines.length < 2) {\\n        return \\"行数小于2\\";\\n    }\\n\\n    var timeHeadTag = \\"********************************\\";\\n\\n    var timeLine = findLine(lines, timeHeadTag);\\n    var typeLine = findLine(lines, typeHeadTag);\\n    var addrLine = findAdrLine(lines);\\n\\n\\n    if (typeLine.length !== 0 && timeLine.length !== 0) {\\n        lines = removeLine(lines, timeLine);\\n        lines = removeLine(lines, typeLine);\\n\\n        var oid = \'\'\\n        var src = \'\'\\n        if (addrLine.length !== 0) {\\n            var items = addrLine.split(\' \');\\n            if (items.length === 2) {\\n                oid = items[0];\\n                src = items[1];\\n            }\\n        }\\n\\n\\n        var almTime = timeLine.substring(timeHeadTag.length);\\n\\n        // 必须包含recordType字段，用来指明事件的类型\\n        var obj = {\\n            \\"recordType\\": typeHeadTag, \\"oid\\": oid, \\"src\\": src, \\"datetime\\": almTime, \\"data\\": lines\\n        };\\n\\n        // 必须以列表格式返回\\n        var result = [];\\n        result.push(obj);\\n\\n        return result;\\n    }\\n\\n    return \\"\\";\\n}\\n\\nfunction removeLine(array, line) {\\n    var dats = [];\\n    for (i = 0; i < array.length; i++) {\\n        if (array[i] === line) {\\n            continue;\\n        }\\n        dats.push(array[i]);\\n    }\\n\\n    return dats;\\n}\\n\\nfunction removeEmpty(lines) {\\n    var dats = [];\\n    for (var i = 0; i < lines.length; i++) {\\n        var line = lines[i].replace(/\\\\u0000/g, \'\');\\n        if (line.length == 0) {\\n            continue;\\n        }\\n\\n        dats.push(line);\\n    }\\n\\n    return dats;\\n}\\n\\nfunction findLine(lines, headTag) {\\n    for (var i = 0; i < lines.length; i++) {\\n        if (lines[i].indexOf(headTag) == 0) {\\n            return lines[i];\\n        }\\n    }\\n\\n    return \\"\\";\\n}\\n\\nfunction findAdrLine(lines) {\\n    for (var i = 0; i < lines.length; i++) {\\n        if (/^\\\\d+\\\\s+/.test(lines[i])) {\\n            return lines[i];\\n        }\\n    }\\n\\n    return \\"\\";\\n}\\n\\n"}}', '{"description":"报文格式：\\n以\\n2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A\\n开始，\\n以多行\\n00 00 00 00 00 00 00 00 00 00 00 00 0A \\n字符结束的多行文本\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n测试报文1：\\n2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 32 33 2D 30 39 2D 30 38 20 31 33 3A 33 39 3A 33 34 0A B7 B4 C0 A1 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 0A 30 30 31 30 31 30 32 37 20 CF FB BB F0 CB A8 B0 B4 C5 A5 00 00 00 00 00 00 0A 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 0A\\n\\n报文内容：\\n********************************23-09-08 13:39:34\\n反馈\\n00101027 消火栓按钮"}', 'include', 'record', 1, 2000, 1712903951637, 1712930549059),
	(1224, '主电故障', 'JB-QB-TX3001DY', '泰和安消防科技有限公司', 'JavaScript', 'device', '{"decode":{"main":"decode","code":"/**\\n * 解码器的入口函数\\n * 全局参数：\\n *     fox_edge_data：json string格式 或者 hex string格式的接收数据\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   提供给通道的发送数据。根据不同的通道服务，它可能是HEX结构的文本，也可能是JSON结构的对象，请自行根据选定的通道服务进行确认\\n */\\nfunction decode() {\\n\\tvar object = decodeStr(fox_edge_data, fox_edge_param);\\n  return JSON.stringify(object);\\n}\\n\\n/**\\n * 事件解码器函数：消火栓按钮报火警\\n * 全局参数：\\n *     fox_edge_data：hex string格式的接收数据\\n *                    XXX+[合法报文]+XXX，合法报文可能混杂在一堆其他数据之中\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   必须是列表格式的JSON字符串，并且JSON对象必须包含关键字【recordType】，否则不给与入库\\n */\\nfunction decodeStr(message, device_param) {\\n    var result = decodeType(message, \\"主电故障\\");\\n    return result;\\n}"}}', '{"description":"报文格式：\\n以\\n2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A\\n开始，\\n以多行\\n00 00 00 00 00 00 00 00 00 00 00 00 0A \\n字符结束的多行文本\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n测试报文1：\\n2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 32 33 2D 30 39 2D 30 38 20 31 33 3A 30 30 3A 32 33 0A D6 F7 B5 E7 B9 CA D5 CF 00 00 00 00 00 00 00 00 00 00 00 00 0A 30 30 31 BA C5 D6 F7 BB FA 00 00 00 00 0A \\n\\n报文内容：\\n********************************23-09-08 13:00:23\\n主电故障\\n"}', 'report', 'record', 1, 2000, 1712829524043, 1712930782445),
	(1225, '备电故障', 'JB-QB-TX3001DY', '泰和安消防科技有限公司', 'JavaScript', 'device', '{"decode":{"main":"decode","code":"/**\\n * 解码器的入口函数\\n * 全局参数：\\n *     fox_edge_data：json string格式 或者 hex string格式的接收数据\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   提供给通道的发送数据。根据不同的通道服务，它可能是HEX结构的文本，也可能是JSON结构的对象，请自行根据选定的通道服务进行确认\\n */\\nfunction decode() {\\n\\tvar object = decodeStr(fox_edge_data, fox_edge_param);\\n  return JSON.stringify(object);\\n}\\n\\n/**\\n * 事件解码器函数：消火栓按钮报火警\\n * 全局参数：\\n *     fox_edge_data：hex string格式的接收数据\\n *                    XXX+[合法报文]+XXX，合法报文可能混杂在一堆其他数据之中\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   必须是列表格式的JSON字符串，并且JSON对象必须包含关键字【recordType】，否则不给与入库\\n */\\nfunction decodeStr(message, device_param) {\\n    var result = decodeType(message, \\"备电故障\\");\\n    return result;\\n}"}}', '{"description":"报文格式：\\n以\\n2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A\\n开始，\\n以多行\\n00 00 00 00 00 00 00 00 00 00 00 00 0A \\n字符结束的多行文本\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n测试报文1：\\n2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 32 33 2D 30 39 2D 30 38 20 31 32 3A 35 35 3A 31 31 0A B1 B8 B5 E7 B9 CA D5 CF 00 00 00 00 00 00 00 00 00 00 00 00 0A 30 30 31 BA C5 D6 F7 BB FA 00 00 00 00 0A\\n\\n报文内容：\\n********************************23-09-08 12:55:11\\n备电故障\\n"}', 'report', 'record', 1, 2000, 1712829661152, 1712930939457),
	(1226, '系统消音', 'JB-QB-TX3001DY', '泰和安消防科技有限公司', 'JavaScript', 'device', '{"decode":{"main":"decode","code":"/**\\n * 解码器的入口函数\\n * 全局参数：\\n *     fox_edge_data：json string格式 或者 hex string格式的接收数据\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   提供给通道的发送数据。根据不同的通道服务，它可能是HEX结构的文本，也可能是JSON结构的对象，请自行根据选定的通道服务进行确认\\n */\\nfunction decode() {\\n\\tvar object = decodeStr(fox_edge_data, fox_edge_param);\\n  return JSON.stringify(object);\\n}\\n\\n/**\\n * 事件解码器函数：消火栓按钮报火警\\n * 全局参数：\\n *     fox_edge_data：hex string格式的接收数据\\n *                    XXX+[合法报文]+XXX，合法报文可能混杂在一堆其他数据之中\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   必须是列表格式的JSON字符串，并且JSON对象必须包含关键字【recordType】，否则不给与入库\\n */\\nfunction decodeStr(message, device_param) {\\n    var result = decodeType(message, \\"系统消音\\");\\n    return result;\\n}"}}', '{"description":"报文格式：\\n以\\n2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A\\n开始，\\n以多行\\n00 00 00 00 00 00 00 00 00 00 00 00 0A \\n字符结束的多行文本\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n测试报文1：\\n2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 32 33 2D 30 39 2D 30 38 20 31 32 3A 35 35 3A 32 31 0A CF B5 CD B3 CF FB D2 F4 00 00 00 00 00 00 00 00 00 00 00 00 0A \\n\\n报文内容：\\n********************************23-09-08 12:55:21\\n系统消音\\n"}', 'report', 'record', 1, 2000, 1712829661152, 1712931004257),
	(1227, '系统复位', 'JB-QB-TX3001DY', '泰和安消防科技有限公司', 'JavaScript', 'device', '{"decode":{"main":"decode","code":"/**\\n * 解码器的入口函数\\n * 全局参数：\\n *     fox_edge_data：json string格式 或者 hex string格式的接收数据\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   提供给通道的发送数据。根据不同的通道服务，它可能是HEX结构的文本，也可能是JSON结构的对象，请自行根据选定的通道服务进行确认\\n */\\nfunction decode() {\\n\\tvar object = decodeStr(fox_edge_data, fox_edge_param);\\n  return JSON.stringify(object);\\n}\\n\\n/**\\n * 事件解码器函数：消火栓按钮报火警\\n * 全局参数：\\n *     fox_edge_data：hex string格式的接收数据\\n *                    XXX+[合法报文]+XXX，合法报文可能混杂在一堆其他数据之中\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   必须是列表格式的JSON字符串，并且JSON对象必须包含关键字【recordType】，否则不给与入库\\n */\\nfunction decodeStr(message, device_param) {\\n    var result = decodeType(message, \\"系统复位\\");\\n    return result;\\n}"}}', '{"description":"报文格式：\\n以\\n2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A\\n开始，\\n以多行\\n00 00 00 00 00 00 00 00 00 00 00 00 0A \\n字符结束的多行文本\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n测试报文1：\\n2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 32 33 2D 30 39 2D 30 38 20 31 33 3A 30 33 3A 30 32 0A CF B5 CD B3 B8 B4 CE BB 00 00 00 00 00 00 00 00 00 00 00 00 0A\\n\\n报文内容：\\n********************************23-09-08 13:03:02\\n系统复位\\n"}', 'report', 'record', 1, 2000, 1712829661152, 1712931056390),
	(1228, '首警', 'JB-QB-TX3001DY', '泰和安消防科技有限公司', 'JavaScript', 'device', '{"decode":{"main":"decode","code":"/**\\n * 解码器的入口函数\\n * 全局参数：\\n *     fox_edge_data：json string格式 或者 hex string格式的接收数据\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   提供给通道的发送数据。根据不同的通道服务，它可能是HEX结构的文本，也可能是JSON结构的对象，请自行根据选定的通道服务进行确认\\n */\\nfunction decode() {\\n\\tvar object = decodeStr(fox_edge_data, fox_edge_param);\\n  return JSON.stringify(object);\\n}\\n\\n/**\\n * 事件解码器函数：消火栓按钮报火警\\n * 全局参数：\\n *     fox_edge_data：hex string格式的接收数据\\n *                    XXX+[合法报文]+XXX，合法报文可能混杂在一堆其他数据之中\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   必须是列表格式的JSON字符串，并且JSON对象必须包含关键字【recordType】，否则不给与入库\\n */\\nfunction decodeStr(message, device_param) {\\n    var result = decodeType(message, \\"首警\\");\\n    return result;\\n}"}}', '{"description":"报文格式：\\n以\\n2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A\\n开始，\\n以多行\\n00 00 00 00 00 00 00 00 00 00 00 00 0A \\n字符结束的多行文本\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n测试报文1：\\n2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 32 33 2D 30 39 2D 30 38 20 31 33 3A 30 35 3A 35 36 0A CA D7 BE AF 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 0A 30 30 31 30 31 30 30 31 20 B5 E3 D0 CD B9 E2 B5 E7 B8 D0 D1 CC 00 00 00 00 0A 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 0A \\n\\n报文内容：\\n首警\\n00101001 点型光电感烟\\n"}', 'report', 'record', 1, 2000, 1712829661152, 1712931099667),
	(1229, '火警', 'JB-QB-TX3001DY', '泰和安消防科技有限公司', 'JavaScript', 'device', '{"decode":{"main":"decode","code":"/**\\n * 解码器的入口函数\\n * 全局参数：\\n *     fox_edge_data：json string格式 或者 hex string格式的接收数据\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   提供给通道的发送数据。根据不同的通道服务，它可能是HEX结构的文本，也可能是JSON结构的对象，请自行根据选定的通道服务进行确认\\n */\\nfunction decode() {\\n\\tvar object = decodeStr(fox_edge_data, fox_edge_param);\\n  return JSON.stringify(object);\\n}\\n\\n/**\\n * 事件解码器函数：消火栓按钮报火警\\n * 全局参数：\\n *     fox_edge_data：hex string格式的接收数据\\n *                    XXX+[合法报文]+XXX，合法报文可能混杂在一堆其他数据之中\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   必须是列表格式的JSON字符串，并且JSON对象必须包含关键字【recordType】，否则不给与入库\\n */\\nfunction decodeStr(message, device_param) {\\n    var result = decodeType(message, \\"火警\\");\\n    return result;\\n}"}}', '{"description":"报文格式：\\n以\\n2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A\\n开始，\\n以多行\\n00 00 00 00 00 00 00 00 00 00 00 00 0A \\n字符结束的多行文本\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n测试报文1：\\n2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 32 33 2D 30 39 2D 30 38 20 31 33 3A 31 30 3A 35 35 0A BB F0 BE AF 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 0A 30 30 31 30 31 30 32 31 20 CA D6 B6 AF B1 A8 BE AF B0 B4 C5 A5 00 00 00 00 0A 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 0A \\n\\n报文内容：\\n********************************23-09-08 13:10:55\\n火警\\n00101021 手动报警按钮"}', 'report', 'record', 1, 2000, 1712829661152, 1712931151137),
	(1230, '启动', 'JB-QB-TX3001DY', '泰和安消防科技有限公司', 'JavaScript', 'device', '{"decode":{"main":"decode","code":"/**\\n * 解码器的入口函数\\n * 全局参数：\\n *     fox_edge_data：json string格式 或者 hex string格式的接收数据\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   提供给通道的发送数据。根据不同的通道服务，它可能是HEX结构的文本，也可能是JSON结构的对象，请自行根据选定的通道服务进行确认\\n */\\nfunction decode() {\\n\\tvar object = decodeStr(fox_edge_data, fox_edge_param);\\n  return JSON.stringify(object);\\n}\\n\\n/**\\n * 事件解码器函数：消火栓按钮报火警\\n * 全局参数：\\n *     fox_edge_data：hex string格式的接收数据\\n *                    XXX+[合法报文]+XXX，合法报文可能混杂在一堆其他数据之中\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   必须是列表格式的JSON字符串，并且JSON对象必须包含关键字【recordType】，否则不给与入库\\n */\\nfunction decodeStr(message, device_param) {\\n    var result = decodeType(message, \\"启动\\");\\n    return result;\\n}"}}', '{"description":"报文格式：\\n以\\n2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A\\n开始，\\n以多行\\n00 00 00 00 00 00 00 00 00 00 00 00 0A \\n字符结束的多行文本\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n测试报文1：\\n2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 32 33 2D 30 39 2D 30 38 20 31 33 3A 31 30 3A 35 36 0A C6 F4 B6 AF 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 0A 30 30 31 30 31 30 32 34 20 C9 F9 B9 E2 BE AF B1 A8 C6 F7 00 00 00 00 00 00 0A 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 0A \\n\\n报文内容：\\n********************************23-09-08 13:10:56\\n启动\\n00101024 声光警报器\\n\\n"}', 'report', 'record', 1, 2000, 1712829661152, 1712931618397),
	(1231, '反馈', 'JB-QB-TX3001DY', '泰和安消防科技有限公司', 'JavaScript', 'device', '{"decode":{"main":"decode","code":"/**\\n * 解码器的入口函数\\n * 全局参数：\\n *     fox_edge_data：json string格式 或者 hex string格式的接收数据\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   提供给通道的发送数据。根据不同的通道服务，它可能是HEX结构的文本，也可能是JSON结构的对象，请自行根据选定的通道服务进行确认\\n */\\nfunction decode() {\\n\\tvar object = decodeStr(fox_edge_data, fox_edge_param);\\n  return JSON.stringify(object);\\n}\\n\\n/**\\n * 事件解码器函数：消火栓按钮报火警\\n * 全局参数：\\n *     fox_edge_data：hex string格式的接收数据\\n *                    XXX+[合法报文]+XXX，合法报文可能混杂在一堆其他数据之中\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   必须是列表格式的JSON字符串，并且JSON对象必须包含关键字【recordType】，否则不给与入库\\n */\\nfunction decodeStr(message, device_param) {\\n    var result = decodeType(message, \\"反馈\\");\\n    return result;\\n}"}}', '{"description":"报文格式：\\n以\\n2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A\\n开始，\\n以多行\\n00 00 00 00 00 00 00 00 00 00 00 00 0A \\n字符结束的多行文本\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n测试报文1：\\n2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 32 33 2D 30 39 2D 30 38 20 31 33 3A 33 39 3A 33 34 0A B7 B4 C0 A1 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 0A 30 30 31 30 31 30 32 37 20 CF FB BB F0 CB A8 B0 B4 C5 A5 00 00 00 00 00 00 0A 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 0A\\n\\n报文内容：\\n********************************23-09-08 13:39:34\\n反馈\\n00101027 消火栓按钮\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n测试报文2：\\n2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 32 33 2D 30 39 2D 30 38 20 31 33 3A 31 30 3A 35 36 0A B7 B4 C0 A1 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 0A 30 30 31 30 31 30 32 34 20 C9 F9 B9 E2 BE AF B1 A8 C6 F7 00 00 00 00 00 00 0A 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 0A "}', 'report', 'record', 1, 2000, 1712829661152, 1712931678177),
	(1232, '通讯故障', 'JB-QB-TX3001DY', '泰和安消防科技有限公司', 'JavaScript', 'device', '{"decode":{"main":"decode","code":"/**\\n * 解码器的入口函数\\n * 全局参数：\\n *     fox_edge_data：json string格式 或者 hex string格式的接收数据\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   提供给通道的发送数据。根据不同的通道服务，它可能是HEX结构的文本，也可能是JSON结构的对象，请自行根据选定的通道服务进行确认\\n */\\nfunction decode() {\\n\\tvar object = decodeStr(fox_edge_data, fox_edge_param);\\n  return JSON.stringify(object);\\n}\\n\\n/**\\n * 事件解码器函数：消火栓按钮报火警\\n * 全局参数：\\n *     fox_edge_data：hex string格式的接收数据\\n *                    XXX+[合法报文]+XXX，合法报文可能混杂在一堆其他数据之中\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   必须是列表格式的JSON字符串，并且JSON对象必须包含关键字【recordType】，否则不给与入库\\n */\\nfunction decodeStr(message, device_param) {\\n    var result = decodeType(message, \\"通讯故障\\");\\n    return result;\\n}"}}', '{"description":"报文格式：\\n以\\n2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A\\n开始，\\n以多行\\n00 00 00 00 00 00 00 00 00 00 00 00 0A \\n字符结束的多行文本\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n测试报文1：\\n2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 32 33 2D 30 39 2D 30 38 20 31 33 3A 32 37 3A 31 39 0A CD A8 D1 B6 B9 CA D5 CF 00 00 00 00 00 00 00 00 00 00 00 00 0A 30 30 31 30 31 30 30 31 20 B5 E3 D0 CD B9 E2 B5 E7 B8 D0 D1 CC 00 00 00 00 0A 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 0A\\n\\n报文内容：\\n********************************23-09-08 13:27:19\\n通讯故障\\n00101001 点型光电感烟\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n测试报文2：\\n2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 32 33 2D 30 39 2D 30 38 20 31 33 3A 33 31 3A 31 33 0A CD A8 D1 B6 B9 CA D5 CF 00 00 00 00 00 00 00 00 00 00 00 00 0A 30 30 31 30 31 30 32 31 20 CA D6 B6 AF B1 A8 BE AF B0 B4 C5 A5 00 00 00 00 0A 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 0A"}', 'report', 'record', 1, 2000, 1712829661152, 1712931788810),
	(1233, '多线点启动', 'JB-QB-TX3001DY', '泰和安消防科技有限公司', 'JavaScript', 'device', '{"decode":{"main":"decode","code":"/**\\n * 解码器的入口函数\\n * 全局参数：\\n *     fox_edge_data：json string格式 或者 hex string格式的接收数据\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   提供给通道的发送数据。根据不同的通道服务，它可能是HEX结构的文本，也可能是JSON结构的对象，请自行根据选定的通道服务进行确认\\n */\\nfunction decode() {\\n\\tvar object = decodeStr(fox_edge_data, fox_edge_param);\\n  return JSON.stringify(object);\\n}\\n\\n/**\\n * 事件解码器函数：消火栓按钮报火警\\n * 全局参数：\\n *     fox_edge_data：hex string格式的接收数据\\n *                    XXX+[合法报文]+XXX，合法报文可能混杂在一堆其他数据之中\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   必须是列表格式的JSON字符串，并且JSON对象必须包含关键字【recordType】，否则不给与入库\\n */\\nfunction decodeStr(message, device_param) {\\n    var result = decodeType(message, \\"多线点启动\\");\\n    return result;\\n}"}}', '{"description":"报文格式：\\n以\\n2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A\\n开始，\\n以多行\\n00 00 00 00 00 00 00 00 00 00 00 00 0A \\n字符结束的多行文本\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n测试报文1：\\n2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 32 33 2D 30 39 2D 30 38 20 31 33 3A 33 39 3A 34 36 0A B6 E0 CF DF B5 E3 C6 F4 B6 AF 00 00 00 00 00 00 00 00 00 00 0A 38 34 30 30 30 30 30 31 20 CF FB B7 C0 CB A8 B1 C3 00 00 00 00 00 00 00 00 0A 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 0A \\n\\n报文内容：\\n********************************23-09-08 13:39:46\\n多线点启动\\n84000001 消防栓泵\\n\\n"}', 'report', 'record', 1, 2000, 1712829661152, 1712931899006),
	(1234, '多线点反馈', 'JB-QB-TX3001DY', '泰和安消防科技有限公司', 'JavaScript', 'device', '{"decode":{"main":"decode","code":"/**\\n * 解码器的入口函数\\n * 全局参数：\\n *     fox_edge_data：json string格式 或者 hex string格式的接收数据\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   提供给通道的发送数据。根据不同的通道服务，它可能是HEX结构的文本，也可能是JSON结构的对象，请自行根据选定的通道服务进行确认\\n */\\nfunction decode() {\\n\\tvar object = decodeStr(fox_edge_data, fox_edge_param);\\n  return JSON.stringify(object);\\n}\\n\\n/**\\n * 事件解码器函数：消火栓按钮报火警\\n * 全局参数：\\n *     fox_edge_data：hex string格式的接收数据\\n *                    XXX+[合法报文]+XXX，合法报文可能混杂在一堆其他数据之中\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   必须是列表格式的JSON字符串，并且JSON对象必须包含关键字【recordType】，否则不给与入库\\n */\\nfunction decodeStr(message, device_param) {\\n    var result = decodeType(message, \\"多线点反馈\\");\\n    return result;\\n}"}}', '{"description":"报文格式：\\n以\\n2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A\\n开始，\\n以多行\\n00 00 00 00 00 00 00 00 00 00 00 00 0A \\n字符结束的多行文本\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n测试报文1：\\n2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 2A 32 33 2D 30 39 2D 30 38 20 31 33 3A 33 39 3A 33 34 0A B7 B4 C0 A1 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 0A 30 30 31 30 31 30 32 37 20 CF FB BB F0 CB A8 B0 B4 C5 A5 00 00 00 00 00 00 0A 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 0A\\n\\n报文内容：\\n********************************23-09-08 13:39:34\\n反馈\\n00101027 消火栓按钮"}', 'report', 'record', 1, 2000, 1712829661152, 1712930797228),
	(1235, 'splitHandler', 'JB-TGL-TX3006C', '泰和安消防科技有限公司', 'JavaScript', 'channel', '{"decode":{"main":"decode","code":"/**\\n * 编码器的入口函数\\n * 全局参数：\\n *     message：hex string格式的接收数据\\n *              XX+[合法报文]+XXX，合法报文可能混杂在一堆其他数据之中\\n * 返回值：\\n *   从XXX+[合法报文]+XXX中，截取到的[合法报文]\\n */\\nfunction decode(message) {\\n    var starTag = \\"7E 00 00\\";\\n    var endTag = \\"7E\\";\\n\\n    message = message.replace(/\\\\s+/g, \\"\\");\\n    starTag = starTag.replace(/\\\\s+/g, \\"\\");\\n    endTag = endTag.replace(/\\\\s+/g, \\"\\");\\n\\n\\n    // 转换成大写\\n    message = message.toUpperCase();\\n    starTag = starTag.toUpperCase();\\n    endTag = endTag.toUpperCase();\\n\\n    // 找到完整的段落\\n    var section = getSection(message, starTag, endTag);\\n    if (section.start === -1 || section.end === -1) {\\n        return \\"\\";\\n    }\\n\\n    var lines = message.substring(section.start, section.end);\\n\\n    return lines;\\n\\n}\\n\\nfunction getSection(message, starTag, endTag) {\\n    var data = {\\n        \\"start\\": -1, \\"end\\": -1,\\n    }\\n\\n    // 找到起始符\\n    var start = message.indexOf(starTag);\\n    if (start < 0) {\\n        return data;\\n    }\\n\\n    // 切掉前面的数据\\n    var hexs = message.substring(start);\\n\\n    var end = 0;\\n    while (hexs.length > 0) {\\n        // 切出一行\\n        var line = getLine(hexs, starTag, endTag);\\n        if (line.length === 0) {\\n            return data;\\n        }\\n\\n        end += line.length;\\n\\n        var nextLn = getLn(line);\\n\\n        if (nextLn === \'00\') {\\n            data.start = start;\\n            data.end = start + end;\\n            return data;\\n        }\\n\\n        hexs = hexs.substring(line.length, hexs.length);\\n    }\\n\\n    // 场景1：找多行粘连时的结束符，此时可能存在，也可能不存在0A0A\\n    var endStart = hexs.indexOf(endTag + starTag, start + starTag.length);\\n    if (endStart >= 0) {\\n        data.start = start;\\n        data.end = start + endStart + endTag.length;\\n        return data;\\n    }\\n\\n    // 场景2：单行场景\\n    var end = hexs.indexOf(endTag, start + starTag.length);\\n    if (end < 0) {\\n        return data;\\n    }\\n\\n    data.start = start;\\n    data.end = start + end;\\n    return data;\\n}\\n\\n\\n/**\\n * 从行中取出行号\\n * 例如：7E 00 00 01 01 29 01 08 05 01 01 66 00 3D 00 03 E5 70 7E\\n * 其中的01\\n *\\n * @param line 行信息\\n * @returns {string}\\n */\\nfunction getLn(line) {\\n    return line.substring(12, 14);\\n}\\n\\n/**\\n * 分拆行\\n * @param message 消息\\n * @param starTag 起始符\\n * @param endTag 结束符\\n * @returns {string} 行\\n */\\nfunction getLine(message, starTag, endTag) {\\n    // 寻找起始标记\\n    var start = message.indexOf(starTag);\\n    if (start !== 0) {\\n        return \\"\\";\\n    }\\n\\n    // 检测：最小长度\\n    if (message.length < 22) {\\n        return \\"\\";\\n    }\\n\\n    // 数据大小\\n    var size = parseInt(message.substring(14, 16), 16);\\n\\n    // 切第一行\\n    var line = message.substring(start, start + 22 + size * 2);\\n    if (line.substring(line.length - endTag.length, line.length) !== endTag) {\\n        return \\"\\";\\n    }\\n\\n    // 截取第一行，并进行行验证\\n    if (!verifyLine(line)) {\\n        return \\"\\";\\n    }\\n\\n    return line;\\n}\\n\\n/**\\n * 验证CRC\\n *\\n * @param line 行信息\\n * @returns {boolean} 是否成功\\n */\\nfunction verifyLine(line) {\\n    if (line.length < 24) {\\n        return false;\\n    }\\n\\n    var body = line.substring(0, line.length - 6);\\n\\n    // 校验帧长度\\n    var len = parseInt(line.substring(14, 16), 16);\\n    if (line.length != 22 + len * 2) {\\n        return false;\\n    }\\n\\n\\n    var ch = line.substring(body.length, body.length + 2);\\n    var cl = line.substring(body.length + 2, body.length + 4);\\n    var crc = calculateCRC16(body, 0x0000, 0xA001);\\n\\n    return crc === cl + ch;\\n}\\n\\n/**\\n * CRC16校验\\n * 范例：calculateCRC16(\\"7E0000000133000100\\", 0x0000, 0xA001);\\n *\\n * @param dataHexString 无空格的HEX格式文本，例如：\\"7E0000000133000100\\";\\n * @param init CRC16的初始值，例如：0x0000\\n * @param poly CRC16的多项式，例如：0xA001\\n * @returns {string}\\n */\\nfunction calculateCRC16(dataHexString, init, poly) {\\n    var dataBytes = [];\\n    for (var i = 0; i < dataHexString.length; i += 2) {\\n        dataBytes.push(parseInt(dataHexString.substring(i, i + 2), 16));\\n    }\\n\\n    var crc = init;\\n    var polynomial = poly;  // This is the polynomial x^16 + x^15 + x^2 + 1\\n\\n    for (var i = 0; i < dataBytes.length; i++) {\\n        crc ^= dataBytes[i];\\n        for (var j = 0; j < 8; j++) {\\n            if (crc & 0x0001) {\\n                crc = ((crc >> 1) ^ polynomial) & 0xFFFF;\\n            } else {\\n                crc >>= 1;\\n            }\\n        }\\n    }\\n\\n    crc = crc & 0xffff\\n\\n    var txt = crc.toString(16).toUpperCase();\\n    txt = padStart(txt, 4, \'0\');\\n    return txt;\\n}\\n\\nfunction padStart(str, length, ch) {\\n    while (str.length < length) {\\n        str = ch + str;\\n    }\\n\\n    return str;\\n}"}}', '{"description":"报文格式：\\n1、由多行报文，组成一帧数据\\n2、行特征：每行以7E 00 00开始，以7E结束，采用CRC16-IBM校验\\n3、行格式：\\n范例：【7E 00 00】【00 01】  【32】  【00】【 01】  【 00】 【 1B 4A】【7E】 \\n说明：【行头】    【帧类型】【帧号】 【行号】【长度】【数据】 【CRC16】【行尾】\\n4、同一帧，帧号都相同，行号从01递增，最后一行以00结束\\n\\n范例：\\n7E 00 00 01 01 29 01 08 05 01 01 66 00 3D 00 03 E5 70 7E \\n7E 00 00 01 01 29 02 08 00 00 00 18 01 0F 0B 0D CA 9C 7E \\n7E 00 00 01 01 29 03 01 20 ED A7 7E \\n7E 00 00 01 01 29 00 02 0F 00 8B 39 7E \\n\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n测试报文1：\\n7E 00 00 01 01 29 01 08 05 01 01 66 00 3D 00 03 E5 70 7E 7E 00 00 01 01 29 02 08 00 00 00 18 01 0F 0B 0D CA 9C 7E 7E 00 00 01 01 29 03 01 20 ED A7 7E 7E 00 00 01 01 29 00 02 0F 00 8B 39 7E\\n\\n"}', 'splitHandler', 'status', 1, 2000, 1712828091343, 1713255675182),
	(1236, 'libs', 'JB-TGL-TX3006C', '泰和安消防科技有限公司', 'JavaScript', 'device', '{"include":{"main":"include","code":"\\n/**\\n * 按类型解码数据\\n * @param message 消息内容\\n * @returns {{data, success, sn, type, message}}\\n */\\nfunction decodeObj(message) {\\n    var starTag = \\"7E 00 00\\";\\n    var endTag = \\"7E\\";\\n\\n    message = message.replace(/\\\\s+/g, \\"\\");\\n    starTag = starTag.replace(/\\\\s+/g, \\"\\");\\n    endTag = endTag.replace(/\\\\s+/g, \\"\\");\\n\\n    // 转换成大写\\n    message = message.toUpperCase();\\n    starTag = starTag.toUpperCase();\\n    endTag = endTag.toUpperCase();\\n\\n    // 找到起始符\\n    var firstStart = message.indexOf(starTag);\\n    if (firstStart < 0) {\\n        return buildResult(\\"\\", \\"\\", \\"\\", false, \\"找不到起始符\\");\\n    }\\n\\n    // 切掉前面的数据\\n    message = message.substring(firstStart);\\n\\n    // 切出第一行\\n    var firstLine = getLine(message, starTag, endTag);\\n    if (firstLine.length === 0) {\\n        return buildResult(\\"\\", \\"\\", \\"\\", false, \\"行格式不正确\\");\\n    }\\n\\n\\n    // 取出行信息\\n    var firstType = getType(firstLine);\\n    var firstSn = getSn(firstLine);\\n    var firstLn = getLn(firstLine);\\n    var firstData = getData(firstLine);\\n\\n\\n    // 检查：第1行是否为结束行\\n    if (firstLn === \'00\') {\\n        return buildResult(firstType, firstSn, firstData, true, \\"\\");\\n    }\\n\\n\\n    var fullData = firstData;\\n\\n\\n    // 寻找后续多行\\n    var lines = message.substring(firstLine.length, message.length);\\n    for (var i = 0; i < 8; i++) {\\n        // 校验：是否以起始符开始\\n        var nextStart = lines.indexOf(starTag);\\n        if (nextStart < 0) {\\n            return buildResult(\\"\\", \\"\\", \\"\\", false, \\"找不到起始符\\");\\n        }\\n\\n        // 切下一行\\n        var nextLine = getLine(lines, starTag, endTag);\\n        if (nextLine.length === 0) {\\n            return buildResult(\\"\\", \\"\\", \\"\\", false, \\"行格式不正确\\");\\n        }\\n\\n        // 剔除找到的行\\n        lines = lines.substring(nextLine.length, message.length);\\n\\n\\n        var nextType = getType(nextLine);\\n        var nextSn = getSn(nextLine);\\n        var nextLn = getLn(nextLine);\\n        var nextData = getData(nextLine);\\n\\n        fullData += nextData;\\n\\n        if (nextLn === \'00\') {\\n            return buildResult(firstType, firstSn, fullData, true, \\"\\");\\n        }\\n\\n        // 检查：是否到达下一组数据\\n        if (firstType !== nextType || firstSn !== nextSn) {\\n            return buildResult(\\"\\", \\"\\", \\"\\", false, \\"行信息不对齐\\");\\n        }\\n    }\\n\\n    return buildResult(\\"\\", \\"\\", \\"\\", false, \\"验证不通过\\");\\n}\\n\\n\\nfunction formatDevAdr(tagAdr) {\\n    var devAdr = padStart(String(parseInt(tagAdr.substring(0, 2), 16)), 3, \'0\');\\n    devAdr += padStart(String(parseInt(tagAdr.substring(2, 4), 16)), 2, \'0\');\\n    devAdr += padStart(String(parseInt(tagAdr.substring(4, 6), 16)), 3, \'0\');\\n\\n    return devAdr;\\n}\\n\\nfunction formatTime(tagTime) {\\n    var time = \'20\' + parseInt(tagTime.substring(0, 2), 16);\\n    time += \'-\';\\n    time += padStart(String(parseInt(tagTime.substring(2, 4), 16)), 2, \'0\');\\n    time += \'-\';\\n    time += padStart(String(parseInt(tagTime.substring(4, 6), 16)), 2, \'0\');\\n    time += \' \';\\n    time += padStart(String(parseInt(tagTime.substring(6, 8), 16)), 2, \'0\');\\n    time += \':\';\\n    time += padStart(String(parseInt(tagTime.substring(8, 10), 16)), 2, \'0\');\\n    time += \':\';\\n    time += padStart(String(parseInt(tagTime.substring(10, 12), 16)), 2, \'0\');\\n\\n    return time;\\n}\\n\\n/**\\n * 生成返回的结构\\n * @param type 类型\\n * @param sn 流水号\\n * @param data 数据\\n * @param success 是否成功\\n * @param message 异常信息\\n * @returns {{data, success, sn, type, message}}\\n */\\nfunction buildResult(type, sn, data, success, message) {\\n    return {\\n        \\"type\\": type, \\"sn\\": sn, \\"data\\": data, \\"success\\": success, \\"message\\": message\\n    };\\n}\\n\\n/**\\n * 从行中取出帧类型\\n *\\n * @param line 行信息\\n * @returns {string} 帧类型，例如：0101\\n */\\nfunction getType(line) {\\n    return line.substring(6, 10);\\n}\\n\\n/**\\n * 从行中取出帧序号\\n *\\n * @param line 行信息，例如：38\\n * @returns {string}\\n */\\nfunction getSn(line) {\\n    return line.substring(10, 12);\\n}\\n\\n/**\\n * 从行中取出行号\\n * 例如：7E 00 00 01 01 29 01 08 05 01 01 66 00 3D 00 03 E5 70 7E\\n * 其中的01\\n *\\n * @param line 行信息\\n * @returns {string}\\n */\\nfunction getLn(line) {\\n    return line.substring(12, 14);\\n}\\n\\n/**\\n * 从行中取出数据区\\n * 例如：7E 00 00 01 01 29 01 08 05 01 01 66 00 3D 00 03 E5 70 7E\\n * 其中的05 01 01 66 00 3D 00 03\\n *\\n * @param line 行信息\\n * @returns {string}\\n */\\nfunction getData(line) {\\n    return line.substring(16, line.length - 6);\\n}\\n\\n/**\\n * 分拆行\\n * @param message 消息\\n * @param starTag 起始符\\n * @param endTag 结束符\\n * @returns {string} 行\\n */\\nfunction getLine(message, starTag, endTag) {\\n    // 寻找起始标记\\n    var start = message.indexOf(starTag);\\n    if (start !== 0) {\\n        return \\"\\";\\n    }\\n\\n    // 检测：最小长度\\n    if (message.length < 22) {\\n        return \\"\\";\\n    }\\n\\n    // 数据大小\\n    var size = parseInt(message.substring(14, 16), 16);\\n\\n    // 切第一行\\n    var line = message.substring(start, start + 22 + size * 2);\\n    if (line.substring(line.length - endTag.length, line.length) !== endTag) {\\n        return \\"\\";\\n    }\\n\\n    // 截取第一行，并进行行验证\\n    if (!verifyLine(line)) {\\n        return \\"\\";\\n    }\\n\\n    return line;\\n}\\n\\n/**\\n * 验证CRC\\n *\\n * @param line 行信息\\n * @returns {boolean} 是否成功\\n */\\nfunction verifyLine(line) {\\n    if (line.length < 24) {\\n        return false;\\n    }\\n\\n    var body = line.substring(0, line.length - 6);\\n\\n    // 校验帧长度\\n    var len = parseInt(line.substring(14, 16), 16);\\n    if (line.length != 22 + len * 2) {\\n        return false;\\n    }\\n\\n\\n    var ch = line.substring(body.length, body.length + 2);\\n    var cl = line.substring(body.length + 2, body.length + 4);\\n    var crc = calculateCRC16(body, 0x0000, 0xA001);\\n\\n    return crc === cl + ch;\\n}\\n\\n/**\\n * CRC16校验\\n * 范例：calculateCRC16(\\"7E0000000133000100\\", 0x0000, 0xA001);\\n *\\n * @param dataHexString 无空格的HEX格式文本，例如：\\"7E0000000133000100\\";\\n * @param init CRC16的初始值，例如：0x0000\\n * @param poly CRC16的多项式，例如：0xA001\\n * @returns {string}\\n */\\nfunction calculateCRC16(dataHexString, init, poly) {\\n    var dataBytes = [];\\n    for (var i = 0; i < dataHexString.length; i += 2) {\\n        dataBytes.push(parseInt(dataHexString.substring(i, i + 2), 16));\\n    }\\n\\n    var crc = init;\\n    var polynomial = poly;  // This is the polynomial x^16 + x^15 + x^2 + 1\\n\\n    for (var i = 0; i < dataBytes.length; i++) {\\n        crc ^= dataBytes[i];\\n        for (var j = 0; j < 8; j++) {\\n            if (crc & 0x0001) {\\n                crc = ((crc >> 1) ^ polynomial) & 0xFFFF;\\n            } else {\\n                crc >>= 1;\\n            }\\n        }\\n    }\\n\\n    crc = crc & 0xffff\\n\\n    var txt = crc.toString(16).toUpperCase();\\n    txt = padStart(txt,4,\'0\');\\n    return txt;\\n}\\n\\nfunction padStart(str, length, ch) {\\n    while (str.length < length) {\\n        str = ch + str;\\n    }\\n\\n    return str;\\n}"}}', '{"description":"报文格式：\\n1、由多行报文，组成一帧数据\\n2、行特征：每行以7E 00 00开始，以7E结束，采用CRC16-IBM校验\\n3、行格式：\\n范例：【7E 00 00】【00 01】  【32】  【00】【 01】  【 00】 【 1B 4A】【7E】 \\n说明：【行头】    【帧类型】【帧号】 【行号】【长度】【数据】 【CRC16】【行尾】\\n4、同一帧，帧号都相同，行号从01递增，最后一行以00结束\\n\\n范例：\\n7E 00 00 01 01 29 01 08 05 01 01 66 00 3D 00 03 E5 70 7E \\n7E 00 00 01 01 29 02 08 00 00 00 18 01 0F 0B 0D CA 9C 7E \\n7E 00 00 01 01 29 03 01 20 ED A7 7E \\n7E 00 00 01 01 29 00 02 0F 00 8B 39 7E \\n\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n测试报文1：\\n7E 00 00 01 01 29 01 08 05 01 01 66 00 3D 00 03 E5 70 7E 7E 00 00 01 01 29 02 08 00 00 00 18 01 0F 0B 0D CA 9C 7E 7E 00 00 01 01 29 03 01 20 ED A7 7E 7E 00 00 01 01 29 00 02 0F 00 8B 39 7E\\n"}', 'include', 'record', 1, 2000, 1712903951637, 1713080892773),
	(1238, '上报事件', 'JB-TGL-TX3006C', '泰和安消防科技有限公司', 'JavaScript', 'device', '{"decode":{"main":"decode","code":"/**\\n * 解码器的入口函数\\n * 全局参数：\\n *     fox_edge_data：json string格式 或者 hex string格式的接收数据\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   提供给通道的发送数据。根据不同的通道服务，它可能是HEX结构的文本，也可能是JSON结构的对象，请自行根据选定的通道服务进行确认\\n */\\nfunction decode() {\\n\\tvar object = decodeStr(fox_edge_data, fox_edge_param);\\n  return JSON.stringify(object);\\n}\\n\\nfunction decodeStr(message, device_param) {\\n    // 检查：是否解码器成功\\n    var obj = decodeObj(message);\\n    if (obj.success === false) {\\n        return obj.message;\\n    }\\n\\n    // 检查：是否为心跳\\n    if (obj.type === \'0001\') {\\n        return null;\\n    }\\n\\n    // 必须包含recordType字段，用来指明事件的类型\\n    var record = {\\n        \\"recordType\\": \\"未识别\\", \\"info\\": obj\\n    };\\n\\n\\n    if (obj.data.length === 38) {\\n        var item1 = obj.data.substring(0, 1 * 2);\\n        var item2 = obj.data.substring(1 * 2, 4 * 2);\\n        var devCode = obj.data.substring(4 * 2, 6 * 2);\\n        var actCode = obj.data.substring(6 * 2, 8 * 2);\\n        var item5 = obj.data.substring(8 * 2, 11 * 2);\\n        var item6 = obj.data.substring(11 * 2, 17 * 2);\\n        var item7 = obj.data.substring(17 * 2, 19 * 2);\\n\\n        // 格式化设备地址\\n        var devAdr = formatDevAdr(item2);\\n\\n        // 格式化时间\\n        var time = formatTime(item6);\\n\\n        // 格式化设备名称\\n        var actName = formatActName(actCode);\\n\\n        // 格式化设备名称\\n        var devName = formatDevName(devCode);\\n\\n        record = {\\n            \\"recordType\\": actName, \\"time\\": time, \\"devAdr\\": devAdr, \\"deviceType\\": devName,\\n        };\\n    }\\n\\n\\n    // 必须以列表格式返回\\n    var result = [];\\n    result.push(record);\\n\\n    return result;\\n}\\n"}}', '{"description":"报文格式：\\n1、由多行报文，组成一帧数据\\n2、行特征：每行以7E 00 00开始，以7E结束，采用CRC16-IBM校验\\n3、行格式：\\n范例：【7E 00 00】【00 01】  【32】  【00】【 01】  【 00】 【 1B 4A】【7E】 \\n说明：【行头】    【帧类型】【帧号】 【行号】【长度】【数据】 【CRC16】【行尾】\\n4、同一帧，帧号都相同，行号从01递增，最后一行以00结束\\n\\n范例：\\n7E 00 00 01 01 29 01 08 05 01 01 66 00 3D 00 03 E5 70 7E \\n7E 00 00 01 01 29 02 08 00 00 00 18 01 0F 0B 0D CA 9C 7E \\n7E 00 00 01 01 29 03 01 20 ED A7 7E \\n7E 00 00 01 01 29 00 02 0F 00 8B 39 7E \\n\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n测试报文1：\\n7E 00 00 01 01 29 01 08 05 01 01 66 00 3D 00 03 E5 70 7E 7E 00 00 01 01 29 02 08 00 00 00 18 01 0F 0B 0D CA 9C 7E 7E 00 00 01 01 29 03 01 20 ED A7 7E 7E 00 00 01 01 29 00 02 0F 00 8B 39 7E\\n\\n"}', 'report', 'record', 1, 2000, 1712829661152, 1713068023425),
	(1240, '设备代码', 'JB-TGL-TX3006C', '泰和安消防科技有限公司', 'JavaScript', 'device', '{"include":{"main":"include","code":"\\nfunction formatDevName(devCode) {\\n    if (devCode === \'003D\') {\\n        return \\"手动火灾报警按钮\\";\\n    }\\n    if (devCode === \'003E\') {\\n        return \\"消火栓按钮\\";\\n    }\\n    if (devCode === \'00B8\') {\\n        return \\"喷淋泵\\";\\n    }\\n    if (devCode === \'0001\') {\\n        return \\"本机电源\\";\\n    }\\n    if (devCode === \'003D\') {\\n        return \\"手动火灾按钮报警\\";\\n    }\\n    if (devCode === \'0017\') {\\n        return \\"点型光电感烟探测器\\";\\n    }\\n\\n    return \\"未定义的事件：\\" + devCode;\\n}\\n"}}', '{"description":"测试发现：泰和安的设备，同样的设备代码，在不同的设备上，指定色设备，定义大相径庭\\n所以，这边将设备名称的识别函数，单独分离出来\\n\\n那么，到现场安装测试阶段的时候，通过核对，可以重新修改这个设备代码的定义"}', 'include', 'record', 1, 2000, 1712903951637, 1713069650026),
	(1241, '动作代码', 'JB-TGL-TX3006C', '泰和安消防科技有限公司', 'JavaScript', 'device', '{"include":{"main":"include","code":"function formatActName(actCode) {\\n    if (actCode === \'0003\') {\\n        return \\"火警\\";\\n    }\\n    if (actCode === \'0013\') {\\n        return \\"启动\\";\\n    }\\n    if (actCode === \'001D\') {\\n        return \\"停动\\";\\n    }\\n    if (actCode === \'0052\') {\\n        return \\"主电故障\\";\\n    }\\n    if (actCode === \'0053\') {\\n        return \\"主电恢复\\";\\n    }\\n    if (actCode === \'0066\') {\\n        return \\"备电故障\\";\\n    }\\n    if (actCode === \'0067\') {\\n        return \\"备电恢复\\";\\n    }\\n    if (actCode === \'0051\') {\\n        return \\"通讯故障\\";\\n    }\\n    if (actCode === \'0065\') {\\n        return \\"通讯故障恢复\\";\\n    }\\n\\n    return \\"未定义的事件：\\" + actCode;\\n}\\n"}}', '{"description":"报文格式：\\n1、由多行报文，组成一帧数据\\n2、行特征：每行以7E 00 00开始，以7E结束，采用CRC16-IBM校验\\n3、行格式：\\n范例：【7E 00 00】【00 01】  【32】  【00】【 01】  【 00】 【 1B 4A】【7E】 \\n说明：【行头】    【帧类型】【帧号】 【行号】【长度】【数据】 【CRC16】【行尾】\\n4、同一帧，帧号都相同，行号从01递增，最后一行以00结束\\n\\n范例：\\n7E 00 00 01 01 29 01 08 05 01 01 66 00 3D 00 03 E5 70 7E \\n7E 00 00 01 01 29 02 08 00 00 00 18 01 0F 0B 0D CA 9C 7E \\n7E 00 00 01 01 29 03 01 20 ED A7 7E \\n7E 00 00 01 01 29 00 02 0F 00 8B 39 7E \\n\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n测试报文1：\\n7E 00 00 01 01 29 01 08 05 01 01 66 00 3D 00 03 E5 70 7E 7E 00 00 01 01 29 02 08 00 00 00 18 01 0F 0B 0D CA 9C 7E 7E 00 00 01 01 29 03 01 20 ED A7 7E 7E 00 00 01 01 29 00 02 0F 00 8B 39 7E\\n"}', 'include', 'record', 1, 2000, 1712903951637, 1713069163310),
	(1242, 'splitHandler', 'JB-3208G', '上海松江飞繁电子有限公司', 'JavaScript', 'channel', '{"decode":{"main":"decode","code":"/**\\n * 编码器的入口函数\\n * 全局参数：\\n *     message：hex string格式的接收数据\\n *              XX+[合法报文]+XXX，合法报文可能混杂在一堆其他数据之中\\n * 返回值：\\n *   从XXX+[合法报文]+XXX中，截取到的[合法报文]\\n */\\nfunction decode(message) {\\n    var starTag = \\"FE\\";\\n    var endTag = \\"FF\\";\\n\\n    message = message.replace(/\\\\s+/g, \\"\\");\\n    starTag = starTag.replace(/\\\\s+/g, \\"\\");\\n    endTag = endTag.replace(/\\\\s+/g, \\"\\");\\n\\n    // 转换成大写\\n    message = message.toUpperCase();\\n    starTag = starTag.toUpperCase();\\n    endTag = endTag.toUpperCase();\\n\\n    // 找到起始符\\n    var start = message.indexOf(starTag);\\n    if (start < 0) {\\n        return \\"\\";\\n    }\\n\\n    // 切掉前面的数据\\n    message = message.substring(start);\\n\\n    // 切出第一行\\n    var line = getLine(message, starTag, endTag);\\n    if (line.length === 0) {\\n        return \\"\\";\\n    }\\n\\n    //取出行信息\\n    var type = getType(line);\\n    var data = getData(line);\\n\\n    var entity = {\\n        \\"type\\": type, \\"data\\": data\\n    }\\n    \\n    return line;\\n}\\n\\n\\n/**\\n * 从行中取出帧类型\\n *\\n * @param line 行信息\\n * @returns {string} 帧类型，例如：64\\n */\\nfunction getType(line) {\\n    return line.substring(4, 6);\\n}\\n\\nfunction getData(line) {\\n    return line.substring(10, line.length - 6);\\n}\\n\\n/**\\n * 分拆行\\n * @param message 消息\\n * @param starTag 起始符\\n * @param endTag 结束符\\n * @returns {string} 行\\n */\\nfunction getLine(message, starTag, endTag) {\\n    // 寻找起始标记\\n    var start = message.indexOf(starTag);\\n    if (start !== 0) {\\n        return \\"\\";\\n    }\\n\\n    // 检测：最小长度\\n    if (message.length < 16) {\\n        return \\"\\";\\n    }\\n\\n    // 数据大小\\n    var size = parseInt(message.substring(6, 8), 16);\\n    size += parseInt(message.substring(8, 10), 16) * 0x100;\\n\\n    // 切第一行\\n    var line = message.substring(start, start + 16 + size * 2);\\n    if (line.substring(line.length - endTag.length, line.length) !== endTag) {\\n        return \\"\\";\\n    }\\n\\n    // 截取第一行，并进行行验证\\n    if (!verifyLine(line)) {\\n        return \\"\\";\\n    }\\n\\n    return line;\\n}\\n\\n/**\\n * 验证CRC\\n *\\n * @param line 行信息\\n * @returns {boolean} 是否成功\\n */\\nfunction verifyLine(line) {\\n    if (line.length < 16) {\\n        return false;\\n    }\\n\\n    var body = line.substring(2, line.length - 6);\\n\\n    // 校验帧长度\\n    var size = parseInt(line.substring(6, 8), 16);\\n    size += parseInt(line.substring(8, 10), 16) * 0x100;\\n    if (line.length != 16 + size * 2) {\\n        return false;\\n    }\\n\\n\\n    var ch = line.substring(line.length - 4, line.length - 2);\\n    var cl = line.substring(line.length - 6, line.length - 4);\\n    var crc = calculateCRC16(body, 0xFFFF, 0xA001);\\n\\n    return crc === ch + cl;\\n}\\n\\n/**\\n * CRC16校验\\n * 范例：calculateCRC16(\\"7E0000000133000100\\", 0x0000, 0xA001);\\n *\\n * @param dataHexString 无空格的HEX格式文本，例如：\\"7E0000000133000100\\";\\n * @param init CRC16的初始值，例如：0x0000\\n * @param poly CRC16的多项式，例如：0xA001\\n * @returns {string}\\n */\\nfunction calculateCRC16(dataHexString, init, poly) {\\n    var dataBytes = [];\\n    for (var i = 0; i < dataHexString.length; i += 2) {\\n        dataBytes.push(parseInt(dataHexString.substring(i, i + 2), 16));\\n    }\\n\\n    var crc = init;\\n    var polynomial = poly;  // This is the polynomial x^16 + x^15 + x^2 + 1\\n\\n    for (var i = 0; i < dataBytes.length; i++) {\\n        crc ^= dataBytes[i];\\n        for (var j = 0; j < 8; j++) {\\n            if (crc & 0x0001) {\\n                crc = ((crc >> 1) ^ polynomial) & 0xFFFF;\\n            } else {\\n                crc >>= 1;\\n            }\\n        }\\n    }\\n\\n    crc = crc & 0xffff\\n\\n    var txt = crc.toString(16).toUpperCase();\\n    txt = padStart(txt,4,\'0\');\\n    return txt;\\n}\\n\\nfunction padStart(str, length, ch) {\\n    while (str.length < length) {\\n        str = ch + str;\\n    }\\n\\n    return str;\\n}"}}', '{"description":"报文格式：\\n【报头】【未知】【类型】【长度】【数据】【校验】【报尾】\\n\\n范例1：\\nFE 01 64 01 00 64 56 DB FF\\n解读：\\nFE       报头（1字节）\\n01       未知（1字节）\\n64       类型（1字节）\\n01 00  长度（2字节）\\n64       数据（N字节）\\n56 DB 校验和（2字节 CRC16-MODBUS）\\nFF       包尾（1字节）\\n\\n范例1：\\nFE 01 64 01 00 64 56 DB FF\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n测试报文1：\\nFE 01 6E 22 00 01 00 01 01 03 02 00 09 01 19 12 31 12 35 17 02 16 0F 1B 5A 28 28 2A 15 31 49 2C 08 FF FF FF FF FF FF 68 7B FF \\n\\n测试报文2：\\nFE 01 00 01 00 00 48 00 FF\\n\\n测试报文3：\\nFE 01 64 01 00 64 56 DB FF\\n\\n"}', 'splitHandler', 'status', 1, 2000, 1712828091343, 1713080839600),
	(1243, 'libs', 'JB-3208G', '上海松江飞繁电子有限公司', 'JavaScript', 'device', '{"include":{"main":"include","code":"\\n/**\\n * 编码器的入口函数\\n * 全局参数：\\n *     message：hex string格式的接收数据\\n *              XX+[合法报文]+XXX，合法报文可能混杂在一堆其他数据之中\\n * 返回值：\\n *   从XXX+[合法报文]+XXX中，截取到的[合法报文]\\n */\\nfunction decodeObj(message) {\\n    var starTag = \\"FE\\";\\n    var endTag = \\"FF\\";\\n\\n    message = message.replace(/\\\\s+/g, \\"\\");\\n    starTag = starTag.replace(/\\\\s+/g, \\"\\");\\n    endTag = endTag.replace(/\\\\s+/g, \\"\\");\\n\\n    // 转换成大写\\n    message = message.toUpperCase();\\n    starTag = starTag.toUpperCase();\\n    endTag = endTag.toUpperCase();\\n\\n    var obj = {\\n        \\"type\\": type, \\"data\\": data, \\"success\\": false\\n    }\\n\\n    // 找到起始符\\n    var start = message.indexOf(starTag);\\n    if (start < 0) {\\n        return obj;\\n    }\\n\\n    // 切掉前面的数据\\n    message = message.substring(start);\\n\\n    // 切出第一行\\n    var line = getLine(message, starTag, endTag);\\n    if (line.length === 0) {\\n        return obj;\\n    }\\n\\n    //取出行信息\\n    var type = getType(line);\\n    var data = getData(line);\\n\\n    obj = {\\n        \\"type\\": type, \\"data\\": data, \\"success\\": true\\n    }\\n\\n    return obj;\\n}\\n\\n\\n/**\\n * 从行中取出帧类型\\n *\\n * @param line 行信息\\n * @returns {string} 帧类型，例如：64\\n */\\nfunction getType(line) {\\n    return line.substring(4, 6);\\n}\\n\\nfunction getData(line) {\\n    return line.substring(10, line.length - 6);\\n}\\n\\n/**\\n * 分拆行\\n * @param message 消息\\n * @param starTag 起始符\\n * @param endTag 结束符\\n * @returns {string} 行\\n */\\nfunction getLine(message, starTag, endTag) {\\n    // 寻找起始标记\\n    var start = message.indexOf(starTag);\\n    if (start !== 0) {\\n        return \\"\\";\\n    }\\n\\n    // 检测：最小长度\\n    if (message.length < 16) {\\n        return \\"\\";\\n    }\\n\\n    // 数据大小\\n    var size = parseInt(message.substring(6, 8), 16);\\n    size += parseInt(message.substring(8, 10), 16) * 0x100;\\n\\n    // 切第一行\\n    var line = message.substring(start, start + 16 + size * 2);\\n    if (line.substring(line.length - endTag.length, line.length) !== endTag) {\\n        return \\"\\";\\n    }\\n\\n    // 截取第一行，并进行行验证\\n    if (!verifyLine(line)) {\\n        return \\"\\";\\n    }\\n\\n    return line;\\n}\\n\\n/**\\n * 验证CRC\\n *\\n * @param line 行信息\\n * @returns {boolean} 是否成功\\n */\\nfunction verifyLine(line) {\\n    if (line.length < 16) {\\n        return false;\\n    }\\n\\n    var body = line.substring(2, line.length - 6);\\n\\n    // 校验帧长度\\n    var size = parseInt(line.substring(6, 8), 16);\\n    size += parseInt(line.substring(8, 10), 16) * 0x100;\\n    if (line.length != 16 + size * 2) {\\n        return false;\\n    }\\n\\n\\n    var ch = line.substring(line.length - 4, line.length - 2);\\n    var cl = line.substring(line.length - 6, line.length - 4);\\n    var crc = calculateCRC16(body, 0xFFFF, 0xA001);\\n\\n    return crc === ch + cl;\\n}\\n\\n/**\\n * CRC16校验\\n * 范例：calculateCRC16(\\"7E0000000133000100\\", 0x0000, 0xA001);\\n *\\n * @param dataHexString 无空格的HEX格式文本，例如：\\"7E0000000133000100\\";\\n * @param init CRC16的初始值，例如：0x0000\\n * @param poly CRC16的多项式，例如：0xA001\\n * @returns {string}\\n */\\nfunction calculateCRC16(dataHexString, init, poly) {\\n    var dataBytes = [];\\n    for (var i = 0; i < dataHexString.length; i += 2) {\\n        dataBytes.push(parseInt(dataHexString.substring(i, i + 2), 16));\\n    }\\n\\n    var crc = init;\\n    var polynomial = poly;  // This is the polynomial x^16 + x^15 + x^2 + 1\\n\\n    for (var i = 0; i < dataBytes.length; i++) {\\n        crc ^= dataBytes[i];\\n        for (var j = 0; j < 8; j++) {\\n            if (crc & 0x0001) {\\n                crc = ((crc >> 1) ^ polynomial) & 0xFFFF;\\n            } else {\\n                crc >>= 1;\\n            }\\n        }\\n    }\\n\\n    crc = crc & 0xffff\\n\\n    var txt = crc.toString(16).toUpperCase();\\n    txt = padStart(txt,4,\'0\');\\n    return txt;\\n}\\n\\nfunction padStart(str, length, ch) {\\n    while (str.length < length) {\\n        str = ch + str;\\n    }\\n\\n    return str;\\n}"}}', '{"description":"报文格式：\\n【报头】【未知】【类型】【长度】【数据】【校验】【报尾】\\n\\n范例1：\\nFE 01 64 01 00 64 56 DB FF\\n解读：\\nFE       报头（1字节）\\n01       未知（1字节）\\n64       类型（1字节）\\n01 00  长度（2字节）\\n64       数据（N字节）\\n56 DB 校验和（2字节 CRC16-MODBUS）\\nFF       包尾（1字节）\\n\\n范例1：\\nFE 01 64 01 00 64 56 DB FF\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n测试报文1：\\nFE 01 6E 22 00 01 00 01 01 03 02 00 09 01 19 12 31 12 35 17 02 16 0F 1B 5A 28 28 2A 15 31 49 2C 08 FF FF FF FF FF FF 68 7B FF \\n\\n测试报文2：\\nFE 01 00 01 00 00 48 00 FF\\n\\n测试报文3：\\nFE 01 64 01 00 64 56 DB FF\\n\\n"}', 'include', 'record', 1, 2000, 1712903951637, 1713080826870),
	(1246, '火警', 'JB-3208G', '上海松江飞繁电子有限公司', 'JavaScript', 'device', '{"decode":{"main":"decode","code":"/**\\n * 解码器的入口函数\\n * 全局参数：\\n *     fox_edge_data：json string格式 或者 hex string格式的接收数据\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   提供给通道的发送数据。根据不同的通道服务，它可能是HEX结构的文本，也可能是JSON结构的对象，请自行根据选定的通道服务进行确认\\n */\\nfunction decode() {\\n\\tvar object = decodeStr(fox_edge_data, fox_edge_param);\\n  return JSON.stringify(object);\\n}\\n\\n/**\\n * 事件解码器函数：消火栓按钮报火警\\n * 全局参数：\\n *     fox_edge_data：hex string格式的接收数据\\n *                    XXX+[合法报文]+XXX，合法报文可能混杂在一堆其他数据之中\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   必须是列表格式的JSON字符串，并且JSON对象必须包含关键字【recordType】，否则不给与入库\\n */\\nfunction decodeStr(message, device_param) {\\n    // 检查：是否解码器成功\\n    var obj = decodeObj(message);\\n    if (!obj.success) {\\n        return \\"解码失败\\";\\n    }\\n\\n    if (obj.type === \'6E\' && obj.data.length >= 68) {\\n        var data = obj.data;\\n\\n        // 校验帧长度\\n        var count = parseInt(data.substring(0, 2), 16);\\n        count += parseInt(data.substring(2, 4), 16) * 0x100;\\n\\n        // 必须以列表格式返回\\n        var result = [];\\n        for (var i = 0; i < count; i++) {\\n            var host_addr = parseInt(data.substring(64 * i + 4, 64 * i + 6), 16);\\n            var loop_addr = parseInt(data.substring(64 * i + 6, 64 * i + 8), 16);\\n            var node_addr = parseInt(data.substring(64 * i + 8, 64 * i + 10), 16);\\n\\n            var devAddr = host_addr + \\"-\\" + loop_addr + \\"-\\" + node_addr;\\n            var text = \\"(\\" + host_addr + \\"号分机) \\" + loop_addr + \\"-\\" + node_addr;\\n            var record = {\\n                \\"recordType\\": \\"火警\\", \\"devAddr\\": devAddr, \\"text\\": text\\n            };\\n\\n            result.push(record);\\n        }\\n\\n        return result;\\n    }\\n\\n    return \\"\\";\\n}\\n"}}', '{"description":"报文格式：\\n【报头】【未知】【类型】【长度】【数据】【校验】【报尾】\\n\\n范例1：\\nFE 01 64 01 00 64 56 DB FF\\n解读：\\nFE       报头（1字节）\\n01       未知（1字节）\\n64       类型（1字节）\\n01 00  长度（2字节）\\n64       数据（N字节）\\n56 DB 校验和（2字节 CRC16-MODBUS）\\nFF       包尾（1字节）\\n\\n范例1：\\nFE 01 64 01 00 64 56 DB FF\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n1个火警：（1号机）1-3红外光束2分区，\\n\\nFE 01 6E 22 00 01 00 01 01 03 02 00 09 01 19 12 31 12 35 17 02 16 0F 1B 5A 28 28 2A 15 31 49 2C 08 FF FF FF FF FF FF 68 7B FF \\n\\n"}', 'report', 'record', 1, 2000, 1712829661152, 1713082637842),
	(1249, '心跳', 'JB-3208G', '上海松江飞繁电子有限公司', 'JavaScript', 'device', '{"decode":{"main":"decode","code":"/**\\n * 解码器的入口函数\\n * 全局参数：\\n *     fox_edge_data：json string格式 或者 hex string格式的接收数据\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   提供给通道的发送数据。根据不同的通道服务，它可能是HEX结构的文本，也可能是JSON结构的对象，请自行根据选定的通道服务进行确认\\n */\\nfunction decode() {\\n\\tvar object = decodeStr(fox_edge_data, fox_edge_param);\\n  return JSON.stringify(object);\\n}\\n\\n/**\\n * 事件解码器函数：消火栓按钮报火警\\n * 全局参数：\\n *     fox_edge_data：hex string格式的接收数据\\n *                    XXX+[合法报文]+XXX，合法报文可能混杂在一堆其他数据之中\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   必须是列表格式的JSON字符串，并且JSON对象必须包含关键字【recordType】，否则不给与入库\\n */\\nfunction decodeStr(message, device_param) {\\n    // 检查：是否解码器成功\\n    var obj = decodeObj(message);\\n    if (!obj.success) {\\n        return \\"解码失败\\";\\n    }\\n\\n    // 心跳包\\n    if (obj.type === \'64\') {\\n        var entity = {\\n            \\"心跳\\": new Date()\\n        };\\n        return entity;\\n    }\\n\\n    return \\"\\";\\n}"}}', '{"description":"报文格式：\\n【报头】【未知】【类型】【长度】【数据】【校验】【报尾】\\n\\n范例1：\\nFE 01 64 01 00 64 56 DB FF\\n解读：\\nFE       报头（1字节）\\n01       未知（1字节）\\n64       类型（1字节）\\n01 00  长度（2字节）\\n64       数据（N字节）\\n56 DB 校验和（2字节 CRC16-MODBUS）\\nFF       包尾（1字节）\\n\\n范例1：\\nFE 01 64 01 00 64 56 DB FF\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n测试报文1：\\nFE 01 64 01 00 64 56 DB FF\\n\\n"}', 'report', 'status', 1, 2000, 1712829661152, 1713079160864),
	(1250, '故障', 'JB-3208G', '上海松江飞繁电子有限公司', 'JavaScript', 'device', '{"decode":{"main":"decode","code":"/**\\n * 解码器的入口函数\\n * 全局参数：\\n *     fox_edge_data：json string格式 或者 hex string格式的接收数据\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   提供给通道的发送数据。根据不同的通道服务，它可能是HEX结构的文本，也可能是JSON结构的对象，请自行根据选定的通道服务进行确认\\n */\\nfunction decode() {\\n\\tvar object = decodeStr(fox_edge_data, fox_edge_param);\\n  return JSON.stringify(object);\\n}\\n\\n/**\\n * 事件解码器函数：消火栓按钮报火警\\n * 全局参数：\\n *     fox_edge_data：hex string格式的接收数据\\n *                    XXX+[合法报文]+XXX，合法报文可能混杂在一堆其他数据之中\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   必须是列表格式的JSON字符串，并且JSON对象必须包含关键字【recordType】，否则不给与入库\\n */\\nfunction decodeStr(message, device_param) {\\n    // 检查：是否解码器成功\\n    var obj = decodeObj(message);\\n    if (!obj.success) {\\n        return \\"解码失败\\";\\n    }\\n\\n    if (obj.type === \'6F\' && obj.data.length >= 68) {\\n        var data = obj.data;\\n\\n        // 校验帧长度\\n        var count = parseInt(data.substring(0, 2), 16);\\n        count += parseInt(data.substring(2, 4), 16) * 0x100;\\n\\n        // 必须以列表格式返回\\n        var result = [];\\n        for (var i = 0; i < count; i++) {\\n            var host_addr = parseInt(data.substring(64 * i + 4, 64 * i + 6), 16);\\n            var loop_addr = parseInt(data.substring(64 * i + 6, 64 * i + 8), 16);\\n            var node_addr = parseInt(data.substring(64 * i + 8, 64 * i + 10), 16);\\n\\n            var devAddr = host_addr + \\"-\\" + loop_addr + \\"-\\" + node_addr;\\n            var text = \\"(\\" + host_addr + \\"号分机) \\" + loop_addr + \\"-\\" + node_addr;\\n            var record = {\\n                \\"recordType\\": \\"故障\\", \\"devAddr\\": devAddr, \\"text\\": text\\n            };\\n\\n            result.push(record);\\n        }\\n\\n        return result;\\n    }\\n\\n    return \\"\\";\\n}"}}', '{"description":"报文格式：\\n【报头】【未知】【类型】【长度】【数据】【校验】【报尾】\\n\\n范例1：\\nFE 01 64 01 00 64 56 DB FF\\n解读：\\nFE       报头（1字节）\\n01       未知（1字节）\\n64       类型（1字节）\\n01 00  长度（2字节）\\n64       数据（N字节）\\n56 DB 校验和（2字节 CRC16-MODBUS）\\nFF       包尾（1字节）\\n\\n范例1：\\nFE 01 64 01 00 64 56 DB FF\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n故障恢复：（全部恢复）\\nFE 01 6F 02 00 00 00 D4 7B FF         \\n\\n\\n5个故障：（1号机）1-16感温3分区 ，1-17感温3分区， 1-18感温3分区 ，1-19感温3分区， 1-20感温3分区 \\nFE 01 6F A2 00 05 00 01 01 10 03 00 01 08 19 12 31 12 17 17 02 16 0F 1B 5A 28 28 2A 15 31 49 2C 08 FF FF FF FF FF FF 01 01 11 03 00 01 08 19 12 31 12 17 17 02 16 0F 1B 5A 28 28 2A 15 31 49 2C 08 FF FF FF FF FF FF 01 01 12 03 00 01 08 19 12 31 12 17 17 02 16 0F 1B 5A 28 28 2A 15 31 49 2C 08 FF FF FF FF FF FF 01 01 13 03 00 01 08 19 12 31 12 17 17 02 16 0F 1B 5A 28 28 2A 15 31 49 2C 08 FF FF FF FF FF FF 01 01 14 03 00 01 08 19 12 31 12 17 17 02 16 0F 1B 5A 28 28 2A 15 31 49 2C 08 FF FF FF FF FF FF 84 42 FF \\n\\n"}', 'report', 'record', 1, 2000, 1712829661152, 1713082559776),
	(1251, '启动', 'JB-3208G', '上海松江飞繁电子有限公司', 'JavaScript', 'device', '{"decode":{"main":"decode","code":"/**\\n * 解码器的入口函数\\n * 全局参数：\\n *     fox_edge_data：json string格式 或者 hex string格式的接收数据\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   提供给通道的发送数据。根据不同的通道服务，它可能是HEX结构的文本，也可能是JSON结构的对象，请自行根据选定的通道服务进行确认\\n */\\nfunction decode() {\\n\\tvar object = decodeStr(fox_edge_data, fox_edge_param);\\n  return JSON.stringify(object);\\n}\\n\\n/**\\n * 事件解码器函数：消火栓按钮报火警\\n * 全局参数：\\n *     fox_edge_data：hex string格式的接收数据\\n *                    XXX+[合法报文]+XXX，合法报文可能混杂在一堆其他数据之中\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   必须是列表格式的JSON字符串，并且JSON对象必须包含关键字【recordType】，否则不给与入库\\n */\\nfunction decodeStr(message, device_param) {\\n    // 检查：是否解码器成功\\n    var obj = decodeObj(message);\\n    if (!obj.success) {\\n        return \\"解码失败\\";\\n    }\\n\\n    if (obj.type === \'70\' && obj.data.length >= 68) {\\n        var data = obj.data;\\n\\n        // 校验帧长度\\n        var count = parseInt(data.substring(0, 2), 16);\\n        count += parseInt(data.substring(2, 4), 16) * 0x100;\\n\\n        // 必须以列表格式返回\\n        var result = [];\\n        for (var i = 0; i < count; i++) {\\n            var host_addr = parseInt(data.substring(64 * i + 4, 64 * i + 6), 16);\\n            var loop_addr = parseInt(data.substring(64 * i + 6, 64 * i + 8), 16);\\n            var node_addr = parseInt(data.substring(64 * i + 8, 64 * i + 10), 16);\\n\\n            var devAddr = host_addr + \\"-\\" + loop_addr + \\"-\\" + node_addr;\\n            var text = \\"(\\" + host_addr + \\"号分机) \\" + loop_addr + \\"-\\" + node_addr;\\n            var record = {\\n                \\"recordType\\": \\"启动\\", \\"devAddr\\": devAddr, \\"text\\": text\\n            };\\n\\n            result.push(record);\\n        }\\n\\n        return result;\\n    }\\n\\n    return \\"\\";\\n}"}}', '{"description":"报文格式：\\n【报头】【未知】【类型】【长度】【数据】【校验】【报尾】\\n\\n范例1：\\nFE 01 64 01 00 64 56 DB FF\\n解读：\\nFE       报头（1字节）\\n01       未知（1字节）\\n64       类型（1字节）\\n01 00  长度（2字节）\\n64       数据（N字节）\\n56 DB 校验和（2字节 CRC16-MODBUS）\\nFF       包尾（1字节）\\n\\n范例1：\\nFE 01 64 01 00 64 56 DB FF\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n1号机 单元1 分区1 气体灭火声光启动\\nFE 01 70 22 00 01 00 01 01 01 01 00 16 07 19 10 23 12 57 FF FF 28 0B 35 1E 37 10 36 23 18 46 1E 0F FF FF FF FF FF FF D2 82 FF\\n\\n"}', 'report', 'record', 1, 2000, 1712829661152, 1713082531481),
	(1252, '反馈', 'JB-3208G', '上海松江飞繁电子有限公司', 'JavaScript', 'device', '{"decode":{"main":"decode","code":"/**\\n * 解码器的入口函数\\n * 全局参数：\\n *     fox_edge_data：json string格式 或者 hex string格式的接收数据\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   提供给通道的发送数据。根据不同的通道服务，它可能是HEX结构的文本，也可能是JSON结构的对象，请自行根据选定的通道服务进行确认\\n */\\nfunction decode() {\\n\\tvar object = decodeStr(fox_edge_data, fox_edge_param);\\n  return JSON.stringify(object);\\n}\\n\\n/**\\n * 事件解码器函数：消火栓按钮报火警\\n * 全局参数：\\n *     fox_edge_data：hex string格式的接收数据\\n *                    XXX+[合法报文]+XXX，合法报文可能混杂在一堆其他数据之中\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   必须是列表格式的JSON字符串，并且JSON对象必须包含关键字【recordType】，否则不给与入库\\n */\\nfunction decodeStr(message, device_param) {\\n    // 检查：是否解码器成功\\n    var obj = decodeObj(message);\\n    if (!obj.success) {\\n        return \\"解码失败\\";\\n    }\\n\\n    if (obj.type === \'71\' && obj.data.length >= 68) {\\n        var data = obj.data;\\n\\n        // 校验帧长度\\n        var count = parseInt(data.substring(0, 2), 16);\\n        count += parseInt(data.substring(2, 4), 16) * 0x100;\\n\\n        // 必须以列表格式返回\\n        var result = [];\\n        for (var i = 0; i < count; i++) {\\n            var host_addr = parseInt(data.substring(64 * i + 4, 64 * i + 6), 16);\\n            var loop_addr = parseInt(data.substring(64 * i + 6, 64 * i + 8), 16);\\n            var node_addr = parseInt(data.substring(64 * i + 8, 64 * i + 10), 16);\\n\\n            var devAddr = host_addr + \\"-\\" + loop_addr + \\"-\\" + node_addr;\\n            var text = \\"(\\" + host_addr + \\"号分机) \\" + loop_addr + \\"-\\" + node_addr;\\n            var record = {\\n                \\"recordType\\": \\"反馈\\", \\"devAddr\\": devAddr, \\"text\\": text\\n            };\\n\\n            result.push(record);\\n        }\\n\\n        return result;\\n    }\\n\\n    return \\"\\";\\n}"}}', '{"description":"报文格式：\\n【报头】【未知】【类型】【长度】【数据】【校验】【报尾】\\n\\n范例1：\\nFE 01 64 01 00 64 56 DB FF\\n解读：\\nFE       报头（1字节）\\n01       未知（1字节）\\n64       类型（1字节）\\n01 00  长度（2字节）\\n64       数据（N字节）\\n56 DB 校验和（2字节 CRC16-MODBUS）\\nFF       包尾（1字节）\\n\\n范例1：\\nFE 01 64 01 00 64 56 DB FF\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n测试报文：\\n无\\n\\n类型代码：0x71\\n\\n\\n"}', 'report', 'record', 1, 2000, 1712829661152, 1713083576087),
	(1253, '复位', 'JB-3208G', '上海松江飞繁电子有限公司', 'JavaScript', 'device', '{"decode":{"main":"decode","code":"/**\\n * 解码器的入口函数\\n * 全局参数：\\n *     fox_edge_data：json string格式 或者 hex string格式的接收数据\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   提供给通道的发送数据。根据不同的通道服务，它可能是HEX结构的文本，也可能是JSON结构的对象，请自行根据选定的通道服务进行确认\\n */\\nfunction decode() {\\n\\tvar object = decodeStr(fox_edge_data, fox_edge_param);\\n  return JSON.stringify(object);\\n}\\n\\n/**\\n * 事件解码器函数：消火栓按钮报火警\\n * 全局参数：\\n *     fox_edge_data：hex string格式的接收数据\\n *                    XXX+[合法报文]+XXX，合法报文可能混杂在一堆其他数据之中\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   必须是列表格式的JSON字符串，并且JSON对象必须包含关键字【recordType】，否则不给与入库\\n */\\nfunction decodeStr(message, device_param) {\\n    // 检查：是否解码器成功\\n    var obj = decodeObj(message);\\n    if (!obj.success) {\\n        return \\"解码失败\\";\\n    }\\n\\n    // 心跳包\\n    if (obj.type === \'00\') {\\n        var data = obj.data;\\n\\n        // 校验帧长度\\n        var count = parseInt(data.substring(0, 2), 16);\\n        count += parseInt(data.substring(2, 4), 16) * 0x100;\\n\\n        // 必须以列表格式返回\\n        var result = [];\\n        var record = {\\n            \\"recordType\\": \\"复位\\"\\n        };\\n\\n        result.push(record);\\n\\n        return result;\\n    }\\n\\n    return \\"\\";\\n}"}}', '{"description":"报文格式：\\n【报头】【未知】【类型】【长度】【数据】【校验】【报尾】\\n\\n范例1：\\nFE 01 64 01 00 64 56 DB FF\\n解读：\\nFE       报头（1字节）\\n01       未知（1字节）\\n64       类型（1字节）\\n01 00  长度（2字节）\\n64       数据（N字节）\\n56 DB 校验和（2字节 CRC16-MODBUS）\\nFF       包尾（1字节）\\n\\n范例1：\\nFE 01 64 01 00 64 56 DB FF\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n测试报文：\\nFE 01 00 01 00 00 48 00 FF\\n"}', 'report', 'record', 1, 2000, 1712829661152, 1713081033892),
	(1254, '启动清零', 'JB-3208G', '上海松江飞繁电子有限公司', 'JavaScript', 'device', '{"decode":{"main":"decode","code":"/**\\n * 解码器的入口函数\\n * 全局参数：\\n *     fox_edge_data：json string格式 或者 hex string格式的接收数据\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   提供给通道的发送数据。根据不同的通道服务，它可能是HEX结构的文本，也可能是JSON结构的对象，请自行根据选定的通道服务进行确认\\n */\\nfunction decode() {\\n\\tvar object = decodeStr(fox_edge_data, fox_edge_param);\\n  return JSON.stringify(object);\\n}\\n\\n/**\\n * 事件解码器函数：消火栓按钮报火警\\n * 全局参数：\\n *     fox_edge_data：hex string格式的接收数据\\n *                    XXX+[合法报文]+XXX，合法报文可能混杂在一堆其他数据之中\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   必须是列表格式的JSON字符串，并且JSON对象必须包含关键字【recordType】，否则不给与入库\\n */\\nfunction decodeStr(message, device_param) {\\n    // 检查：是否解码器成功\\n    var obj = decodeObj(message);\\n    if (!obj.success) {\\n        return \\"解码失败\\";\\n    }\\n\\n    if (obj.type === \'70\' && obj.data.length === 4) {\\n        var data = obj.data;\\n\\n        // 校验帧长度\\n        var count = parseInt(data.substring(0, 2), 16);\\n        count += parseInt(data.substring(2, 4), 16) * 0x100;\\n\\n        // 必须以列表格式返回\\n        var result = [];\\n        var record = {\\n            \\"recordType\\": \\"启动清零\\"\\n        };\\n\\n        result.push(record);\\n\\n        return result;\\n    }\\n\\n    return \\"\\";\\n}"}}', '{"description":"报文格式：\\n【报头】【未知】【类型】【长度】【数据】【校验】【报尾】\\n\\n范例1：\\nFE 01 64 01 00 64 56 DB FF\\n解读：\\nFE       报头（1字节）\\n01       未知（1字节）\\n64       类型（1字节）\\n01 00  长度（2字节）\\n64       数据（N字节）\\n56 DB 校验和（2字节 CRC16-MODBUS）\\nFF       包尾（1字节）\\n\\n范例1：\\nFE 01 64 01 00 64 56 DB FF\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n启动清零\\nFE 01 70 02 00 00 00 41 B9 FF"}', 'report', 'record', 1, 2000, 1712829661152, 1713083056170),
	(1255, '故障恢复', 'JB-3208G', '上海松江飞繁电子有限公司', 'JavaScript', 'device', '{"decode":{"main":"decode","code":"/**\\n * 解码器的入口函数\\n * 全局参数：\\n *     fox_edge_data：json string格式 或者 hex string格式的接收数据\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   提供给通道的发送数据。根据不同的通道服务，它可能是HEX结构的文本，也可能是JSON结构的对象，请自行根据选定的通道服务进行确认\\n */\\nfunction decode() {\\n\\tvar object = decodeStr(fox_edge_data, fox_edge_param);\\n  return JSON.stringify(object);\\n}\\n\\n/**\\n * 事件解码器函数：消火栓按钮报火警\\n * 全局参数：\\n *     fox_edge_data：hex string格式的接收数据\\n *                    XXX+[合法报文]+XXX，合法报文可能混杂在一堆其他数据之中\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   必须是列表格式的JSON字符串，并且JSON对象必须包含关键字【recordType】，否则不给与入库\\n */\\nfunction decodeStr(message, device_param) {\\n    // 检查：是否解码器成功\\n    var obj = decodeObj(message);\\n    if (!obj.success) {\\n        return \\"解码失败\\";\\n    }\\n\\n    if (obj.type === \'6F\' && obj.data.length === 4) {\\n        var data = obj.data;\\n\\n        // 校验帧长度\\n        var count = parseInt(data.substring(0, 2), 16);\\n        count += parseInt(data.substring(2, 4), 16) * 0x100;\\n\\n        // 必须以列表格式返回\\n        var result = [];\\n        var record = {\\n            \\"recordType\\": \\"故障恢复\\"\\n        };\\n\\n        result.push(record);\\n\\n        return result;\\n    }\\n\\n    return \\"\\";\\n}"}}', '{"description":"报文格式：\\n【报头】【未知】【类型】【长度】【数据】【校验】【报尾】\\n\\n范例1：\\nFE 01 64 01 00 64 56 DB FF\\n解读：\\nFE       报头（1字节）\\n01       未知（1字节）\\n64       类型（1字节）\\n01 00  长度（2字节）\\n64       数据（N字节）\\n56 DB 校验和（2字节 CRC16-MODBUS）\\nFF       包尾（1字节）\\n\\n范例1：\\nFE 01 64 01 00 64 56 DB FF\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n故障恢复：（全部恢复）\\nFE 01 6F 02 00 00 00 D4 7B FF     "}', 'report', 'record', 1, 2000, 1712829661152, 1713083044396),
	(1256, 'splitHandler', 'JB-3101G', '上海松江飞繁电子有限公司', 'JavaScript', 'channel', '{"decode":{"main":"decode","code":"/**\\n * 编码器的入口函数\\n * 全局参数：\\n *     message：hex string格式的接收数据\\n *              XX+[合法报文]+XXX，合法报文可能混杂在一堆其他数据之中\\n * 返回值：\\n *   从XXX+[合法报文]+XXX中，截取到的[合法报文]\\n */\\nfunction decode(message) {\\n    var starTag = \\"FE 65 FF FE\\";\\n    var endTag = \\"FF\\";\\n\\n    message = message.replace(/\\\\s+/g, \\"\\");\\n    starTag = starTag.replace(/\\\\s+/g, \\"\\");\\n    endTag = endTag.replace(/\\\\s+/g, \\"\\");\\n\\n    // 转换成大写\\n    message = message.toUpperCase();\\n    starTag = starTag.toUpperCase();\\n    endTag = endTag.toUpperCase();\\n\\n    // 找到起始符\\n    var start = message.indexOf(starTag);\\n    if (start < 0) {\\n        return \\"\\";\\n    }\\n\\n    // 切掉前面的数据\\n    message = message.substring(start);\\n\\n    // 切出第一行\\n    var line = getLine(message, starTag, endTag);\\n    if (line.length === 0) {\\n        return \\"\\";\\n    }\\n\\n    //取出行信息\\n    var type = getType(line);\\n    var data = getData(line);\\n\\n    var entity = {\\n        \\"type\\": type, \\"data\\": data\\n    }\\n\\n    return line;\\n}\\n\\n\\n/**\\n * 从行中取出帧类型\\n *\\n * @param line 行信息\\n * @returns {string} 帧类型，例如：64\\n */\\nfunction getType(line) {\\n    return line.substring(8, 10);\\n}\\n\\nfunction getData(line) {\\n    return line.substring(12, line.length - 2);\\n}\\n\\n/**\\n * 分拆行\\n * @param message 消息\\n * @param starTag 起始符\\n * @param endTag 结束符\\n * @returns {string} 行\\n */\\nfunction getLine(message, starTag, endTag) {\\n    // 寻找起始标记\\n    var start = message.indexOf(starTag);\\n    if (start !== 0) {\\n        return \\"\\";\\n    }\\n\\n    // 检测：最小长度\\n    if (message.length < 16) {\\n        return \\"\\";\\n    }\\n\\n    // 数据大小\\n    var size = parseInt(message.substring(12, 14), 16);\\n\\n    // 切第一行\\n    var line = message.substring(start, start + 16 + size * 4);\\n    if (line.substring(line.length - endTag.length, line.length) !== endTag) {\\n        return \\"\\";\\n    }\\n\\n    return line;\\n}"}}', '{"description":"报文格式：\\n【报头】【类型】【未知】【长度】【数据】【报尾】\\n\\n范例1：\\nFE 65 FF FE 04 01 01 01 65 FF\\n解读：\\nFE 65 FF FE     起始符   4字节\\n04                   类型     1字节\\n01                   未知     1字节\\n01                   个数     1字节\\n01 65              数据     N字节（个数*2）\\nFF                   结束符   1字节\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n测试报文1：\\nFE 65 FF FE 02 01 02 01 02 02 5E FF"}', 'splitHandler', 'status', 1, 2000, 1712828091343, 1713097324705),
	(1257, 'libs', 'JB-3101G', '上海松江飞繁电子有限公司', 'JavaScript', 'device', '{"include":{"main":"include","code":"\\n/**\\n * 编码器的入口函数\\n * 全局参数：\\n *     message：hex string格式的接收数据\\n *              XX+[合法报文]+XXX，合法报文可能混杂在一堆其他数据之中\\n * 返回值：\\n *   从XXX+[合法报文]+XXX中，截取到的[合法报文]\\n */\\nfunction decodeObj(message) {\\n    var starTag = \\"FE 65 FF FE\\";\\n    var endTag = \\"FF\\";\\n\\n    message = message.replace(/\\\\s+/g, \\"\\");\\n    starTag = starTag.replace(/\\\\s+/g, \\"\\");\\n    endTag = endTag.replace(/\\\\s+/g, \\"\\");\\n\\n    // 转换成大写\\n    message = message.toUpperCase();\\n    starTag = starTag.toUpperCase();\\n    endTag = endTag.toUpperCase();\\n\\n    var obj = {\\n        \\"type\\": type, \\"data\\": data, \\"success\\": false, \\"message\\": \\"\\"\\n    }\\n\\n    // 找到起始符\\n    var start = message.indexOf(starTag);\\n    if (start < 0) {\\n        obj.message = \\"找到起始符\\";\\n        return obj;\\n    }\\n\\n    // 切掉前面的数据\\n    message = message.substring(start);\\n\\n    // 切出第一行\\n    var line = getLine(message, starTag, endTag);\\n    if (line.length === 0) {\\n        obj.message = \\"读取行失败\\";\\n        return obj;\\n    }\\n\\n    //取出行信息\\n    var type = getType(line);\\n    var data = getData(line);\\n\\n    obj = {\\n        \\"type\\": type, \\"data\\": data, \\"success\\": true, \\"message\\": \\"\\"\\n    }\\n\\n    return obj;\\n}\\n\\n\\n/**\\n * 从行中取出帧类型\\n *\\n * @param line 行信息\\n * @returns {string} 帧类型，例如：64\\n */\\nfunction getType(line) {\\n    return line.substring(8, 10);\\n}\\n\\nfunction getData(line) {\\n    return line.substring(12, line.length - 2);\\n}\\n\\n/**\\n * 分拆行\\n * @param message 消息\\n * @param starTag 起始符\\n * @param endTag 结束符\\n * @returns {string} 行\\n */\\nfunction getLine(message, starTag, endTag) {\\n    // 寻找起始标记\\n    var start = message.indexOf(starTag);\\n    if (start !== 0) {\\n        return \\"\\";\\n    }\\n\\n    // 检测：最小长度\\n    if (message.length < 16) {\\n        return \\"\\";\\n    }\\n\\n    // 数据大小\\n    var size = parseInt(message.substring(12, 14), 16);\\n\\n    // 切第一行\\n    var line = message.substring(start, start + 16 + size * 4);\\n    if (line.substring(line.length - endTag.length, line.length) !== endTag) {\\n        return \\"\\";\\n    }\\n\\n    return line;\\n}\\n\\nfunction padStart(str, length, ch) {\\n    while (str.length < length) {\\n        str = ch + str;\\n    }\\n\\n    return str;\\n}"}}', '{"description":"报文格式：\\n【报头】【类型】【未知】【长度】【数据】【报尾】\\n\\n范例1：\\nFE 65 FF FE 04 01 01 01 65 FF\\n解读：\\nFE 65 FF FE     起始符   4字节\\n04                   类型     1字节\\n01                   未知     1字节\\n01                   个数     1字节\\n01 65              数据     N字节（个数*2）\\nFF                   结束符   1字节\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n测试报文1：\\nFE 65 FF FE 02 01 02 01 02 02 5E FF"}', 'include', 'record', 1, 2000, 1712903951637, 1713099893025),
	(1258, '火警', 'JB-3101G', '上海松江飞繁电子有限公司', 'JavaScript', 'device', '{"decode":{"main":"decode","code":"/**\\n * 解码器的入口函数\\n * 全局参数：\\n *     fox_edge_data：json string格式 或者 hex string格式的接收数据\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   提供给通道的发送数据。根据不同的通道服务，它可能是HEX结构的文本，也可能是JSON结构的对象，请自行根据选定的通道服务进行确认\\n */\\nfunction decode() {\\n\\tvar object = decodeStr(fox_edge_data, fox_edge_param);\\n  return JSON.stringify(object);\\n}\\n\\n/**\\n * 事件解码器函数：消火栓按钮报火警\\n * 全局参数：\\n *     fox_edge_data：hex string格式的接收数据\\n *                    XXX+[合法报文]+XXX，合法报文可能混杂在一堆其他数据之中\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   必须是列表格式的JSON字符串，并且JSON对象必须包含关键字【recordType】，否则不给与入库\\n */\\nfunction decodeStr(message, device_param) {\\n    // 检查：是否解码器成功\\n    var obj = decodeObj(message);\\n    if (!obj.success) {\\n        return \\"解码失败:\\" + obj.message;\\n    }\\n\\n    if (obj.type === \'01\' && obj.data.length >= 2) {\\n        var data = obj.data;\\n\\n        // 校验帧长度\\n        var count = parseInt(data.substring(0, 2), 16);\\n\\n        // 必须以列表格式返回\\n        var result = [];\\n        for (var i = 0; i < count; i++) {\\n            var loop_addr = parseInt(data.substring(4 * i + 2, 4 * i + 4), 16);\\n            var node_addr = parseInt(data.substring(4 * i + 4, 4 * i + 6), 16);\\n\\n            var devAddr = loop_addr + \\"-\\" + padStart(\'\' + node_addr, 3, \'0\');\\n            var record = {\\n                \\"recordType\\": \\"火警\\", \\"devAddr\\": devAddr\\n            };\\n\\n            result.push(record);\\n        }\\n\\n        return result;\\n    }\\n\\n    return \\"\\";\\n}\\n"}}', '{"description":"报文格式：\\n【报头】【类型】【未知】【长度】【数据】【报尾】\\n\\n范例1：\\nFE 65 FF FE 04 01 01 01 65 FF\\n解读：\\nFE 65 FF FE     起始符   4字节\\n04                   类型     1字节\\n01                   未知     1字节\\n01                   个数     1字节\\n01 65              数据     N字节（个数*2）\\nFF                   结束符   1字节\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n测试报文1：\\n1-070火警（手报）\\nFE 65 FF FE 01 01 01 01 46 FF\\n\\n1-002火警（烟感）\\nFE 65 FF FE 01 01 01 01 02 FF\\nFE 65 FF FE 01 01 02 01 4D 01 4C FF"}', 'report', 'record', 1, 2000, 1712829661152, 1713099119892),
	(1259, '故障', 'JB-3101G', '上海松江飞繁电子有限公司', 'JavaScript', 'device', '{"decode":{"main":"decode","code":"/**\\n * 解码器的入口函数\\n * 全局参数：\\n *     fox_edge_data：json string格式 或者 hex string格式的接收数据\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   提供给通道的发送数据。根据不同的通道服务，它可能是HEX结构的文本，也可能是JSON结构的对象，请自行根据选定的通道服务进行确认\\n */\\nfunction decode() {\\n\\tvar object = decodeStr(fox_edge_data, fox_edge_param);\\n  return JSON.stringify(object);\\n}\\n\\n/**\\n * 事件解码器函数：消火栓按钮报火警\\n * 全局参数：\\n *     fox_edge_data：hex string格式的接收数据\\n *                    XXX+[合法报文]+XXX，合法报文可能混杂在一堆其他数据之中\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   必须是列表格式的JSON字符串，并且JSON对象必须包含关键字【recordType】，否则不给与入库\\n */\\nfunction decodeStr(message, device_param) {\\n    // 检查：是否解码器成功\\n    var obj = decodeObj(message);\\n    if (!obj.success) {\\n        return \\"解码失败:\\" + obj.message;\\n    }\\n\\n    if (obj.type === \'02\' && obj.data.length >= 2) {\\n        var data = obj.data;\\n\\n        // 校验帧长度\\n        var count = parseInt(data.substring(0, 2), 16);\\n\\n        // 必须以列表格式返回\\n        var result = [];\\n        for (var i = 0; i < count; i++) {\\n            var loop_addr = parseInt(data.substring(4 * i + 2, 4 * i + 4), 16);\\n            var node_addr = parseInt(data.substring(4 * i + 4, 4 * i + 6), 16);\\n\\n            var devAddr = loop_addr + \\"-\\" + padStart(\'\' + node_addr, 3, \'0\');\\n            var record = {\\n                \\"recordType\\": \\"故障\\", \\"devAddr\\": devAddr\\n            };\\n\\n            result.push(record);\\n        }\\n\\n        return result;\\n    }\\n\\n    return \\"\\";\\n}"}}', '{"description":"报文格式：\\n【报头】【未知】【类型】【长度】【数据】【校验】【报尾】\\n\\n范例1：\\nFE 01 64 01 00 64 56 DB FF\\n解读：\\nFE       报头（1字节）\\n01       未知（1字节）\\n64       类型（1字节）\\n01 00  长度（2字节）\\n64       数据（N字节）\\n56 DB 校验和（2字节 CRC16-MODBUS）\\nFF       包尾（1字节）\\n\\n范例1：\\nFE 01 64 01 00 64 56 DB FF\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n1-070故障（手报）\\nFE 65 FF FE 02 01 01 01 46 FF \\n\\n1-002故障（烟感）\\nFE 65 FF FE 02 01 01 01 02 FF \\n\\n2-094广播模块故障\\nFE 65 FF FE 02 01 02 01 02 02 5E FF\\n\\n"}', 'report', 'record', 1, 2000, 1712829661152, 1713099126824),
	(1260, '动作', 'JB-3101G', '上海松江飞繁电子有限公司', 'JavaScript', 'device', '{"decode":{"main":"decode","code":"/**\\n * 解码器的入口函数\\n * 全局参数：\\n *     fox_edge_data：json string格式 或者 hex string格式的接收数据\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   提供给通道的发送数据。根据不同的通道服务，它可能是HEX结构的文本，也可能是JSON结构的对象，请自行根据选定的通道服务进行确认\\n */\\nfunction decode() {\\n\\tvar object = decodeStr(fox_edge_data, fox_edge_param);\\n  return JSON.stringify(object);\\n}\\n\\n/**\\n * 事件解码器函数：消火栓按钮报火警\\n * 全局参数：\\n *     fox_edge_data：hex string格式的接收数据\\n *                    XXX+[合法报文]+XXX，合法报文可能混杂在一堆其他数据之中\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   必须是列表格式的JSON字符串，并且JSON对象必须包含关键字【recordType】，否则不给与入库\\n */\\nfunction decodeStr(message, device_param) {\\n    // 检查：是否解码器成功\\n    var obj = decodeObj(message);\\n    if (!obj.success) {\\n        return \\"解码失败:\\" + obj.message;\\n    }\\n\\n    if ((obj.type === \'03\' || obj.type === \'05\') && obj.data.length >= 2) {\\n        var data = obj.data;\\n\\n        // 校验帧长度\\n        var count = parseInt(data.substring(0, 2), 16);\\n\\n        // 必须以列表格式返回\\n        var result = [];\\n        for (var i = 0; i < count; i++) {\\n            var loop_addr = parseInt(data.substring(4 * i + 2, 4 * i + 4), 16);\\n            var node_addr = parseInt(data.substring(4 * i + 4, 4 * i + 6), 16);\\n\\n            var devAddr = loop_addr + \\"-\\" + padStart(\'\' + node_addr, 3, \'0\');\\n            var record = {\\n                \\"recordType\\": \\"动作\\", \\"devAddr\\": devAddr\\n            };\\n\\n            result.push(record);\\n        }\\n\\n        return result;\\n    }\\n\\n    return \\"\\";\\n}"}}', '{"description":"报文格式：\\n【报头】【类型】【未知】【长度】【数据】【报尾】\\n\\n范例1：\\nFE 65 FF FE 04 01 01 01 65 FF\\n解读：\\nFE 65 FF FE     起始符   4字节\\n04                   类型     1字节\\n01                   未知     1字节\\n01                   个数     1字节\\n01 65              数据     N字节（个数*2）\\nFF                   结束符   1字节\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n2-93动作（输入输出模块）\\nFE 65 FF FE 03 01 01 02 5D FF\\n\\n1-94动作（单输入模块）\\nFE 65 FF FE 05 01 01 01 5E FF \\nFE 65 FF FE 05 01 01 01 57 FF"}', 'report', 'record', 1, 2000, 1712829661152, 1713099103617),
	(1261, '反馈', 'JB-3101G', '上海松江飞繁电子有限公司', 'JavaScript', 'device', '{"decode":{"main":"decode","code":"/**\\n * 解码器的入口函数\\n * 全局参数：\\n *     fox_edge_data：json string格式 或者 hex string格式的接收数据\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   提供给通道的发送数据。根据不同的通道服务，它可能是HEX结构的文本，也可能是JSON结构的对象，请自行根据选定的通道服务进行确认\\n */\\nfunction decode() {\\n\\tvar object = decodeStr(fox_edge_data, fox_edge_param);\\n  return JSON.stringify(object);\\n}\\n\\n/**\\n * 事件解码器函数：消火栓按钮报火警\\n * 全局参数：\\n *     fox_edge_data：hex string格式的接收数据\\n *                    XXX+[合法报文]+XXX，合法报文可能混杂在一堆其他数据之中\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   必须是列表格式的JSON字符串，并且JSON对象必须包含关键字【recordType】，否则不给与入库\\n */\\nfunction decodeStr(message, device_param) {\\n    // 检查：是否解码器成功\\n    var obj = decodeObj(message);\\n    if (!obj.success) {\\n        return \\"解码失败:\\" + obj.message;\\n    }\\n\\n    if (obj.type === \'04\' && obj.data.length >= 2) {\\n        var data = obj.data;\\n\\n        // 校验帧长度\\n        var count = parseInt(data.substring(0, 2), 16);\\n\\n        // 必须以列表格式返回\\n        var result = [];\\n        for (var i = 0; i < count; i++) {\\n            var loop_addr = parseInt(data.substring(4 * i + 2, 4 * i + 4), 16);\\n            var node_addr = parseInt(data.substring(4 * i + 4, 4 * i + 6), 16);\\n\\n            var devAddr = loop_addr + \\"-\\" + padStart(\'\' + node_addr, 3, \'0\');\\n            var record = {\\n                \\"recordType\\": \\"反馈\\", \\"devAddr\\": devAddr\\n            };\\n\\n            result.push(record);\\n        }\\n\\n        return result;\\n    }\\n\\n    return \\"\\";\\n}"}}', '{"description":"报文格式：\\n【报头】【类型】【未知】【长度】【数据】【报尾】\\n\\n范例1：\\nFE 65 FF FE 04 01 01 01 65 FF\\n解读：\\nFE 65 FF FE     起始符   4字节\\n04                   类型     1字节\\n01                   未知     1字节\\n01                   个数     1字节\\n01 65              数据     N字节（个数*2）\\nFF                   结束符   1字节\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n\\nFE 65 FF FE 04 01 01 01 65 FF"}', 'report', 'record', 1, 2000, 1712829661152, 1713099113025),
	(1262, 'splitHandler', 'JB-TG-JBF-11S', '青鸟消防股份有限公司', 'JavaScript', 'channel', '{"decode":{"main":"decode","code":"/**\\n * 编码器的入口函数\\n * 全局参数：\\n *     message：hex string格式的接收数据\\n *              XX+[合法报文]+XXX，合法报文可能混杂在一堆其他数据之中\\n * 返回值：\\n *   从XXX+[合法报文]+XXX中，截取到的[合法报文]\\n */\\nfunction decode(message) {\\n    var starTag = \\"7E\\";\\n    var endTag = \\"7E\\";\\n\\n    message = message.replace(/\\\\s+/g, \\"\\");\\n    starTag = starTag.replace(/\\\\s+/g, \\"\\");\\n    endTag = endTag.replace(/\\\\s+/g, \\"\\");\\n\\n    // 转换成大写\\n    message = message.toUpperCase();\\n    starTag = starTag.toUpperCase();\\n    endTag = endTag.toUpperCase();\\n\\n    // 找到起始符\\n    var start = message.indexOf(starTag);\\n    if (start < 0) {\\n        return \\"\\";\\n    }\\n\\n    // 切掉前面的数据\\n    message = message.substring(start);\\n\\n    // 切出第一行\\n    var line = getLine(message, starTag, endTag);\\n    if (line.length === 0) {\\n        return \\"\\";\\n    }\\n\\n    return line;\\n}\\n\\n\\nfunction getData(line) {\\n    return line.substring(10, line.length - 6);\\n}\\n\\n/**\\n * 分拆行\\n * @param message 消息\\n * @param starTag 起始符\\n * @param endTag 结束符\\n * @returns {string} 行\\n */\\nfunction getLine(message, starTag, endTag) {\\n    // 寻找起始标记\\n    var start = message.indexOf(starTag);\\n    if (start !== 0) {\\n        return \\"\\";\\n    }\\n\\n    // 检测：最小长度\\n    if (message.length < 16) {\\n        return \\"\\";\\n    }\\n\\n    // 数据大小\\n    var size = parseInt(message.substring(8, 10), 16);\\n\\n    // 切第一行\\n    var line = message.substring(start, start + 16 + size * 2);\\n    if (line.substring(line.length - endTag.length, line.length) !== endTag) {\\n        return \\"\\";\\n    }\\n\\n    // 截取第一行，并进行行验证\\n    if (!verifyLine(line)) {\\n        return \\"\\";\\n    }\\n\\n    return line;\\n}\\n\\n/**\\n * 验证CRC\\n *\\n * @param line 行信息\\n * @returns {boolean} 是否成功\\n */\\nfunction verifyLine(line) {\\n    if (line.length < 16) {\\n        return false;\\n    }\\n\\n    var body = line.substring(0, line.length - 6);\\n\\n    // 校验帧长度\\n    var size = parseInt(line.substring(8, 10), 16);\\n    if (line.length != 16 + size * 2) {\\n        return false;\\n    }\\n\\n\\n    var ch = line.substring(line.length - 4, line.length - 2);\\n    var cl = line.substring(line.length - 6, line.length - 4);\\n    var crc = calculateCRC16(body, 0xFFFF, 0xA001);\\n\\n    return crc === ch + cl;\\n}\\n\\n/**\\n * CRC16校验\\n * 范例：calculateCRC16(\\"7E0000000133000100\\", 0x0000, 0xA001);\\n *\\n * @param dataHexString 无空格的HEX格式文本，例如：\\"7E0000000133000100\\";\\n * @param init CRC16的初始值，例如：0x0000\\n * @param poly CRC16的多项式，例如：0xA001\\n * @returns {string}\\n */\\nfunction calculateCRC16(dataHexString, init, poly) {\\n    var dataBytes = [];\\n    for (var i = 0; i < dataHexString.length; i += 2) {\\n        dataBytes.push(parseInt(dataHexString.substring(i, i + 2), 16));\\n    }\\n\\n    var crc = init;\\n    var polynomial = poly;  // This is the polynomial x^16 + x^15 + x^2 + 1\\n\\n    for (var i = 0; i < dataBytes.length; i++) {\\n        crc ^= dataBytes[i];\\n        for (var j = 0; j < 8; j++) {\\n            if (crc & 0x0001) {\\n                crc = ((crc >> 1) ^ polynomial) & 0xFFFF;\\n            } else {\\n                crc >>= 1;\\n            }\\n        }\\n    }\\n\\n    crc = crc & 0xffff\\n\\n    var txt = crc.toString(16).toUpperCase();\\n    txt = padStart(txt, 4, \'0\');\\n    return txt;\\n}\\n\\nfunction padStart(str, length, ch) {\\n    while (str.length < length) {\\n        str = ch + str;\\n    }\\n\\n    return str;\\n}"}}', '{"description":"报文格式：\\n【报头】【未知】【长度】【数据】【校验】【报尾】\\n\\n范例1：\\n7E 01 02 02 02 01 00 5C FE 7E\\n\\n解读：\\n7E   报头 1字节\\n01 02 02  未知 3字节\\n02       长度 1字节\\n01 00  数据 N字节\\n5C FE  CRC-MODBUS\\n7E       报尾 1字节 \\n\\n其中数据的第1个字节为，上报类型代码\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n测试报文1：\\n7E 01 02 02 02 01 00 5C FE 7E\\n\\n测试报文2：\\n7E 01 02 02 09   96 01 00 15 07 14 10 07 13 43 09 7E \\n\\n"}', 'splitHandler', 'status', 1, 2000, 1712828091343, 1713168702197),
	(1263, 'libs', 'JB-TG-JBF-11S', '青鸟消防股份有限公司', 'JavaScript', 'device', '{"include":{"main":"include","code":"/**\\n * 编码器的入口函数\\n * 全局参数：\\n *     message：hex string格式的接收数据\\n *              XX+[合法报文]+XXX，合法报文可能混杂在一堆其他数据之中\\n * 返回值：\\n *   从XXX+[合法报文]+XXX中，截取到的[合法报文]\\n */\\nfunction decodeObj(message) {\\n    var starTag = \\"7E\\";\\n    var endTag = \\"7E\\";\\n\\n    message = message.replace(/\\\\s+/g, \\"\\");\\n    starTag = starTag.replace(/\\\\s+/g, \\"\\");\\n    endTag = endTag.replace(/\\\\s+/g, \\"\\");\\n\\n    // 转换成大写\\n    message = message.toUpperCase();\\n    starTag = starTag.toUpperCase();\\n    endTag = endTag.toUpperCase();\\n\\n    var obj = {\\n        \\"data\\": data, \\"success\\": false, \\"message\\": \\"\\"\\n    }\\n\\n    // 找到起始符\\n    var start = message.indexOf(starTag);\\n    if (start < 0) {\\n        obj.message = \\"找到起始符\\";\\n        return obj;\\n    }\\n\\n    // 切掉前面的数据\\n    message = message.substring(start);\\n\\n    // 读取行\\n    var line = getLine(message, starTag, endTag);\\n    if (line.length === 0) {\\n        obj.message = \\"读取行失败\\";\\n        return obj;\\n    }\\n\\n    //取出行信息\\n    var data = getData(line);\\n\\n    obj = {\\n        \\"data\\": data, \\"success\\": true, \\"message\\": \\"\\"\\n    }\\n\\n    return obj;\\n}\\n\\n\\nfunction getData(line) {\\n    return line.substring(10, line.length - 6);\\n}\\n\\n/**\\n * 分拆行\\n * @param message 消息\\n * @param starTag 起始符\\n * @param endTag 结束符\\n * @returns {string} 行\\n */\\nfunction getLine(message, starTag, endTag) {\\n    // 寻找起始标记\\n    var start = message.indexOf(starTag);\\n    if (start !== 0) {\\n        return \\"\\";\\n    }\\n\\n    // 检测：最小长度\\n    if (message.length < 16) {\\n        return \\"\\";\\n    }\\n\\n    // 数据大小\\n    var size = parseInt(message.substring(8, 10), 16);\\n\\n    // 切第一行\\n    var line = message.substring(start, start + 16 + size * 2);\\n    if (line.substring(line.length - endTag.length, line.length) !== endTag) {\\n        return \\"\\";\\n    }\\n\\n    // 截取第一行，并进行行验证\\n    if (!verifyLine(line)) {\\n        return \\"\\";\\n    }\\n\\n    return line;\\n}\\n\\n/**\\n * 验证CRC\\n *\\n * @param line 行信息\\n * @returns {boolean} 是否成功\\n */\\nfunction verifyLine(line) {\\n    if (line.length < 16) {\\n        return false;\\n    }\\n\\n    var body = line.substring(0, line.length - 6);\\n\\n    // 校验帧长度\\n    var size = parseInt(line.substring(8, 10), 16);\\n    if (line.length != 16 + size * 2) {\\n        return false;\\n    }\\n\\n\\n    var ch = line.substring(line.length - 4, line.length - 2);\\n    var cl = line.substring(line.length - 6, line.length - 4);\\n    var crc = calculateCRC16(body, 0xFFFF, 0xA001);\\n\\n    return crc === ch + cl;\\n}\\n\\n/**\\n * CRC16校验\\n * 范例：calculateCRC16(\\"7E0000000133000100\\", 0x0000, 0xA001);\\n *\\n * @param dataHexString 无空格的HEX格式文本，例如：\\"7E0000000133000100\\";\\n * @param init CRC16的初始值，例如：0x0000\\n * @param poly CRC16的多项式，例如：0xA001\\n * @returns {string}\\n */\\nfunction calculateCRC16(dataHexString, init, poly) {\\n    var dataBytes = [];\\n    for (var i = 0; i < dataHexString.length; i += 2) {\\n        dataBytes.push(parseInt(dataHexString.substring(i, i + 2), 16));\\n    }\\n\\n    var crc = init;\\n    var polynomial = poly;  // This is the polynomial x^16 + x^15 + x^2 + 1\\n\\n    for (var i = 0; i < dataBytes.length; i++) {\\n        crc ^= dataBytes[i];\\n        for (var j = 0; j < 8; j++) {\\n            if (crc & 0x0001) {\\n                crc = ((crc >> 1) ^ polynomial) & 0xFFFF;\\n            } else {\\n                crc >>= 1;\\n            }\\n        }\\n    }\\n\\n    crc = crc & 0xffff\\n\\n    var txt = crc.toString(16).toUpperCase();\\n    txt = padStart(txt, 4, \'0\');\\n    return txt;\\n}\\n\\nfunction padStart(str, length, ch) {\\n    while (str.length < length) {\\n        str = ch + str;\\n    }\\n\\n    return str;\\n}\\n"}}', '{"description":"报文格式：\\n【报头】【未知】【长度】【数据】【校验】【报尾】\\n\\n范例1：\\n7E 01 02 02 02 01 00 5C FE 7E\\n\\n解读：\\n7E   报头 1字节\\n01 02 02  未知 3字节\\n02       长度 1字节\\n01 00  数据 N字节\\n5C FE  CRC-MODBUS\\n7E       报尾 1字节 \\n\\n其中数据的第1个字节为，上报类型代码\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n测试报文1：\\n7E 01 02 02 02 01 00 5C FE 7E\\n\\n测试报文2：\\n7E 01 02 02 09   96 01 00 15 07 14 10 07 13 43 09 7E "}', 'include', 'record', 1, 2000, 1712903951637, 1713168706388),
	(1264, '调节主叫发送频率', 'JB-TG-JBF-11S', '青鸟消防股份有限公司', 'JavaScript', 'device', '{"encode":{"main":"encode","code":"/**\\n * 编码器的入口函数\\n * 全局参数：\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   提供给通道的发送数据。根据不同的通道服务，它可能是HEX结构的文本，也可能是JSON结构的对象，请自行根据选定的通道服务进行确认\\n */\\nfunction encode() {\\n    return encodeHex(fox_edge_param);\\n}\\n\\n/**\\n * 开发者自己写的编码函数1\\n * 返回格式1：HEX格式的字符串\\n *     比如串口通道，TCP通道、模拟通道，它们的输入/输出格式，就是HEX格式的文本\\n */\\nfunction encodeHex(param) {\\n    return \\"FF FF FF 09 00 00 01 6E 01 0A 00 03\\";\\n}\\n"}}', '{"description":"设备信息的上报，先要定期发出主叫操作，周期性的激活与设备的连接"}', 'publish', 'status', 1, 2000, 1713102613031, 1713102788365),
	(1266, '火警', 'JB-TG-JBF-11S', '青鸟消防股份有限公司', 'JavaScript', 'device', '{"decode":{"main":"decode","code":"/**\\n * 解码器的入口函数\\n * 全局参数：\\n *     fox_edge_data：json string格式 或者 hex string格式的接收数据\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   提供给通道的发送数据。根据不同的通道服务，它可能是HEX结构的文本，也可能是JSON结构的对象，请自行根据选定的通道服务进行确认\\n */\\nfunction decode() {\\n\\tvar object = decodeStr(fox_edge_data, fox_edge_param);\\n  return JSON.stringify(object);\\n}\\n\\n/**\\n * 事件解码器函数：消火栓按钮报火警\\n * 全局参数：\\n *     fox_edge_data：hex string格式的接收数据\\n *                    XXX+[合法报文]+XXX，合法报文可能混杂在一堆其他数据之中\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   必须是列表格式的JSON字符串，并且JSON对象必须包含关键字【recordType】，否则不给与入库\\n */\\nfunction decodeStr(message, device_param) {\\n    // 检查：是否解码器成功\\n    var obj = decodeObj(message);\\n    if (!obj.success) {\\n        return \\"解码失败:\\" + obj.message;\\n    }\\n\\n    var data = obj.data;\\n\\n    if (data.substring(0, 2) === \'02\') {\\n        var loop_addr = parseInt(data.substring(6, 8), 16);\\n        var node_addr = parseInt(data.substring(10, 12), 16);\\n\\n        var devAddr = loop_addr + \\"-\\" + node_addr;\\n\\n        var result = [];\\n\\n        var record = {\\n            \\"recordType\\": \\"火警\\", \\"devAddr\\": devAddr\\n        };\\n\\n        result.push(record);\\n\\n\\n        return result;\\n    }\\n\\n    return \\"\\";\\n}"}}', '{"description":"报文格式：\\n【报头】【未知】【长度】【数据】【校验】【报尾】\\n\\n范例1：\\n7E 01 02 02 02 01 00 5C FE 7E\\n\\n解读：\\n7E   报头 1字节\\n01 02 02  未知 3字节\\n02       长度 1字节\\n01 00  数据 N字节\\n5C FE  CRC-MODBUS\\n7E       报尾 1字节 \\n\\n其中数据的第1个字节为，上报类型代码\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n16:26:40   3机1-66 手报火警 \\n152中控室西南前隔离室手报\\n7E 01 02 02 27 02 03 00 01 00 42 00 01 15 07 14 10 1A 28 31 35 32 D6 D0 BF D8 CA D2 CE F7 C4 CF C7 B0 B8 F4 C0 EB CA D2 CA D6 B1 A8 41 8A 7E\\n"}', 'report', 'record', 1, 2000, 1712829661152, 1713168695591),
	(1267, '故障', 'JB-TG-JBF-11S', '青鸟消防股份有限公司', 'JavaScript', 'device', '{"decode":{"main":"decode","code":"/**\\n * 解码器的入口函数\\n * 全局参数：\\n *     fox_edge_data：json string格式 或者 hex string格式的接收数据\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   提供给通道的发送数据。根据不同的通道服务，它可能是HEX结构的文本，也可能是JSON结构的对象，请自行根据选定的通道服务进行确认\\n */\\nfunction decode() {\\n\\tvar object = decodeStr(fox_edge_data, fox_edge_param);\\n  return JSON.stringify(object);\\n}\\n\\n/**\\n * 事件解码器函数：消火栓按钮报火警\\n * 全局参数：\\n *     fox_edge_data：hex string格式的接收数据\\n *                    XXX+[合法报文]+XXX，合法报文可能混杂在一堆其他数据之中\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   必须是列表格式的JSON字符串，并且JSON对象必须包含关键字【recordType】，否则不给与入库\\n */\\nfunction decodeStr(message, device_param) {\\n    // 检查：是否解码器成功\\n    var obj = decodeObj(message);\\n    if (!obj.success) {\\n        return \\"解码失败:\\" + obj.message;\\n    }\\n\\n    var data = obj.data;\\n\\n    if (data.substring(0, 2) === \'06\') {\\n        var loop_addr = parseInt(data.substring(6, 8), 16);\\n        var node_addr = parseInt(data.substring(10, 12), 16);\\n\\n        var devAddr = loop_addr + \\"-\\" + node_addr;\\n\\n        var result = [];\\n\\n        var record = {\\n            \\"recordType\\": \\"故障\\", \\"devAddr\\": devAddr\\n        };\\n\\n        result.push(record);\\n\\n\\n        return result;\\n    }\\n\\n    return \\"\\";\\n}"}}', '{"description":"报文格式：\\n【报头】【未知】【长度】【数据】【校验】【报尾】\\n\\n范例1：\\n7E 01 02 02 02 01 00 5C FE 7E\\n\\n解读：\\n7E   报头 1字节\\n01 02 02  未知 3字节\\n02       长度 1字节\\n01 00  数据 N字节\\n5C FE  CRC-MODBUS\\n7E       报尾 1字节 \\n\\n其中数据的第1个字节为，上报类型代码\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n16:18:55   3机1-66 手报故障\\n152中控室西南前隔离室手报\\n7E 01 02 02 27 06 03 00 01 00 42 00 01 15 07 14 10 12 37 31 35 32 D6 D0 BF D8 CA D2 CE F7 C4 CF C7 B0 B8 F4 C0 EB CA D2 CA D6 B1 A8 28 12 7E \\n\\n"}', 'report', 'record', 1, 2000, 1712829661152, 1713168719071),
	(1268, '反馈', 'JB-TG-JBF-11S', '青鸟消防股份有限公司', 'JavaScript', 'device', '{"decode":{"main":"decode","code":"/**\\n * 解码器的入口函数\\n * 全局参数：\\n *     fox_edge_data：json string格式 或者 hex string格式的接收数据\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   提供给通道的发送数据。根据不同的通道服务，它可能是HEX结构的文本，也可能是JSON结构的对象，请自行根据选定的通道服务进行确认\\n */\\nfunction decode() {\\n\\tvar object = decodeStr(fox_edge_data, fox_edge_param);\\n  return JSON.stringify(object);\\n}\\n\\n/**\\n * 事件解码器函数：消火栓按钮报火警\\n * 全局参数：\\n *     fox_edge_data：hex string格式的接收数据\\n *                    XXX+[合法报文]+XXX，合法报文可能混杂在一堆其他数据之中\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   必须是列表格式的JSON字符串，并且JSON对象必须包含关键字【recordType】，否则不给与入库\\n */\\nfunction decodeStr(message, device_param) {\\n    // 检查：是否解码器成功\\n    var obj = decodeObj(message);\\n    if (!obj.success) {\\n        return \\"解码失败:\\" + obj.message;\\n    }\\n\\n    var data = obj.data;\\n\\n    if (data.substring(0, 2) === \'04\') {\\n        var loop_addr = parseInt(data.substring(6, 8), 16);\\n        var node_addr = parseInt(data.substring(10, 12), 16);\\n\\n        var devAddr = loop_addr + \\"-\\" + node_addr;\\n\\n        var result = [];\\n\\n        var record = {\\n            \\"recordType\\": \\"反馈\\", \\"devAddr\\": devAddr\\n        };\\n\\n        result.push(record);\\n\\n\\n        return result;\\n    }\\n\\n    return \\"\\";\\n}"}}', '{"description":"报文格式：\\n【报头】【未知】【长度】【数据】【校验】【报尾】\\n\\n范例1：\\n7E 01 02 02 02 01 00 5C FE 7E\\n\\n解读：\\n7E   报头 1字节\\n01 02 02  未知 3字节\\n02       长度 1字节\\n01 00  数据 N字节\\n5C FE  CRC-MODBUS\\n7E       报尾 1字节 \\n\\n其中数据的第1个字节为，上报类型代码\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n15:11  10机2-146 输入模块动作\\n14#皮带喷淋进口阀\\n7E 01 02 02 1F 04 0A 00 02 00 92 00 09 15 07 14 0F 0B 28 31 34 23 C6 A4 B4 F8 C5 E7 C1 DC BD F8 BF DA B7 A7 61 AF 7E \\n"}', 'report', 'record', 1, 2000, 1712829661152, 1713168710823),
	(1272, 'splitHandler', 'JB-QB-JBF-5010', '青鸟消防股份有限公司', 'JavaScript', 'channel', '{"decode":{"main":"decode","code":"/**\\n * 编码器的入口函数\\n * 全局参数：\\n *     message：hex string格式的接收数据\\n *              XX+[合法报文]+XXX，合法报文可能混杂在一堆其他数据之中\\n * 返回值：\\n *   从XXX+[合法报文]+XXX中，截取到的[合法报文]\\n */\\nfunction decode(message) {\\n    var starTag = \\"FF FF FF\\";\\n\\n    message = message.replace(/\\\\s+/g, \\"\\");\\n    starTag = starTag.replace(/\\\\s+/g, \\"\\");\\n\\n    // 转换成大写\\n    message = message.toUpperCase();\\n    starTag = starTag.toUpperCase();\\n\\n    // 找到起始符\\n    var start = message.indexOf(starTag);\\n    if (start < 0) {\\n        return \\"\\";\\n    }\\n\\n    // 切掉前面的数据\\n    message = message.substring(start);\\n\\n    // 切出第一行\\n    var line = getLine(message, starTag);\\n    if (line.length === 0) {\\n        return \\"\\";\\n    }\\n\\n    return line;\\n}\\n\\n/**\\n * 分拆行\\n * @param message 消息\\n * @param starTag 起始符\\n * @returns {string} 行\\n */\\nfunction getLine(message, starTag) {\\n    // 寻找起始标记\\n    var start = message.indexOf(starTag);\\n    if (start !== 0) {\\n        return \\"\\";\\n    }\\n\\n    // 检测：最小长度\\n    if (message.length < 22) {\\n        return \\"\\";\\n    }\\n\\n    // 数据大小\\n    var size = parseInt(message.substring(16, 18), 16);\\n\\n    // 切第一行\\n    var line = message.substring(start, start + 22 + size * 2);\\n\\n    // 截取第一行，并进行行验证\\n    if (!verifyLine(line)) {\\n        return \\"\\";\\n    }\\n\\n    return line;\\n}\\n\\n/**\\n * 验证CRC\\n *\\n * @param line 行信息\\n * @returns {boolean} 是否成功\\n */\\nfunction verifyLine(line) {\\n    if (line.length < 22) {\\n        return false;\\n    }\\n\\n    var sum = 0;\\n    for (var i = 4; i < line.length - 2; i += 2) {\\n        var dat = parseInt(line[i] + line[i + 1], 16);\\n        sum += dat;\\n        sum = sum & 0xff;\\n    }\\n\\n    var chk = parseInt(line[line.length - 2] + line[line.length - 1], 16);\\n\\n    return chk === sum;\\n}"}}', '{"description":"报文格式：\\n【报头】【未知】【长度】【数据】【未知】【校验】\\n\\n范例1：\\nFF FF FF 0B 01 01 6E 00 0B 00 00 07 4C 14 13 03 1E 0F 36 00 01 66\\n\\n解读：\\nFF FF FF \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t 报头    3字节\\n0B 01 01 6E 00 \\t\\t\\t\\t\\t\\t\\t\\t 未知    5字节\\n0B \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t 长度   1字节\\n00 00 07 4C 14 13 03 1E 0F 36 00    数据   N字节\\n01 \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t 未知   1字节\\n66\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t 校验   1字节\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n测试报文1：\\nFF FF FF 0B 01 01 6E 00 0B 00 00 07 4C 14 13 03 1E 0F 36 00 01 66\\n\\n"}', 'splitHandler', 'status', 1, 2000, 1712828091343, 1713171833090),
	(1273, 'libs', 'JB-QB-JBF-5010', '青鸟消防股份有限公司', 'JavaScript', 'device', '{"include":{"main":"include","code":"\\n/**\\n * 编码器的入口函数\\n * 全局参数：\\n *     message：hex string格式的接收数据\\n *              XX+[合法报文]+XXX，合法报文可能混杂在一堆其他数据之中\\n * 返回值：\\n *   从XXX+[合法报文]+XXX中，截取到的[合法报文]\\n */\\nfunction decodeObj(message) {\\n    var starTag = \\"FF FF FF\\";\\n\\n    message = message.replace(/\\\\s+/g, \\"\\");\\n    starTag = starTag.replace(/\\\\s+/g, \\"\\");\\n\\n    // 转换成大写\\n    message = message.toUpperCase();\\n    starTag = starTag.toUpperCase();\\n\\n    var obj = {\\n        \\"head\\": head, \\"data\\": data, \\"success\\": false, \\"message\\": \\"\\"\\n    }\\n\\n    // 找到起始符\\n    var start = message.indexOf(starTag);\\n    if (start < 0) {\\n        obj.message = \\"找到起始符\\";\\n        return obj;\\n    }\\n\\n    // 切掉前面的数据\\n    message = message.substring(start);\\n\\n    // 切出第一行\\n    var line = getLine(message, starTag);\\n    if (line.length === 0) {\\n        obj.message = \\"读取行失败\\";\\n        return obj;\\n    }\\n\\n    var head = line.substring(6, 16);\\n    var data = line.substring(18, line.length-4);\\n\\n    obj = {\\n        \\"head\\": head, \\"data\\": data, \\"success\\": true, \\"message\\": \\"\\"\\n    }\\n\\n    return obj;\\n}\\n\\nfunction decode(message) {\\n    var starTag = \\"FF FF FF\\";\\n\\n    message = message.replace(/\\\\s+/g, \\"\\");\\n    starTag = starTag.replace(/\\\\s+/g, \\"\\");\\n\\n    // 转换成大写\\n    message = message.toUpperCase();\\n    starTag = starTag.toUpperCase();\\n\\n    // 找到起始符\\n    var start = message.indexOf(starTag);\\n    if (start < 0) {\\n        return \\"\\";\\n    }\\n\\n    // 切掉前面的数据\\n    message = message.substring(start);\\n\\n    // 切出第一行\\n    var line = getLine(message, starTag);\\n    if (line.length === 0) {\\n        return \\"\\";\\n    }\\n\\n    return line;\\n}\\n\\n/**\\n * 分拆行\\n * @param message 消息\\n * @param starTag 起始符\\n * @returns {string} 行\\n */\\nfunction getLine(message, starTag) {\\n    // 寻找起始标记\\n    var start = message.indexOf(starTag);\\n    if (start !== 0) {\\n        return \\"\\";\\n    }\\n\\n    // 检测：最小长度\\n    if (message.length < 22) {\\n        return \\"\\";\\n    }\\n\\n    // 数据大小\\n    var size = parseInt(message.substring(16, 18), 16);\\n\\n    // 切第一行\\n    var line = message.substring(start, start + 22 + size * 2);\\n\\n    // 截取第一行，并进行行验证\\n    if (!verifyLine(line)) {\\n        return \\"\\";\\n    }\\n\\n    return line;\\n}\\n\\n/**\\n * 验证CRC\\n *\\n * @param line 行信息\\n * @returns {boolean} 是否成功\\n */\\nfunction verifyLine(line) {\\n    if (line.length < 22) {\\n        return false;\\n    }\\n\\n    var sum = 0;\\n    for (var i = 4; i < line.length - 2; i += 2) {\\n        var dat = parseInt(line[i] + line[i + 1], 16);\\n        sum += dat;\\n        sum = sum & 0xff;\\n    }\\n\\n    var chk = parseInt(line[line.length - 2] + line[line.length - 1], 16);\\n\\n    return chk === sum;\\n}\\n"}}', '{"description":"报文格式：\\n【报头】【未知】【长度】【数据】【未知】【校验】\\n\\n范例1：\\nFF FF FF 0B 01 01 6E 00 0B 00 00 07 4C 14 13 03 1E 0F 36 00 01 66\\n\\n解读：\\nFF FF FF \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t 报头    3字节\\n0B 01 01 6E 00 \\t\\t\\t\\t\\t\\t\\t\\t 未知    5字节\\n0B \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t 长度   1字节\\n00 00 07 4C 14 13 03 1E 0F 36 00    数据   N字节\\n01 \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t 未知   1字节\\n66\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t 校验   1字节\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n测试报文1：\\nFF FF FF 0B 01 01 6E 00 0B 00 00 07 4C 14 13 03 1E 0F 36 00 01 66\\n\\n"}', 'include', 'record', 1, 2000, 1712903951637, 1713172713678),
	(1274, '火警', 'JB-QB-JBF-5010', '青鸟消防股份有限公司', 'JavaScript', 'device', '{"decode":{"main":"decode","code":"/**\\n * 解码器的入口函数\\n * 全局参数：\\n *     fox_edge_data：json string格式 或者 hex string格式的接收数据\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   提供给通道的发送数据。根据不同的通道服务，它可能是HEX结构的文本，也可能是JSON结构的对象，请自行根据选定的通道服务进行确认\\n */\\nfunction decode() {\\n\\tvar object = decodeStr(fox_edge_data, fox_edge_param);\\n  return JSON.stringify(object);\\n}\\n\\n/**\\n * 事件解码器函数：消火栓按钮报火警\\n * 全局参数：\\n *     fox_edge_data：hex string格式的接收数据\\n *                    XXX+[合法报文]+XXX，合法报文可能混杂在一堆其他数据之中\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   必须是列表格式的JSON字符串，并且JSON对象必须包含关键字【recordType】，否则不给与入库\\n */\\nfunction decodeStr(message, device_param) {\\n    // 检查：是否解码器成功\\n    var obj = decodeObj(message);\\n    if (!obj.success) {\\n        return \\"解码失败:\\" + obj.message;\\n    }\\n\\n    var head = obj.head;\\n    var data = obj.data;\\n\\n    if (head.substring(0, 2) === \'80\' && data.substring(0, 2) === \'00\') {\\n        var loop_addr = parseInt(data.substring(4, 6), 16);\\n        var node_addr = parseInt(data.substring(6, 8), 16);\\n\\n        var devAddr = loop_addr + \\"-\\" + node_addr;\\n\\n        var result = [];\\n\\n        var record = {\\n            \\"recordType\\": \\"火警\\", \\"devAddr\\": devAddr\\n        };\\n\\n        result.push(record);\\n\\n\\n        return result;\\n    }\\n\\n    return \\"\\";\\n}"}}', '{"description":"报文格式：\\n【报头】【未知】【长度】【数据】【未知】【校验】\\n\\n范例1：\\nFF FF FF 0B 01 01 6E 00 0B 00 00 07 4C 14 13 03 1E 0F 36 00 01 66\\n\\n解读：\\nFF FF FF \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t 报头    3字节\\n0B 01 01 6E 00 \\t\\t\\t\\t\\t\\t\\t\\t 未知    5字节\\n0B \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t 长度   1字节\\n00 00 07 4C 14 13 03 1E 0F 36 00    数据   N字节\\n01 \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t 未知   1字节\\n66\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t 校验   1字节\\n\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n08-28 手报火警\\nFF FF FF 80 01 01 6E 00 0B 00 00 08 1C 14 13 03 1E 0F 1F 1F 01 B4 "}', 'report', 'record', 1, 2000, 1712829661152, 1713173509686),
	(1275, '故障', 'JB-QB-JBF-5010', '青鸟消防股份有限公司', 'JavaScript', 'device', '{"decode":{"main":"decode","code":"/**\\n * 解码器的入口函数\\n * 全局参数：\\n *     fox_edge_data：json string格式 或者 hex string格式的接收数据\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   提供给通道的发送数据。根据不同的通道服务，它可能是HEX结构的文本，也可能是JSON结构的对象，请自行根据选定的通道服务进行确认\\n */\\nfunction decode() {\\n\\tvar object = decodeStr(fox_edge_data, fox_edge_param);\\n  return JSON.stringify(object);\\n}\\n\\n/**\\n * 事件解码器函数：消火栓按钮报火警\\n * 全局参数：\\n *     fox_edge_data：hex string格式的接收数据\\n *                    XXX+[合法报文]+XXX，合法报文可能混杂在一堆其他数据之中\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   必须是列表格式的JSON字符串，并且JSON对象必须包含关键字【recordType】，否则不给与入库\\n */\\nfunction decodeStr(message, device_param) {\\n    // 检查：是否解码器成功\\n    var obj = decodeObj(message);\\n    if (!obj.success) {\\n        return \\"解码失败:\\" + obj.message;\\n    }\\n\\n    var head = obj.head;\\n    var data = obj.data;\\n\\n    if (head.substring(0, 2) === \'0B\' && data.substring(0, 2) === \'00\') {\\n        var loop_addr = parseInt(data.substring(4, 6), 16);\\n        var node_addr = parseInt(data.substring(6, 8), 16);\\n\\n        var devAddr = loop_addr + \\"-\\" + node_addr;\\n\\n        var result = [];\\n\\n        var record = {\\n            \\"recordType\\": \\"故障\\", \\"devAddr\\": devAddr\\n        };\\n\\n        result.push(record);\\n\\n\\n        return result;\\n    }\\n\\n    return \\"\\";\\n}"}}', '{"description":"报文格式：\\n【报头】【未知】【长度】【数据】【未知】【校验】\\n\\n范例1：\\nFF FF FF 0B 01 01 6E 00 0B 00 00 07 4C 14 13 03 1E 0F 36 00 01 66\\n\\n解读：\\nFF FF FF \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t 报头    3字节\\n0B 01 01 6E 00 \\t\\t\\t\\t\\t\\t\\t\\t 未知    5字节\\n0B \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t 长度   1字节\\n00 00 07 4C 14 13 03 1E 0F 36 00    数据   N字节\\n01 \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t 未知   1字节\\n66\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t 校验   1字节\\n\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n08-16 烟感故障\\nFF FF FF 0B 01 01 6E 00 0B 00 00 08 10 14 13 03 1E 0F 0F 00 01 04\\n\\n手报故障 08-028\\nFF FF FF 0B 01 01 6E 00 0B 00 00 08 1C 14 13 07 0C 10 24 00 01 18 \\n\\n手报故障恢复 08-028\\nFF FF FF 0B 01 01 6E 00 0B 01 00 08 1C 14 13 07 0C 10 24 00 01 19 \\n\\n08-44 输入模块故障\\nFF FF FF 0B 01 01 6E 00 0B 00 00 08 2C 14 13 03 1E 0F 34 00 01 45 \\n\\n07-76 输入输出故障\\nFF FF FF 0B 01 01 6E 00 0B 00 00 07 4C 14 13 03 1E 0F 36 00 01 66 \\n\\n08-38 消火栓故障\\nFF FF FF 0B 01 01 6E 00 0B 00 00 08 26 14 13 03 1E 10 0A 00 01 16\\n"}', 'report', 'record', 1, 2000, 1712829661152, 1713173529454),
	(1276, '反馈', 'JB-QB-JBF-5010', '青鸟消防股份有限公司', 'JavaScript', 'device', '{"decode":{"main":"decode","code":"/**\\n * 解码器的入口函数\\n * 全局参数：\\n *     fox_edge_data：json string格式 或者 hex string格式的接收数据\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   提供给通道的发送数据。根据不同的通道服务，它可能是HEX结构的文本，也可能是JSON结构的对象，请自行根据选定的通道服务进行确认\\n */\\nfunction decode() {\\n\\tvar object = decodeStr(fox_edge_data, fox_edge_param);\\n  return JSON.stringify(object);\\n}\\n\\n/**\\n * 事件解码器函数：消火栓按钮报火警\\n * 全局参数：\\n *     fox_edge_data：hex string格式的接收数据\\n *                    XXX+[合法报文]+XXX，合法报文可能混杂在一堆其他数据之中\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   必须是列表格式的JSON字符串，并且JSON对象必须包含关键字【recordType】，否则不给与入库\\n */\\nfunction decodeStr(message, device_param) {\\n    // 检查：是否解码器成功\\n    var obj = decodeObj(message);\\n    if (!obj.success) {\\n        return \\"解码失败:\\" + obj.message;\\n    }\\n\\n    var head = obj.head;\\n    var data = obj.data;\\n\\n    if (head.substring(0, 2) === \'0C\' && data.substring(0, 2) === \'85\') {\\n        var loop_addr = parseInt(data.substring(4, 6), 16);\\n        var node_addr = parseInt(data.substring(6, 8), 16);\\n\\n        var devAddr = loop_addr + \\"-\\" + node_addr;\\n\\n        var result = [];\\n\\n        var record = {\\n            \\"recordType\\": \\"反馈\\", \\"devAddr\\": devAddr\\n        };\\n\\n        result.push(record);\\n\\n\\n        return result;\\n    }\\n\\n    return \\"\\";\\n}"}}', '{"description":"报文格式：\\n【报头】【未知】【长度】【数据】【未知】【校验】\\n\\n范例1：\\nFF FF FF 0B 01 01 6E 00 0B 00 00 07 4C 14 13 03 1E 0F 36 00 01 66\\n\\n解读：\\nFF FF FF \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t 报头    3字节\\n0B 01 01 6E 00 \\t\\t\\t\\t\\t\\t\\t\\t 未知    5字节\\n0B \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t 长度   1字节\\n00 00 07 4C 14 13 03 1E 0F 36 00    数据   N字节\\n01 \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t 未知   1字节\\n66\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t 校验   1字节\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n多线07-7 应答\\nFF FF FF 0C 01 01 6E 00 0B 85 00 F2 37 14 13 07 0C 10 26 00 02 A5\\n\\n输入模块反馈\\nFF FF FF 0C 01 01 6E 00 0B 85 00 07 4D 14 13 03 1E 10 10 00 01 C8 "}', 'report', 'record', 1, 2000, 1712829661152, 1713172984590),
	(1277, '动作', 'JB-QB-JBF-5010', '青鸟消防股份有限公司', 'JavaScript', 'device', '{"decode":{"main":"decode","code":"/**\\n * 解码器的入口函数\\n * 全局参数：\\n *     fox_edge_data：json string格式 或者 hex string格式的接收数据\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   提供给通道的发送数据。根据不同的通道服务，它可能是HEX结构的文本，也可能是JSON结构的对象，请自行根据选定的通道服务进行确认\\n */\\nfunction decode() {\\n\\tvar object = decodeStr(fox_edge_data, fox_edge_param);\\n  return JSON.stringify(object);\\n}\\n\\n/**\\n * 事件解码器函数：消火栓按钮报火警\\n * 全局参数：\\n *     fox_edge_data：hex string格式的接收数据\\n *                    XXX+[合法报文]+XXX，合法报文可能混杂在一堆其他数据之中\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   必须是列表格式的JSON字符串，并且JSON对象必须包含关键字【recordType】，否则不给与入库\\n */\\nfunction decodeStr(message, device_param) {\\n    // 检查：是否解码器成功\\n    var obj = decodeObj(message);\\n    if (!obj.success) {\\n        return \\"解码失败:\\" + obj.message;\\n    }\\n\\n    var head = obj.head;\\n    var data = obj.data;\\n\\n    if (head.substring(0, 2) === \'0C\' && data.substring(0, 2) === \'90\') {\\n        var loop_addr = parseInt(data.substring(4, 6), 16);\\n        var node_addr = parseInt(data.substring(6, 8), 16);\\n\\n        var devAddr = loop_addr + \\"-\\" + node_addr;\\n\\n        var result = [];\\n\\n        var record = {\\n            \\"recordType\\": \\"动作\\", \\"devAddr\\": devAddr\\n        };\\n\\n        result.push(record);\\n\\n\\n        return result;\\n    }\\n\\n    return \\"\\";\\n}"}}', '{"description":"报文格式：\\n【报头】【未知】【长度】【数据】【未知】【校验】\\n\\n范例1：\\nFF FF FF 0B 01 01 6E 00 0B 00 00 07 4C 14 13 03 1E 0F 36 00 01 66\\n\\n解读：\\nFF FF FF \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t 报头    3字节\\n0B 01 01 6E 00 \\t\\t\\t\\t\\t\\t\\t\\t 未知    5字节\\n0B \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t 长度   1字节\\n00 00 07 4C 14 13 03 1E 0F 36 00    数据   N字节\\n01 \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t 未知   1字节\\n66\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t 校验   1字节\\n\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n08- 38 消火栓启动\\nFF FF FF 0C 01 01 6E 00 0B 90 00 08 26 14 13 03 1E 10 0B 00 01 A8"}', 'report', 'record', 1, 2000, 1712829661152, 1713172942098),
	(1278, '调节主叫发送频率', 'JB-QB-JBF-5010', '青鸟消防股份有限公司', 'JavaScript', 'device', '{"encode":{"main":"encode","code":"/**\\n * 编码器的入口函数\\n * 全局参数：\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   提供给通道的发送数据。根据不同的通道服务，它可能是HEX结构的文本，也可能是JSON结构的对象，请自行根据选定的通道服务进行确认\\n */\\nfunction encode() {\\n    return encodeHex(fox_edge_param);\\n}\\n\\n/**\\n * 开发者自己写的编码函数1\\n * 返回格式1：HEX格式的字符串\\n *     比如串口通道，TCP通道、模拟通道，它们的输入/输出格式，就是HEX格式的文本\\n */\\nfunction encodeHex(param) {\\n    return \\"FF FF FF 09 00 00 01 6E 01 0A 00 03\\";\\n}\\n"}}', '{"description":"设备信息的上报，先要定期发出主叫操作，周期性的激活与设备的连接\\n\\n发出报文：FF FF FF 09 00 00 01 6E 01 0A 00 03"}', 'publish', 'status', 1, 2000, 1713102613031, 1713173247329),
	(1279, 'splitHandler', 'JB-QB-JBF-5009', '青鸟消防股份有限公司', 'JavaScript', 'channel', '{"decode":{"main":"decode","code":"/**\\n * 编码器的入口函数\\n * 全局参数：\\n *     message：hex string格式的接收数据\\n *              XX+[合法报文]+XXX，合法报文可能混杂在一堆其他数据之中\\n * 返回值：\\n *   从XXX+[合法报文]+XXX中，截取到的[合法报文]\\n */\\nfunction decode(message) {\\n    var endTag = \\"0A\\" + \\"0A 0A 0A 0A\\";\\n\\n    message = message.replace(/\\\\s+/g, \\"\\");\\n    endTag = endTag.replace(/\\\\s+/g, \\"\\");\\n\\n    // 转换成大写\\n    message = message.toUpperCase();\\n    endTag = endTag.toUpperCase();\\n\\n    // 找到起始符\\n    var end = message.indexOf(endTag);\\n    if (end < 0) {\\n        return \\"\\";\\n    }\\n\\n    // 切掉后面的数据\\n    message = message.substring(0, end + endTag.length);\\n\\n    return message;\\n}"}}', '{"description":"报文格式：\\n【文本行1】【0A】\\n【文本行2】【0A】\\n【文本行3】【0A】\\n【文本行N】【0A】\\n\\n【0A 0A 0A 0A】\\n\\n范例1：\\nB8 D0 D1 CC 20 B9 CA D5 CF 0A \\n34 30 2F 30 36 2F 32 30 20 31 35 3A 32 38 3A 33 39 20 31 30 30 37 0A \\nB8 D0 D1 CC 20 B9 CA D5 CF 0A \\n34 30 2F 30 36 2F 32 30 20 31 35 3A 32 38 3A 33 39 20 31 30 30 38 0A\\n\\n3秒后，会发送0A 0A 0A 0A的结束报文\\n\\n解读：\\n感烟 故障\\n40/06/20 15:28:39 1007\\n感烟 故障\\n40/06/20 15:28:39 1008\\n\\n这是4行记录，2条告警。\\n注意：告警可能是1行，也可能是2行，有一定的格式\\n\\n注意：它的协议识别能力太弱，一台消防主机，必须独立占用一个串口。\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n测试报文1：\\nB8 D0 D1 CC 20 B9 CA D5 CF 0A 34 30 2F 30 36 2F 32 30 20 31 35 3A 32 38 3A 33 39 20 31 30 30 37 0A B8 D0 D1 CC 20 B9 CA D5 CF 0A 34 30 2F 30 36 2F 32 30 20 31 35 3A 32 38 3A 33 39 20 31 30 30 38 0A 0A 0A 0A 0A \\n\\n"}', 'splitHandler', 'status', 1, 2000, 1712828091343, 1713176480580),
	(1280, 'libs', 'JB-QB-JBF-5009', '青鸟消防股份有限公司', 'JavaScript', 'device', '{"include":{"main":"include","code":"/**\\n * 按类型解码数据\\n *\\n * @param message 消息内容\\n * @param typeHeadTag 类型\\n * @returns {string|*[]} 数据\\n */\\nfunction decodeObj(message, lineCount) {\\n    var lines = message.split(\'\\\\n\');\\n\\n    var obj = {\\n        \\"data\\": [], \\"success\\": false, \\"message\\": \\"\\"\\n    }\\n\\n    // 剔除空行\\n    lines = removeEmpty(lines);\\n    if (lines.length < 1) {\\n        obj.message = \\"行数小于1\\";\\n        return obj;\\n    }\\n\\n    var dict = getDict();\\n\\n    var result = []\\n    while (lines.length > 0) {\\n        var record = {\\n            \\"device\\": \\"\\", \\"type\\": \\"\\", \\"date\\": \\"\\", \\"time\\": \\"\\", \\"oid\\": \\"\\", \\"success\\": false, \\"message\\": \\"\\"\\n        }\\n\\n        for (var i = 0; i < dict.length; i++) {\\n            var format = dict[i];\\n            record = getRecord(lines, format);\\n\\n            // 如果识别成功，剔除对应数量的尾行\\n            if (record.success) {\\n                for (var j = 0; j < format.length; j++) {\\n                    lines.pop();\\n                }\\n                break;\\n            }\\n        }\\n\\n        // 如果不成功：剔除这个无法识别的尾行\\n        if (!record.success) {\\n            lines.pop();\\n        } else {\\n            // 构造符合保持要求的格式：至少包含recordType\\n            var obj = {\\n                \\"recordType\\": record.type,\\n                \\"device\\": record.device,\\n                \\"date\\": record.date,\\n                \\"time\\": record.time,\\n                \\"oid\\": record.oid\\n            }\\n            result.push(obj);\\n        }\\n    }\\n\\n\\n    return result;\\n}\\n\\nfunction removeEmpty(lines) {\\n    var dats = [];\\n    for (var i = 0; i < lines.length; i++) {\\n        var line = lines[i].replace(/\\\\u0000/g, \'\');\\n        if (line.length == 0) {\\n            continue;\\n        }\\n\\n        dats.push(line);\\n    }\\n\\n    return dats;\\n}\\n\\nfunction getRecord(lines, format) {\\n    var record = {\\n        \\"device\\": \\"\\", \\"type\\": \\"\\", \\"date\\": \\"\\", \\"time\\": \\"\\", \\"oid\\": \\"\\", \\"success\\": false, \\"message\\": \\"\\"\\n    }\\n\\n    // 检查：长度是否足够\\n    if (lines.length < format.length) {\\n        record.message = \\"长度不足\\";\\n        return record;\\n    }\\n\\n    // 从尾部取出数据行\\n    var ls = [];\\n    for (var i = 0; i < lines.length; i++) {\\n        if (i < lines.length - format.length) {\\n            continue;\\n        }\\n\\n        ls.push(lines[i]);\\n    }\\n\\n    // 检查：格式是否匹配\\n    for (var i = 0; i < ls.length; i++) {\\n        var line = lines[i];\\n        var fmt = format[i];\\n\\n        // 检查：格式是否匹配\\n        if (!isFmt(line, fmt, record)) {\\n            record.message = \\"格式不匹配\\";\\n            return record;\\n        }\\n    }\\n\\n    record.success = true;\\n    return record;\\n}\\n\\nfunction isFmt(line, format, record) {\\n    var items = line.split(\\" \\");\\n\\n    if (items.length != format.length) {\\n        return false;\\n    }\\n\\n    for (var i = 0; i < format.length; i++) {\\n        var fmt = format[i];\\n        if (fmt === \\"device\\") {\\n            record.device = items[i];\\n            continue;\\n        }\\n        if (fmt === \\"type\\") {\\n            record.type = items[i];\\n            continue;\\n        }\\n        if (fmt === \\"type:date\\") {\\n            var its = items[i].split(\\":\\");\\n            if (its.length !== 2) {\\n                return false;\\n            }\\n\\n            record.type = its[0];\\n\\n            record.date = its[1];\\n\\n            var pattern = /^\\\\d{2}\\\\/\\\\d{2}\\\\/\\\\d{2}$/;\\n            if (!pattern.test(record.date)) {\\n                return false;\\n            }\\n            continue;\\n        }\\n        if (fmt === \\"date\\") {\\n            record.date = items[i];\\n\\n            var pattern = /^\\\\d{2}\\\\/\\\\d{2}\\\\/\\\\d{2}$/;\\n            if (!pattern.test(record.date)) {\\n                return false;\\n            }\\n            continue;\\n        }\\n        if (fmt === \\"time\\") {\\n            record.time = items[i];\\n\\n            var pattern = /^(\\\\d{2}):(\\\\d{2}):(\\\\d{2})$/;\\n            if (!pattern.test(record.time)) {\\n                return false;\\n            }\\n            continue;\\n        }\\n        if (fmt === \\"oid\\") {\\n            record.oid = items[i];\\n\\n            var pattern = /^-?\\\\d+(\\\\.\\\\d+)?$/;\\n            if (!pattern.test(record.oid)) {\\n                return false;\\n            }\\n\\n        }\\n    }\\n\\n    return true;\\n\\n}\\n\\nfunction getDict() {\\n    var dict = [];\\n\\n    // 感烟 故障\\n    // 40/06/20 15:28:39 1007\\n    dict.push([[\\"device\\", \\"type\\"], [\\"date\\", \\"time\\", \\"oid\\"]]);\\n\\n    // 40/06/20 15:00:22 手动复位\\n    dict.push([[\\"date\\", \\"time\\", \\"type\\"]]);\\n\\n    // 手报\\n    // 首警:40/06/20 15:12:44 1021\\n    dict.push([[\\"device\\"], [\\"type:date\\", \\"time\\", \\"oid\\"]]);\\n\\n    // 主电 故障\\n    // 40/06/20 15:06:17\\n    dict.push([[\\"device\\", \\"type\\"], [\\"date\\", \\"time\\"]]);\\n\\n\\n    return dict;\\n}"}}', '{"description":"报文格式：\\n【文本行1】【0A】\\n【文本行2】【0A】\\n【文本行3】【0A】\\n【文本行N】【0A】\\n\\n【0A 0A 0A 0A】\\n\\n范例1：\\nB8 D0 D1 CC 20 B9 CA D5 CF 0A \\n34 30 2F 30 36 2F 32 30 20 31 35 3A 32 38 3A 33 39 20 31 30 30 37 0A \\nB8 D0 D1 CC 20 B9 CA D5 CF 0A \\n34 30 2F 30 36 2F 32 30 20 31 35 3A 32 38 3A 33 39 20 31 30 30 38 0A\\n\\n3秒后，会发送0A 0A 0A 0A的结束报文\\n\\n解读：\\n感烟 故障\\n40/06/20 15:28:39 1007\\n感烟 故障\\n40/06/20 15:28:39 1008\\n\\n这是4行记录，2条告警。\\n注意：告警可能是1行，也可能是2行，有一定的格式\\n\\n注意：它的协议识别能力太弱，一台消防主机，必须独立占用一个串口。\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n测试报文1：\\nB8 D0 D1 CC 20 B9 CA D5 CF 0A 34 30 2F 30 36 2F 32 30 20 31 35 3A 32 38 3A 33 39 20 31 30 30 37 0A B8 D0 D1 CC 20 B9 CA D5 CF 0A 34 30 2F 30 36 2F 32 30 20 31 35 3A 32 38 3A 33 39 20 31 30 30 38 0A 0A 0A 0A 0A \\n\\n"}', 'include', 'record', 1, 2000, 1712903951637, 1713194235574),
	(1281, '上报事件', 'JB-QB-JBF-5009', '青鸟消防股份有限公司', 'JavaScript', 'device', '{"decode":{"main":"decode","code":"/**\\n * 解码器的入口函数\\n * 全局参数：\\n *     fox_edge_data：json string格式 或者 hex string格式的接收数据\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   提供给通道的发送数据。根据不同的通道服务，它可能是HEX结构的文本，也可能是JSON结构的对象，请自行根据选定的通道服务进行确认\\n */\\nfunction decode() {\\n\\tvar object = decodeStr(fox_edge_data, fox_edge_param);\\n  return JSON.stringify(object);\\n}\\n\\n/**\\n * 事件解码器函数：消火栓按钮报火警\\n * 全局参数：\\n *     fox_edge_data：hex string格式的接收数据\\n *                    XXX+[合法报文]+XXX，合法报文可能混杂在一堆其他数据之中\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   必须是列表格式的JSON字符串，并且JSON对象必须包含关键字【recordType】，否则不给与入库\\n */\\nfunction decodeStr(message, device_param) {\\n    var result = decodeObj(message);\\n    return result;\\n}"}}', '{"description":"报文格式：\\n【文本行1】【0A】\\n【文本行2】【0A】\\n【文本行3】【0A】\\n【文本行N】【0A】\\n\\n【0A 0A 0A 0A】\\n\\n范例1：\\nB8 D0 D1 CC 20 B9 CA D5 CF 0A \\n34 30 2F 30 36 2F 32 30 20 31 35 3A 32 38 3A 33 39 20 31 30 30 37 0A \\nB8 D0 D1 CC 20 B9 CA D5 CF 0A \\n34 30 2F 30 36 2F 32 30 20 31 35 3A 32 38 3A 33 39 20 31 30 30 38 0A\\n\\n3秒后，会发送0A 0A 0A 0A的结束报文\\n\\n解读：\\n感烟 故障\\n40/06/20 15:28:39 1007\\n感烟 故障\\n40/06/20 15:28:39 1008\\n\\n这是4行记录，2条告警。\\n注意：告警可能是1行，也可能是2行，有一定的格式\\n\\n注意：它的协议识别能力太弱，一台消防主机，必须独立占用一个串口。\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n测试报文1：\\n34 30 2F 30 36 2F 32 30 20 31 35 3A 30 30 3A 32 32 20 CA D6 B6 AF B8 B4 CE BB 0A 0A 0A 0A 0A D6 F7 B5 E7 20 B9 CA D5 CF 0A 34 30 2F 30 36 2F 32 30 20 31 35 3A 30 36 3A 31 37 0A 0A 0A 0A 0A B1 B8 B5 E7 20 B9 CA D5 CF 0A 34 30 2F 30 36 2F 32 30 20 31 35 3A 30 38 3A 31 31 0A 0A 0A 0A 0A 34 30 2F 30 36 2F 32 30 20 31 35 3A 31 30 3A 32 35 20 CF FB D2 F4 0A 0A 0A 0A 0A CA D6 B1 A8 0A CA D7 BE AF 3A 34 30 2F 30 36 2F 32 30 20 31 35 3A 31 32 3A 34 34 20 31 30 32 31 0A 0A 0A 0A 0A CA D6 B1 A8 0A BB F0 BE AF 3A 34 30 2F 30 36 2F 32 30 20 31 35 3A 31 33 3A 33 34 20 31 30 32 33 0A 0A 0A 0A 0A \\n\\n测试报文2：\\nCA D6 B1 A8 0A CA D7 BE AF 3A 34 30 2F 30 36 2F 32 30 20 31 35 3A 31 37 3A 32 38 20 31 30 32 31 0A CA D6 B1 A8 0A BB F0 BE AF 3A 34 30 2F 30 36 2F 32 30 20 31 35 3A 31 37 3A 32 38 20 31 30 32 33 0A 0A 0A 0A 0A B8 D0 D1 CC 20 B9 CA D5 CF 0A 34 30 2F 30 36 2F 32 30 20 31 35 3A 32 34 3A 34 39 20 31 30 30 31 0A 0A 0A 0A 0A CA E4 C8 EB CA E4 B3 F6 20 CA D6 B6 AF C6 F4 B6 AF 0A 34 30 2F 30 36 2F 32 30 20 31 35 3A 33 34 3A 31 31 20 31 30 32 38 0A 0A 0A 0A 0A \\n\\n测试报文3：\\nB8 D0 D1 CC 20 B9 CA D5 CF 0A 34 30 2F 30 36 2F 32 30 20 31 35 3A 32 38 3A 33 38 20 31 30 30 31 0A B8 D0 D1 CC 20 B9 CA D5 CF 0A 34 30 2F 30 36 2F 32 30 20 31 35 3A 32 38 3A 33 38 20 31 30 30 32 0A B8 D0 D1 CC 20 B9 CA D5 CF 0A 34 30 2F 30 36 2F 32 30 20 31 35 3A 32 38 3A 33 39 20 31 30 30 33 0A B8 D0 D1 CC 20 B9 CA D5 CF 0A 34 30 2F 30 36 2F 32 30 20 31 35 3A 32 38 3A 33 39 20 31 30 30 34 0A B8 D0 D1 CC 20 B9 CA D5 CF 0A 34 30 2F 30 36 2F 32 30 20 31 35 3A 32 38 3A 33 39 20 31 30 30 36 0A B8 D0 D1 CC 20 B9 CA D5 CF 0A 34 30 2F 30 36 2F 32 30 20 31 35 3A 32 38 3A 33 39 20 31 30 30 37 0A B8 D0 D1 CC 20 B9 CA D5 CF 0A 34 30 2F 30 36 2F 32 30 20 31 35 3A 32 38 3A 33 39 20 31 30 30 38 0A B8 D0 D1 CC 20 B9 CA D5 CF 0A 34 30 2F 30 36 2F 32 30 20 31 35 3A 32 38 3A 34 30 20 31 30 30 39 0A B8 D0 D1 CC 20 B9 CA D5 CF 0A 34 30 2F 30 36 2F 32 30 20 31 35 3A 32 38 3A 34 30 20 31 30 31 30 0A B8 D0 D1 CC 20 B9 CA D5 CF 0A 34 30 2F 30 36 2F 32 30 20 31 35 3A 32 38 3A 34 30 20 31 30 31 31 0A B8 D0 D1 CC 20 B9 CA D5 CF 0A 34 30 2F 30 36 2F 32 30 20 31 35 3A 32 38 3A 34 30 20 31 30 31 32 0A B8 D0 D1 CC 20 B9 CA D5 CF 0A 34 30 2F 30 36 2F 32 30 20 31 35 3A 32 38 3A 34 31 20 31 30 31 33 0A B8 D0 D1 CC 20 B9 CA D5 CF 0A 34 30 2F 30 36 2F 32 30 20 31 35 3A 32 38 3A 34 31 20 31 30 31 34 0A CA D6 B1 A8 20 B9 CA D5 CF 0A 34 30 2F 30 36 2F 32 30 20 31 35 3A 32 38 3A 34 31 20 31 30 32 31 0A CA D6 B1 A8 20 B9 CA D5 CF 0A 34 30 2F 30 36 2F 32 30 20 31 35 3A 32 38 3A 34 31 20 31 30 32 32 0A CA D6 B1 A8 20 B9 CA D5 CF 0A 34 30 2F 30 36 2F 32 30 20 31 35 3A 32 38 3A 34 31 20 31 30 32 33 0A CA E4 C8 EB CA E4 B3 F6 20 B9 CA D5 CF 0A 34 30 2F 30 36 2F 32 30 20 31 35 3A 32 38 3A 34 31 20 31 30 32 36 0A CA E4 C8 EB CA E4 B3 F6 20 B9 CA D5 CF 0A 34 30 2F 30 36 2F 32 30 20 31 35 3A 32 38 3A 34 32 20 31 30 32 38 0A 0A 0A 0A 0A \\n\\n\\n"}', 'report', 'record', 1, 2000, 1712829661152, 1713193876307),
	(1282, 'splitHandler', 'JB-TBZL-FC720W', '德国西门子股份有限公司', 'JavaScript', 'channel', '{"decode":{"main":"decode","code":"/**\\n * 编码器的入口函数\\n * 全局参数：\\n *     message：hex string格式的接收数据\\n *              XX+[合法报文]+XXX，合法报文可能混杂在一堆其他数据之中\\n * 返回值：\\n *   从XXX+[合法报文]+XXX中，截取到的[合法报文]\\n */\\nfunction decode(message) {\\n    var starTag = \\"0A\\";\\n    var endTag = \\"0A\\";\\n\\n    message = message.replace(/\\\\s+/g, \\"\\");\\n    starTag = starTag.replace(/\\\\s+/g, \\"\\");\\n    endTag = endTag.replace(/\\\\s+/g, \\"\\");\\n\\n\\n    // 转换成大写\\n    message = message.toUpperCase();\\n    starTag = starTag.toUpperCase();\\n    endTag = endTag.toUpperCase();\\n\\n\\n    while (message.length > 0) {\\n        // 尝试：查找下一行\\n        var next = getNext(message, starTag, endTag);\\n        if (next.start === -1 || next.end === -1) {\\n            return \\"\\";\\n        }\\n\\n        // 验证：该行是否合法\\n        var section = message.substring(next.start, next.end);\\n        if (verifyNext(section)) {\\n            // 合法，说明是夹在中间的有效数据\\n            return section;\\n        } else {\\n            // 非法：说明是脏数据，切断前面的脏数据\\n            message = message.substring(next.end, message.length);\\n\\n        }\\n    }\\n\\n    return \\"\\";\\n}\\n\\nfunction verifyNext(section) {\\n    // 切行：4行\\n    var lines = getLines(section);\\n    if (lines.length !== 4) {\\n        return false;\\n    }\\n\\n    if (lines[lines.length - 1].substring(0, 2) !== \\"2B\\") {\\n        return false;\\n    }\\n    if (lines[lines.length - 2].substring(0, 2) !== \\"20\\") {\\n        return false;\\n    }\\n    if (lines[lines.length - 3].substring(0, 2) !== \\"20\\") {\\n        return false;\\n    }\\n    if (lines[lines.length - 4].substring(0, 2) !== \\"20\\") {\\n        return false;\\n    }\\n\\n    return true;\\n}\\n\\nfunction getNext(message, starTag, endTag) {\\n    var data = {\\n        \\"start\\": -1, \\"end\\": -1,\\n    }\\n\\n    // 找到起始符\\n    var start = message.indexOf(starTag);\\n    if (start < 0) {\\n        return data;\\n    }\\n\\n    // 切掉前面的数据\\n    var hexs = message.substring(start);\\n\\n    // 场景1：找多行粘连时的结束符，此时可能存在，也可能不存在0A0A\\n    var endStart = hexs.indexOf(endTag + starTag, start + starTag.length);\\n    if (endStart >= 0) {\\n        data.start = start;\\n        data.end = start + endStart + endTag.length;\\n        return data;\\n    }\\n\\n    // 场景2：单行场景\\n    var end = hexs.indexOf(endTag, start + starTag.length);\\n    if (end < 0) {\\n        return data;\\n    }\\n\\n    data.start = start;\\n    data.end = start + end;\\n    return data;\\n}\\n\\n\\nfunction getLines(message) {\\n    var lines = [];\\n\\n    var line = \\"\\";\\n    for (var i = 0; i < message.length; i += 2) {\\n        var hex = message[i] + message[i + 1];\\n\\n        if (hex === \'0A\') {\\n            if (line.length > 0) {\\n                lines.push(line);\\n                line = \\"\\";\\n            }\\n\\n            continue;\\n        }\\n        line += hex;\\n    }\\n\\n    return lines;\\n}"}}', '{"description":"报文格式：\\n【0A】【文本行1】【0A】【文本行2】【0A】【文本行3】【0A】【文本行4】【0A】\\n\\n范例1：\\n 2022-06-21 14:48:37\\n 三楼南楼梯口消报\\n 01.004.003002da\\n+071 通讯故障\\n\\n解读：\\nHEX报文，每一行都是0A分隔，总共5个0A\\n第1行格式：+字符 故障类型\\n第2行格式：xxx.xxx.xxxxx的十六进制代码\\n第4行格式：日期时间\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n测试报文1：\\n0A 20 32 30 32 32 2D 30 36 2D 32 31 20 31 34 3A 34 38 3A 33 37 0A 20 C8 FD C2 A5 C4 CF C2 A5 CC DD BF DA CF FB B1 A8 0A 20 30 31 2E 30 30 34 2E 30 30 33 30 30 32 64 61 0A 2B 30 37 31 20 CD A8 D1 B6 B9 CA D5 CF 0A\\n\\n\\n中文：\\n 2022-06-21 14:48:37\\n 三楼南楼梯口消报\\n 01.004.003002da\\n+071 通讯故障\\n"}', 'splitHandler', 'status', 1, 2000, 1712828091343, 1713252634367),
	(1284, 'libs', 'JB-TBZL-FC720W', '德国西门子股份有限公司', 'JavaScript', 'device', '{"include":{"main":"include","code":"/**\\n * 按类型解码数据\\n *\\n * @param message 消息内容\\n * @param typeHeadTag 类型\\n * @returns {string|*[]} 数据\\n */\\nfunction decodeObj(message, lineCount) {\\n    var lines = message.split(\'\\\\n\');\\n\\n    var obj = {\\n        \\"type\\": \\"\\", \\"oid\\": \\"\\", \\"text\\": \\"\\", \\"time\\": \\"\\", \\"success\\": false, \\"message\\": \\"\\"\\n    }\\n\\n    // 剔除空行\\n    lines = removeEmpty(lines);\\n    if (lines.length !== 4) {\\n        return \\"行数不等于4\\";\\n    }\\n\\n    var timeLine = lines[0].substring(1, lines[0].length);\\n    var textLine = lines[1].substring(1, lines[1].length);\\n    var oidLine = lines[2].substring(1, lines[2].length);\\n    var typeLine = lines[3].substring(1, lines[3].length);\\n\\n    // 校验：时间\\n    var regex = /^\\\\d{4}-\\\\d{2}-\\\\d{2} \\\\d{2}:\\\\d{2}:\\\\d{2}$/;\\n    if (!regex.test(timeLine)) {\\n        return \\"时间格式不正确\\";\\n    }\\n\\n    // 校验：OID\\n    var items = oidLine.split(\\".\\");\\n    if (items.length < 3) {\\n        return \\"OID格式不正确\\";\\n    }\\n    regex = /^[a-zA-Z0-9]+$/;\\n    for (var i = 0; i < items.length; i++) {\\n        var str = items[i].replace(\\" \\", \\"\\");\\n        if (!regex.test(str)) {\\n            return \\"OID格式不正确\\";\\n        }\\n    }\\n\\n    // 地址部分\\n    var devAddr = items[0] + \\"-\\" + items[1];\\n\\n    // 校验：类型\\n    items = typeLine.split(\\" \\");\\n    if (items.length !== 2) {\\n        return \\"类型格式不正确\\";\\n    }\\n    regex = /^[0-9]+$/;\\n    if (!regex.test(items[0].substring(1, items[0].length))) {\\n        obj.message = \\"类型格式不正确\\";\\n    }\\n    var type = items[1];\\n\\n\\n    var result = [];\\n    obj = {\\n        \\"recordType\\": type, \\"device\\": devAddr, \\"time\\": timeLine, \\"oid\\": oidLine, \\"text\\": textLine\\n    }\\n    result.push(obj);\\n\\n    return result;\\n}\\n\\nfunction removeEmpty(lines) {\\n    var dats = [];\\n    for (var i = 0; i < lines.length; i++) {\\n        var line = lines[i].replace(/\\\\u0000/g, \'\');\\n        if (line.length == 0) {\\n            continue;\\n        }\\n\\n        dats.push(line);\\n    }\\n\\n    return dats;\\n}\\n"}}', '{"description":"报文格式：\\n【0A】【文本行1】【0A】【文本行2】【0A】【文本行3】【0A】【文本行4】【0A】\\n\\n范例1：\\n 2022-06-21 14:48:37\\n 三楼南楼梯口消报\\n 01.004.003002da\\n+071 通讯故障\\n\\n解读：\\nHEX报文，每一行都是0A分隔，总共5个0A\\n第1行格式：+字符 故障类型\\n第2行格式：xxx.xxx.xxxxx的十六进制代码\\n第4行格式：日期时间\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n测试报文1：\\n0A 20 32 30 32 32 2D 30 36 2D 32 31 20 31 34 3A 34 38 3A 33 37 0A 20 C8 FD C2 A5 C4 CF C2 A5 CC DD BF DA CF FB B1 A8 0A 20 30 31 2E 30 30 34 2E 30 30 33 30 30 32 64 61 0A 2B 30 37 31 20 CD A8 D1 B6 B9 CA D5 CF 0A\\n\\n\\n中文：\\n 2022-06-21 14:48:37\\n 三楼南楼梯口消报\\n 01.004.003002da\\n+071 通讯故障\\n"}', 'include', 'record', 1, 2000, 1712903951637, 1713240448223),
	(1285, '上报事件', 'JB-TBZL-FC720W', '德国西门子股份有限公司', 'JavaScript', 'device', '{"decode":{"main":"decode","code":"/**\\n * 解码器的入口函数\\n * 全局参数：\\n *     fox_edge_data：json string格式 或者 hex string格式的接收数据\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   提供给通道的发送数据。根据不同的通道服务，它可能是HEX结构的文本，也可能是JSON结构的对象，请自行根据选定的通道服务进行确认\\n */\\nfunction decode() {\\n\\tvar object = decodeStr(fox_edge_data, fox_edge_param);\\n  return JSON.stringify(object);\\n}\\n\\n/**\\n * 事件解码器函数：消火栓按钮报火警\\n * 全局参数：\\n *     fox_edge_data：hex string格式的接收数据\\n *                    XXX+[合法报文]+XXX，合法报文可能混杂在一堆其他数据之中\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   必须是列表格式的JSON字符串，并且JSON对象必须包含关键字【recordType】，否则不给与入库\\n */\\nfunction decodeStr(message, device_param) {\\n    var result = decodeObj(message);\\n    return result;\\n}"}}', '{"description":"报文格式：\\n【0A】【文本行1】【0A】【文本行2】【0A】【文本行3】【0A】【文本行4】【0A】\\n\\n范例1：\\n 2022-06-21 14:48:37\\n 三楼南楼梯口消报\\n 01.004.003002da\\n+071 通讯故障\\n\\n解读：\\nHEX报文，每一行都是0A分隔，总共5个0A\\n第1行格式：+字符 故障类型\\n第2行格式：xxx.xxx.xxxxx的十六进制代码\\n第4行格式：日期时间\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n测试报文1：\\n0A 20 32 30 32 32 2D 30 36 2D 32 31 20 31 34 3A 34 38 3A 33 37 0A 20 C8 FD C2 A5 C4 CF C2 A5 CC DD BF DA CF FB B1 A8 0A 20 30 31 2E 30 30 34 2E 30 30 33 30 30 32 64 61 0A 2B 30 37 31 20 CD A8 D1 B6 B9 CA D5 CF 0A\\n\\n测试报文2：\\n0A 20 32 30 32 32 2D 30 36 2D 32 31 20 31 34 3A 30 31 3A 34 31 0A 20 D2 BB C2 A5 B1 B1 B1 DF D7 DF B5 BD CA D6 B1 A8 0A 20 30 31 2E 30 30 34 2E 30 30 33 30 30 35 37 66 0A 2B 30 35 30 20 CA D6 B6 AF BB F0 BE AF 0A \\n\\n测试报文3：\\n0A 20 32 30 32 32 2D 30 36 2D 32 31 20 31 34 3A 30 31 3A 34 31 0A 20 C9 F9 B9 E2 B1 A8 BE AF B5 E7 C2 B7 0A 20 30 31 2E 30 30 32 2E 30 30 30 30 30 30 30 31 0A 2B 30 35 31 20 C6 F4 B6 AF 0A\\n\\n测试报文4：\\n0A 20 32 30 32 32 2D 30 36 2D 32 31 20 31 34 3A 34 30 3A 33 36 0A 20 C8 FD C2 A5 D7 DF B5 C0 D6 D0 D1 CC B8 D0 32 0A 20 30 31 2E 30 30 34 2E 30 30 33 32 63 65 38 33 2E 30 31 0A 2B 30 36 36 20 D7 D4 B6 AF BB F0 BE AF 0A"}', 'report', 'record', 1, 2000, 1712829661152, 1713240474582),
	(1286, 'splitHandler', 'JB-LTZ2-FS5116', '深圳市赋安安全系统有限公司', 'JavaScript', 'channel', '{"decode":{"main":"decode","code":"/**\\n * 编码器的入口函数\\n * 全局参数：\\n *     message：hex string格式的接收数据\\n *              XX+[合法报文]+XXX，合法报文可能混杂在一堆其他数据之中\\n * 返回值：\\n *   从XXX+[合法报文]+XXX中，截取到的[合法报文]\\n */\\nfunction decode(message) {\\n    var starTag = \\"20 20\\";\\n    var endTag = \\"0D 0A\\";\\n\\n    message = message.replace(/\\\\s+/g, \\"\\");\\n    starTag = starTag.replace(/\\\\s+/g, \\"\\");\\n    endTag = endTag.replace(/\\\\s+/g, \\"\\");\\n\\n\\n    // 转换成大写\\n    message = message.toUpperCase();\\n    starTag = starTag.toUpperCase();\\n    endTag = endTag.toUpperCase();\\n\\n    // 查找起始标记\\n    var start = message.indexOf(starTag);\\n    if (start < 0) {\\n        return \\"\\";\\n    }\\n\\n    // 查找起始标记\\n    var end = message.indexOf(endTag, start);\\n    if (end < 0) {\\n        return \\"\\";\\n    }\\n\\n    var line = message.substring(start, end + endTag.length);\\n\\n    // 检查：第一行是否符合时间格式，例如：2022/07/26 17:18:43  01主机\\n    if (line.substring(12, 14) !== \'2F\') {\\n        return \\"\\";\\n    }\\n    if (line.substring(18, 20) !== \'2F\') {\\n        return \\"\\";\\n    }\\n    if (line.substring(24, 26) !== \'20\') {\\n        return \\"\\";\\n    }\\n    if (line.substring(30, 32) !== \'3A\') {\\n        return \\"\\";\\n    }\\n    if (line.substring(36, 38) !== \'3A\') {\\n        return \\"\\";\\n    }\\n\\n    // 检测：最后一行是否包括包括\\"21 20 20\\"\\n    if (!hasX212020(line)) {\\n        return \\"\\";\\n    }\\n\\n    return line;\\n}\\n\\nfunction hasX212020(line) {\\n    var start = 0;\\n    var ends = [];\\n    for (var i = 0; i < line.length; i += 2) {\\n        var hex = line[i] + line[i + 1];\\n        if (hex == \\"0D\\") {\\n            ends.push(i);\\n        }\\n    }\\n\\n    if (ends.length < 2) {\\n        return false;\\n    }\\n\\n    var txt = line.substring(ends[ends.length - 2], ends[ends.length - 1]);\\n    if (txt.indexOf(\\"212020\\") < 0) {\\n        return \\"\\";\\n    }\\n\\n    return true;\\n\\n}\\n"}}', '{"description":"报文格式：以20 20开始，以0D 0A结束，中间是多行GB2312编码的文本\\n其中，第一行文本是时间格式开始的\\n\\n可以通过，以20 20开始，以0D 0A结束，再加上第一行的日期格式，进行报文格式的识别\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n测试报文1：\\n20 20 32 30 32 32 2F 30 37 2F 32 36 20 31 37 3A 32 30 3A 30 31 20 20 30 31 D6 F7 BB FA 0D 20 20 D7 A1 D4 BA B2 BF D2 BB C2 A5 0D 20 20 28 30 30 31 2D 30 31 36 29 30 30 31 B6 B0 30 31 C7 F8 20 31 B2 E3 30 31 36 BA C5 0D 20 20 B5 D8 D6 B7 B6 AA CA A7 21 20 20 B9 E2 B5 E7 CC BD CD B7 0D 0A  \\n\\n\\n报文内容：\\n  2022/07/26 17:20:01  01主机\\n  住院部一楼\\n  (001-016)001栋01区 1层016号\\n  地址丢失!  光电探头\\n\\n测试报文2：\\n20 20 32 30 32 32 2F 30 37 2F 32 36 20 31 37 3A 31 38 3A 34 33 20 20 30 31 D6 F7 BB FA 0D 20 20 B8 B4 CE BB 21 20 20 BF D8 D6 C6 C6 F7 0D 0A \\n\\n 测试报文3：\\n20 20 32 30 30 30 2F 30 37 2F 32 36 20 31 35 3A 32 36 3A 32 35 20 20 30 31 D6 F7 BB FA 0D 20 20 C3 C5 D5 EF B6 FE C2 A5 0D 20 20 28 30 30 34 2D 30 31 32 29 30 30 32 B6 B0 30 31 C7 F8 20 32 B2 E3 30 31 32 BA C5 0D 20 20 BB F0 BE AF 21 20 20 B9 E2 B5 E7 CC BD CD B7 0D 0A \\n\\n\\n\\n"}', 'splitHandler', 'status', 1, 2000, 1712828091343, 1713276542141),
	(1287, 'libs', 'JB-LTZ2-FS5116', '深圳市赋安安全系统有限公司', 'JavaScript', 'device', '{"include":{"main":"include","code":"/**\\n * 按类型解码数据\\n *\\n * @param message 消息内容\\n * @param typeHeadTag 类型\\n * @returns {string|*[]} 数据\\n */\\nfunction decodeObj(message, lineCount) {\\n    var lines = message.split(\'\\\\r\');\\n\\n    var obj = {\\n        \\"type\\": \\"\\", \\"deviceName\\": \\"\\", \\"host\\": \\"\\", \\"device\\": \\"\\", \\"text\\": \\"\\", \\"time\\": \\"\\"\\n    }\\n\\n    // 剔除空行\\n    lines = removeEmpty(lines);\\n    if (lines.length < 2) {\\n        return \\"行数小于2\\"\\n    }\\n\\n    // 时间行\\n    var timeLine = lines[0].substring(2, lines[0].length);\\n    // 类型行\\n    var typeLine = lines[lines.length - 1].substring(2, lines[0].length);\\n\\n    var items = timeLine.split(\\"  \\");\\n    if (items.length !== 2) {\\n        return \\"时间行格式不正确\\";\\n    }\\n\\n    // 校验：时间\\n    var regex = /^\\\\d{4}\\\\/\\\\d{2}\\\\/\\\\d{2} \\\\d{2}:\\\\d{2}:\\\\d{2}$/;\\n    if (!regex.test(items[0])) {\\n        return \\"时间格式不正确\\";\\n    }\\n    obj.time = items[0];\\n    obj.host = items[1];\\n\\n    // 校验：类型\\n    items = typeLine.split(\\"!  \\");\\n    if (items.length !== 2) {\\n        return \\"类型行格式不正确\\";\\n    }\\n    obj.type = items[0];\\n    obj.deviceName = items[1];\\n\\n    // 寻找设备地址行\\n    for (var i = 1; i < lines.length - 1; i++) {\\n        var line = lines[i];\\n\\n        // 检查：是否为设备行，范例：\\"  (001-045)001栋01区 1层045号\\"\\n        if (line.substring(0, 3) === \\"  (\\" && line.substring(6, 7) === \\"-\\" && line.substring(10, 11) === \\")\\") {\\n            obj.device = line.substring(3, 10);\\n            obj.deviceText = line.substring(11, line.length);\\n\\n            regex = /^\\\\d+-\\\\d+$/;\\n            if (!regex.test(obj.device)) {\\n                return \\"地址格式不正确\\";\\n            }\\n        } else {\\n            obj.text = line;\\n        }\\n    }\\n\\n    var result = [];\\n    var record = {\\n        \\"recordType\\": obj.type,\\n        \\"host\\": obj.host,\\n        \\"device\\": obj.device,\\n        \\"deviceName\\": obj.deviceName,\\n        \\"deviceText\\": obj.deviceText,\\n        \\"time\\": obj.time,\\n        \\"text\\": obj.text\\n    }\\n    result.push(record);\\n\\n    return result;\\n}\\n\\nfunction removeEmpty(lines) {\\n    var dats = [];\\n    for (var i = 0; i < lines.length; i++) {\\n        var line = lines[i].replace(/\\\\u0000/g, \'\');\\n        line = line.replace(\\"\\\\n\\",\'\');\\n        if (line.length == 0) {\\n            continue;\\n        }\\n\\n        dats.push(line);\\n    }\\n\\n    return dats;\\n}"}}', '{"description":"报文格式：以20 20开始，以0D 0A结束，中间是多行GB2312编码的文本\\n其中，第一行文本是时间格式开始的\\n\\n可以通过，以20 20开始，以0D 0A结束，再加上第一行的日期格式，进行报文格式的识别\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n测试报文1：\\n20 20 32 30 32 32 2F 30 37 2F 32 36 20 31 37 3A 31 38 3A 34 33 20 20 30 31 D6 F7 BB FA 0D 20 20 B8 B4 CE BB 21 20 20 BF D8 D6 C6 C6 F7 0D 0A\\n\\n报文内容：\\n  2022/07/26 17:18:43  01主机\\n  复位!  控制器\\n"}', 'include', 'record', 1, 2000, 1712903951637, 1713276252734),
	(1293, '上报事件', 'JB-LTZ2-FS5116', '深圳市赋安安全系统有限公司', 'JavaScript', 'device', '{"decode":{"main":"decode","code":"/**\\n * 解码器的入口函数\\n * 全局参数：\\n *     fox_edge_data：json string格式 或者 hex string格式的接收数据\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   提供给通道的发送数据。根据不同的通道服务，它可能是HEX结构的文本，也可能是JSON结构的对象，请自行根据选定的通道服务进行确认\\n */\\nfunction decode() {\\n\\tvar object = decodeStr(fox_edge_data, fox_edge_param);\\n  return JSON.stringify(object);\\n}\\n\\n/**\\n * 事件解码器函数：消火栓按钮报火警\\n * 全局参数：\\n *     fox_edge_data：hex string格式的接收数据\\n *                    XXX+[合法报文]+XXX，合法报文可能混杂在一堆其他数据之中\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   必须是列表格式的JSON字符串，并且JSON对象必须包含关键字【recordType】，否则不给与入库\\n */\\nfunction decodeStr(message, device_param) {\\n    var result = decodeObj(message);\\n    return result;\\n}"}}', '{"description":"报文格式：以20 20开始，以0D 0A结束，中间是多行GB2312编码的文本\\n其中，第一行文本是时间格式开始的\\n\\n可以通过，以20 20开始，以0D 0A结束，再加上第一行的日期格式，进行报文格式的识别\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n测试报文1：\\n20 20 32 30 32 32 2F 30 37 2F 32 36 20 31 37 3A 31 38 3A 34 33 20 20 30 31 D6 F7 BB FA 0D 20 20 B8 B4 CE BB 21 20 20 BF D8 D6 C6 C6 F7 0D 0A\\n\\n报文内容：\\n  2022/07/26 17:18:43  01主机\\n  复位!  控制器\\n"}', 'report', 'record', 1, 2000, 1712829524043, 1713274757154),
	(1296, 'splitHandler', 'JB-QT-TS3200', '青岛鼎信通讯消防安全有限公司', 'JavaScript', 'channel', '{"decode":{"main":"decode","code":"/**\\n * 编码器的入口函数\\n * 全局参数：\\n *     message：hex string格式的接收数据\\n *              XX+[合法报文]+XXX，合法报文可能混杂在一堆其他数据之中\\n * 返回值：\\n *   从XXX+[合法报文]+XXX中，截取到的[合法报文]\\n */\\nfunction decode(message) {\\n    var starTag = \\"7F\\";\\n\\n    message = message.replace(/\\\\s+/g, \\"\\");\\n    starTag = starTag.replace(/\\\\s+/g, \\"\\");\\n\\n    // 转换成大写\\n    message = message.toUpperCase();\\n    starTag = starTag.toUpperCase();\\n\\n    // 找到起始符\\n    var start = message.indexOf(starTag);\\n    if (start < 0) {\\n        return \\"\\";\\n    }\\n\\n    // 切掉前面的数据\\n    message = message.substring(start);\\n\\n    // 切出第一行\\n    var line = getLine(message, starTag);\\n    if (line.length === 0) {\\n        return \\"\\";\\n    }\\n\\n    return line;\\n}\\n\\n\\n/**\\n * 分拆行\\n * @param message 消息\\n * @param starTag 起始符\\n * @returns {string} 行\\n */\\nfunction getLine(message, starTag) {\\n    // 寻找起始标记\\n    var start = message.indexOf(starTag);\\n    if (start !== 0) {\\n        return \\"\\";\\n    }\\n\\n    // 检测：最小长度\\n    if (message.length < 18) {\\n        return \\"\\";\\n    }\\n\\n    // 数据大小\\n    var size = parseInt(message.substring(2, 4), 16);\\n\\n    // 切第一行\\n    var line = message.substring(start, start + (3 + size) * 2);\\n\\n    // 截取第一行，并进行行验证\\n    if (!verifyLine(line)) {\\n        return \\"\\";\\n    }\\n\\n    return line;\\n}\\n\\n/**\\n * 验证CRC\\n *\\n * @param line 行信息\\n * @returns {boolean} 是否成功\\n */\\nfunction verifyLine(line) {\\n    if (line.length < 18) {\\n        return false;\\n    }\\n\\n    var body = line.substring(0, line.length - 4);\\n\\n    // 校验帧长度\\n    var size = parseInt(line.substring(2, 4), 16);\\n    if (line.length !== (3 + size) * 2) {\\n        return false;\\n    }\\n\\n\\n    var ch = line.substring(line.length - 2, line.length - 0);\\n    var cl = line.substring(line.length - 4, line.length - 2);\\n    var crc = calculateCRC16(body, 0xFFFF, 0xA001);\\n\\n    return crc === ch + cl;\\n}\\n\\n/**\\n * CRC16校验\\n * 范例：calculateCRC16(\\"7E0000000133000100\\", 0x0000, 0xA001);\\n *\\n * @param dataHexString 无空格的HEX格式文本，例如：\\"7E0000000133000100\\";\\n * @param init CRC16的初始值，例如：0x0000\\n * @param poly CRC16的多项式，例如：0xA001\\n * @returns {string}\\n */\\nfunction calculateCRC16(dataHexString, init, poly) {\\n    var dataBytes = [];\\n    for (var i = 0; i < dataHexString.length; i += 2) {\\n        dataBytes.push(parseInt(dataHexString.substring(i, i + 2), 16));\\n    }\\n\\n    var crc = init;\\n    var polynomial = poly;  // This is the polynomial x^16 + x^15 + x^2 + 1\\n\\n    for (var i = 0; i < dataBytes.length; i++) {\\n        crc ^= dataBytes[i];\\n        for (var j = 0; j < 8; j++) {\\n            if (crc & 0x0001) {\\n                crc = ((crc >> 1) ^ polynomial) & 0xFFFF;\\n            } else {\\n                crc >>= 1;\\n            }\\n        }\\n    }\\n\\n    crc = crc & 0xffff\\n\\n    var txt = crc.toString(16).toUpperCase();\\n    txt = padStart(txt, 4, \'0\');\\n    return txt;\\n}\\n\\nfunction padStart(str, length, ch) {\\n    while (str.length < length) {\\n        str = ch + str;\\n    }\\n\\n    return str;\\n}"}}', '{"description":"报文格式：\\n【报头】【长度】【未知】【类型】【数据】【校验】\\n\\n范例1：\\n7F 31 F6 08 9B 38 40 02 2A 49 10 00 01 00 00 00 00 00 00 C0 B5 FD B9 DA BF F6 B3 F9 CB DE B2 46 31 B7 D6 C9 BE E9 D2 E1 BB BD C9 AE C2 07 11 25 10 22 64 A5\\n\\n解读：\\n7F                          报头  1字节\\n31                         长度  1字节\\nF6 08 9B 38           未知，4字节\\n40                         类型  1字节\\n02 2A 49 10 00 01 00 00 00 00 00 00 C0 B5 FD B9 DA BF F6 B3 F9 CB DE B2 46 31 B7 D6 C9 BE E9 D2 E1 BB BD C9 AE C2 07 11 25 10 22  数据 N字节\\n64 A5                    CRC16 2字节  CRC-MODBUS 从7E开始\\n\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n测试报文1：\\n7F 31 F6 08 9B 38 40 02 2A 49 10 00 01 00 00 00 00 00 00 C0 B5 FD B9 DA BF F6 B3 F9 CB DE B2 46 31 B7 D6 C9 BE E9 D2 E1 BB BD C9 AE C2 07 11 25 10 22 64 A5\\n\\n"}', 'splitHandler', 'status', 1, 2000, 1712828091343, 1713324801214),
	(1297, 'libs', 'JB-QT-TS3200', '青岛鼎信通讯消防安全有限公司', 'JavaScript', 'device', '{"include":{"main":"include","code":"/**\\n * 编码器的入口函数\\n * 全局参数：\\n *     message：hex string格式的接收数据\\n *              XX+[合法报文]+XXX，合法报文可能混杂在一堆其他数据之中\\n * 返回值：\\n *   从XXX+[合法报文]+XXX中，截取到的[合法报文]\\n */\\nfunction decodeObj(message, mode) {\\n    var starTag = \\"7F\\";\\n\\n    message = message.replace(/\\\\s+/g, \\"\\");\\n    starTag = starTag.replace(/\\\\s+/g, \\"\\");\\n\\n    // 转换成大写\\n    message = message.toUpperCase();\\n    starTag = starTag.toUpperCase();\\n\\n    // 找到起始符\\n    var start = message.indexOf(starTag);\\n    if (start < 0) {\\n        return \\"\\";\\n    }\\n\\n    // 切掉前面的数据\\n    message = message.substring(start);\\n\\n    // 切出第一行\\n    var line = getLine(message, starTag);\\n    if (line.length === 0) {\\n        return \\"\\";\\n    }\\n\\n    //取出数据信息\\n    var data = getData(line);\\n\\n    // 检查：是否为心跳\\n    if ( mode == \\"status\\" && data.length === 2) {\\n        return {\\"心跳\\": new Date()};\\n    }\\n\\n    // 检查：是否为j记录\\n    if ( mode == \\"record\\" && data.length < 14) {\\n        return \\"长度不足\\";\\n    }\\n\\n    // 上报类型\\n    var type = data.substring(0, 2);\\n\\n    var result = [];\\n    var record = {\\n        \\"recordType\\": \\"\\", \\"device\\": \\"\\", \\"host\\": \\"\\"\\n    };\\n\\n    // 告警类型\\n    record.recordType = getTypeName(type, data);\\n\\n    // 设备地址\\n    var node_addr = data[9] + data[6] + data[7] + \\"/\\" + data[4] + data[5];\\n    var loop_addr = data[10] + data[11] + data[8];\\n    var host_addr = data[12] + data[13];\\n    record.device = loop_addr + \\" \\" + node_addr;\\n    record.host = host_addr;\\n\\n    result.push(record);\\n    return result;\\n}\\n\\nfunction getTypeName(type, data) {\\n    if (type === \\"40\\" || type === \\"01\\") {\\n        return \\"火警\\";\\n    }\\n    if (type === \\"03\\") {\\n        return \\"启动\\";\\n    }\\n    if (type === \\"04\\") {\\n        return \\"反馈\\";\\n    }\\n    if (type === \\"05\\") {\\n        return \\"监管\\";\\n    }\\n    if (type === \\"31\\" || type === \\"21\\") {\\n        return \\"电源故障\\";\\n    }\\n    if (type === \\"60\\") {\\n        return \\"复位\\";\\n    }\\n    if (type === \\"80\\") {\\n        return \\"停止\\";\\n    }\\n    if (type === \\"E0\\") {\\n        return \\"故障\\";\\n    }\\n    if (type === \\"C3\\") {\\n        var ctrl = data.substring(2, 4);\\n        if (ctrl === \\"01\\") {\\n            return \\"主电故障\\";\\n        }\\n        if (ctrl === \\"21\\") {\\n            return \\"备电故障\\";\\n        }\\n\\n        return \\"故障\\";\\n    }\\n\\n    return \\"未识别类型：\\" + type;\\n}\\n\\n\\nfunction getData(line) {\\n    return line.substring(12, line.length - 4);\\n}\\n\\n/**\\n * 分拆行\\n * @param message 消息\\n * @param starTag 起始符\\n * @returns {string} 行\\n */\\nfunction getLine(message, starTag) {\\n    // 寻找起始标记\\n    var start = message.indexOf(starTag);\\n    if (start !== 0) {\\n        return \\"\\";\\n    }\\n\\n    // 检测：最小长度\\n    if (message.length < 18) {\\n        return \\"\\";\\n    }\\n\\n    // 数据大小\\n    var size = parseInt(message.substring(2, 4), 16);\\n\\n    // 切第一行\\n    var line = message.substring(start, start + (3 + size) * 2);\\n\\n    // 截取第一行，并进行行验证\\n    if (!verifyLine(line)) {\\n        return \\"\\";\\n    }\\n\\n    return line;\\n}\\n\\n/**\\n * 验证CRC\\n *\\n * @param line 行信息\\n * @returns {boolean} 是否成功\\n */\\nfunction verifyLine(line) {\\n    if (line.length < 18) {\\n        return false;\\n    }\\n\\n    var body = line.substring(0, line.length - 4);\\n\\n    // 校验帧长度\\n    var size = parseInt(line.substring(2, 4), 16);\\n    if (line.length !== (3 + size) * 2) {\\n        return false;\\n    }\\n\\n\\n    var ch = line.substring(line.length - 2, line.length - 0);\\n    var cl = line.substring(line.length - 4, line.length - 2);\\n    var crc = calculateCRC16(body, 0xFFFF, 0xA001);\\n\\n    return crc === ch + cl;\\n}\\n\\n/**\\n * CRC16校验\\n * 范例：calculateCRC16(\\"7E0000000133000100\\", 0x0000, 0xA001);\\n *\\n * @param dataHexString 无空格的HEX格式文本，例如：\\"7E0000000133000100\\";\\n * @param init CRC16的初始值，例如：0x0000\\n * @param poly CRC16的多项式，例如：0xA001\\n * @returns {string}\\n */\\nfunction calculateCRC16(dataHexString, init, poly) {\\n    var dataBytes = [];\\n    for (var i = 0; i < dataHexString.length; i += 2) {\\n        dataBytes.push(parseInt(dataHexString.substring(i, i + 2), 16));\\n    }\\n\\n    var crc = init;\\n    var polynomial = poly;  // This is the polynomial x^16 + x^15 + x^2 + 1\\n\\n    for (var i = 0; i < dataBytes.length; i++) {\\n        crc ^= dataBytes[i];\\n        for (var j = 0; j < 8; j++) {\\n            if (crc & 0x0001) {\\n                crc = ((crc >> 1) ^ polynomial) & 0xFFFF;\\n            } else {\\n                crc >>= 1;\\n            }\\n        }\\n    }\\n\\n    crc = crc & 0xffff\\n\\n    var txt = crc.toString(16).toUpperCase();\\n    txt = padStart(txt, 4, \'0\');\\n    return txt;\\n}\\n\\nfunction padStart(str, length, ch) {\\n    while (str.length < length) {\\n        str = ch + str;\\n    }\\n\\n    return str;\\n}\\n"}}', '{"description":"/**\\n * 编码器的入口函数\\n * 全局参数：\\n *     message：hex string格式的接收数据\\n *              XX+[合法报文]+XXX，合法报文可能混杂在一堆其他数据之中\\n * 返回值：\\n *   从XXX+[合法报文]+XXX中，截取到的[合法报文]\\n */\\nfunction decodeObj(message) {\\n    var starTag = \\"7F\\";\\n\\n    message = message.replace(/\\\\s+/g, \\"\\");\\n    starTag = starTag.replace(/\\\\s+/g, \\"\\");\\n\\n    // 转换成大写\\n    message = message.toUpperCase();\\n    starTag = starTag.toUpperCase();\\n\\n    // 找到起始符\\n    var start = message.indexOf(starTag);\\n    if (start < 0) {\\n        return \\"\\";\\n    }\\n\\n    // 切掉前面的数据\\n    message = message.substring(start);\\n\\n    // 切出第一行\\n    var line = getLine(message, starTag);\\n    if (line.length === 0) {\\n        return \\"\\";\\n    }\\n\\n    //取出行信息\\n    var data = getData(line);\\n\\n    // 上报类型\\n    var type = data.substring(0, 2);\\n\\n    var result = [];\\n    var record = {\\n        \\"recordType\\": \\"\\", \\"device\\": \\"\\", \\"host\\": \\"\\"\\n    };\\n\\n    if (type === \\"40\\" || type === \\"01\\") {\\n        // 火警01 001 049/2A\\n        // 2A 49 10 00 01\\n\\n        // E0 01 17 78 10 00 01 00\\n        // 01 001 078/17 手动按钮报警\\n        record.recordType = \\"火警\\";\\n        getDevice(data,record);\\n        result.push(record);\\n        return result;\\n    }\\n\\n    if (type === \\"03\\") {\\n        record.recordType = \\"启动\\";\\n        getDevice(data,record);\\n        result.push(record);\\n        return result;\\n    }\\n\\n    if (type === \\"04\\") {\\n        record.recordType = \\"反馈\\";\\n        getDevice(data,record);\\n        result.push(record);\\n        return result;\\n    }\\n\\n    if (type === \\"05\\") {\\n        record.recordType = \\"监管\\";\\n        getDevice(data,record);\\n        result.push(record);\\n        return result;\\n    }\\n\\n    if (type === \\"31\\" || type === \\"21\\") {\\n        record.recordType = \\"电源故障\\";\\n        getDevice(data,record);\\n        result.push(record);\\n        return result;\\n    }\\n\\n    if (type === \\"60\\") {\\n        // 01 021 202/93消防广播主机复位\\n        // 93 02 12 02 01 00\\n\\n        // 01 021 202/90消防电话总机 设备复位\\n        // 90 00 00 00 00 00\\n        record.recordType = \\"复位\\";\\n        getDevice(data,record);\\n        result.push(record);\\n        return result;\\n    }\\n\\n    if (type === \\"80\\") {\\n        record.recordType = \\"停止\\";\\n        getDevice(data,record);\\n        result.push(record);\\n        return result;\\n    }\\n\\n    if (type === \\"E0\\") {\\n        // 01 001 078/17手动按钮故障\\n        // 17 78 10 00 01\\n\\n        // 01 001 049/2A烟感故障\\n        // 2A 49 10 00 01 00\\n        record.recordType = \\"故障\\";\\n        getDevice(data,record);\\n        result.push(record);\\n        return result;\\n    }\\n\\n\\n    if (type === \\"C3\\") {\\n        // 01 021 251/1A主电故障\\n        // 1A 51 12 02 01 00\\n\\n        // 01 021 251/1A备电故障\\n\\n        record.recordType = \\"故障\\";\\n\\n        var ctrl = data.substring(2, 4);\\n        if (ctrl === \\"01\\"){\\n            record.recordType = \\"主电故障\\";\\n        }\\n        if (ctrl === \\"21\\"){\\n            record.recordType = \\"备电故障\\";\\n        }\\n\\n        getDevice(data,record);\\n        result.push(record);\\n        return result;\\n    }\\n\\n\\n    return \\"\\";\\n}\\n\\nfunction getDevice(data, record) {\\n    var node_addr = data[9] + data[6] + data[7] + \\"/\\" + data[4] + data[5];\\n    var loop_addr = data[10] + data[11] + data[8];\\n    var host_addr = data[12] + data[13];\\n    record.device = loop_addr + \\" \\" + node_addr;\\n    record.host = host_addr;\\n}\\n\\nfunction getData(line) {\\n    return line.substring(12, line.length - 4);\\n}\\n\\n/**\\n * 分拆行\\n * @param message 消息\\n * @param starTag 起始符\\n * @returns {string} 行\\n */\\nfunction getLine(message, starTag) {\\n    // 寻找起始标记\\n    var start = message.indexOf(starTag);\\n    if (start !== 0) {\\n        return \\"\\";\\n    }\\n\\n    // 检测：最小长度\\n    if (message.length < 18) {\\n        return \\"\\";\\n    }\\n\\n    // 数据大小\\n    var size = parseInt(message.substring(2, 4), 16);\\n\\n    // 切第一行\\n    var line = message.substring(start, start + (3 + size) * 2);\\n\\n    // 截取第一行，并进行行验证\\n    if (!verifyLine(line)) {\\n        return \\"\\";\\n    }\\n\\n    return line;\\n}\\n\\n/**\\n * 验证CRC\\n *\\n * @param line 行信息\\n * @returns {boolean} 是否成功\\n */\\nfunction verifyLine(line) {\\n    if (line.length < 18) {\\n        return false;\\n    }\\n\\n    var body = line.substring(0, line.length - 4);\\n\\n    // 校验帧长度\\n    var size = parseInt(line.substring(2, 4), 16);\\n    if (line.length !== (3 + size) * 2) {\\n        return false;\\n    }\\n\\n\\n    var ch = line.substring(line.length - 2, line.length - 0);\\n    var cl = line.substring(line.length - 4, line.length - 2);\\n    var crc = calculateCRC16(body, 0xFFFF, 0xA001);\\n\\n    return crc === ch + cl;\\n}\\n\\n/**\\n * CRC16校验\\n * 范例：calculateCRC16(\\"7E0000000133000100\\", 0x0000, 0xA001);\\n *\\n * @param dataHexString 无空格的HEX格式文本，例如：\\"7E0000000133000100\\";\\n * @param init CRC16的初始值，例如：0x0000\\n * @param poly CRC16的多项式，例如：0xA001\\n * @returns {string}\\n */\\nfunction calculateCRC16(dataHexString, init, poly) {\\n    var dataBytes = [];\\n    for (var i = 0; i < dataHexString.length; i += 2) {\\n        dataBytes.push(parseInt(dataHexString.substring(i, i + 2), 16));\\n    }\\n\\n    var crc = init;\\n    var polynomial = poly;  // This is the polynomial x^16 + x^15 + x^2 + 1\\n\\n    for (var i = 0; i < dataBytes.length; i++) {\\n        crc ^= dataBytes[i];\\n        for (var j = 0; j < 8; j++) {\\n            if (crc & 0x0001) {\\n                crc = ((crc >> 1) ^ polynomial) & 0xFFFF;\\n            } else {\\n                crc >>= 1;\\n            }\\n        }\\n    }\\n\\n    crc = crc & 0xffff\\n\\n    var txt = crc.toString(16).toUpperCase();\\n    txt = padStart(txt, 4, \'0\');\\n    return txt;\\n}\\n\\nfunction padStart(str, length, ch) {\\n    while (str.length < length) {\\n        str = ch + str;\\n    }\\n\\n    return str;\\n}"}', 'include', 'record', 1, 2000, 1712903951637, 1713356899546),
	(1299, '上报事件', 'JB-QT-TS3200', '青岛鼎信通讯消防安全有限公司', 'JavaScript', 'device', '{"decode":{"main":"decode","code":"/**\\n * 解码器的入口函数\\n * 全局参数：\\n *     fox_edge_data：json string格式 或者 hex string格式的接收数据\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   提供给通道的发送数据。根据不同的通道服务，它可能是HEX结构的文本，也可能是JSON结构的对象，请自行根据选定的通道服务进行确认\\n */\\nfunction decode() {\\n\\tvar object = decodeStr(fox_edge_data, fox_edge_param);\\n  return JSON.stringify(object);\\n}\\n\\n/**\\n * 事件解码器函数：消火栓按钮报火警\\n * 全局参数：\\n *     fox_edge_data：hex string格式的接收数据\\n *                    XXX+[合法报文]+XXX，合法报文可能混杂在一堆其他数据之中\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   必须是列表格式的JSON字符串，并且JSON对象必须包含关键字【recordType】，否则不给与入库\\n */\\nfunction decodeStr(message, device_param) {\\n    var result = decodeObj(message, \\"record\\");\\n    return result;\\n}"}}', '{"description":"报文格式：\\n【报头】【长度】【未知】【类型】【数据】【校验】\\n\\n范例1：\\n7F 31 F6 08 9B 38 40 02 2A 49 10 00 01 00 00 00 00 00 00 C0 B5 FD B9 DA BF F6 B3 F9 CB DE B2 46 31 B7 D6 C9 BE E9 D2 E1 BB BD C9 AE C2 07 11 25 10 22 64 A5\\n\\n解读：\\n7F                          报头  1字节\\n31                         长度  1字节\\nF6 08 9B 38           未知，4字节\\n40                         类型  1字节\\n02 2A 49 10 00 01 00 00 00 00 00 00 C0 B5 FD B9 DA BF F6 B3 F9 CB DE B2 46 31 B7 D6 C9 BE E9 D2 E1 BB BD C9 AE C2 07 11 25 10 22  数据 N字节\\n64 A5                    CRC16 2字节  CRC-MODBUS 从7E开始\\n\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n测试报文1：\\n7F 31 F6 08 91 38 01 00 17 78 10 00 01 00 00 00 00 00 00 00 00 00 00 F2 D3 F8 C7 AB B9 EC B0 46 31 B7 D6 C9 BE E9 D2 E1 BB BD C9 AE C2 45 10 25 10 22 76 4C\\n\\n01 001 078/17 手动按钮报警\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n测试报文2：\\n7F 31 F6 08 95 38 60 07 93 02 12 02 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 32 30 32 B7 C2 D8 BB 31 32 30 FA BB F7 D6 31 30 55 10 25 10 22 34 9A\\n\\n01 021 202/93消防广播主机复位\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n测试报文3：\\n7F 31 F6 08 9B 38 40 02 2A 49 10 00 01 00 00 00 00 00 00 C0 B5 FD B9 DA BF F6 B3 F9 CB DE B2 46 31 B7 D6 C9 BE E9 D2 E1 BB BD C9 AE C2 07 11 25 10 22 64 A5\\n\\n\\n火警01 001 049/2A\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n测试报文4：\\n7F 31 F6 08 A9 38 E0 01 2A 49 10 00 01 00 00 00 00 00 00 C0 B5 FD B9 DA BF F6 B3 F9 CB DE B2 46 31 B7 D6 C9 BE E9 D2 E1 BB BD C9 AE C2 26 11 25 10 22 7C BA\\n\\n01 001 049/2A烟感故障\\n"}', 'report', 'record', 1, 2000, 1712829661152, 1713356775845),
	(1300, 'splitHandler', 'JB-QGZ2L-FW19000G', '北京防威威盛机电设备有限责任公司', 'JavaScript', 'channel', '{"decode":{"main":"decode","code":"/**\\n * 编码器的入口函数\\n * 全局参数：\\n *     message：hex string格式的接收数据\\n *              XX+[合法报文]+XXX，合法报文可能混杂在一堆其他数据之中\\n * 返回值：\\n *   从XXX+[合法报文]+XXX中，截取到的[合法报文]\\n */\\nfunction decode(message) {\\n    var starTag = \\"7E\\";\\n\\n    message = message.replace(/\\\\s+/g, \\"\\");\\n    starTag = starTag.replace(/\\\\s+/g, \\"\\");\\n\\n    // 转换成大写\\n    message = message.toUpperCase();\\n    starTag = starTag.toUpperCase();\\n\\n    // 找到起始符\\n    var start = message.indexOf(starTag);\\n    if (start < 0) {\\n        return \\"\\";\\n    }\\n\\n    // 切掉前面的数据\\n    message = message.substring(start);\\n\\n    // 切出第一行\\n    var line = getLine(message, starTag);\\n    if (line.length === 0) {\\n        return \\"\\";\\n    }\\n\\n    return line;\\n}\\n\\n\\n/**\\n * 分拆行\\n * @param message 消息\\n * @param starTag 起始符\\n * @returns {string} 行\\n */\\nfunction getLine(message, starTag) {\\n    // 寻找起始标记\\n    var start = message.indexOf(starTag);\\n    if (start !== 0) {\\n        return \\"\\";\\n    }\\n\\n    // 检测：最小长度\\n    if (message.length < 10) {\\n        return \\"\\";\\n    }\\n\\n    // 数据大小\\n    var size = parseInt(message.substring(2, 4), 16);\\n\\n    // 切第一行\\n    var line = message.substring(start, start + (2 + size) * 2);\\n\\n    // 截取第一行，并进行行验证\\n    if (!verifyLine(line)) {\\n        return \\"\\";\\n    }\\n\\n    return line;\\n}\\n\\n/**\\n * 验证CRC\\n *\\n * @param line 行信息\\n * @returns {boolean} 是否成功\\n */\\nfunction verifyLine(line) {\\n    if (line.length < 10) {\\n        return false;\\n    }\\n\\n    var body = line.substring(0, line.length - 4);\\n\\n    // 校验帧长度\\n    var size = parseInt(line.substring(2, 4), 16);\\n    if (line.length !== (2 + size) * 2) {\\n        return false;\\n    }\\n\\n\\n    var ch = line.substring(line.length - 2, line.length - 0);\\n    var cl = line.substring(line.length - 4, line.length - 2);\\n    var crc = calculateCRC16(body, 0xFFFF, 0xA001);\\n\\n    return crc === ch + cl;\\n}\\n\\n/**\\n * CRC16校验\\n * 范例：calculateCRC16(\\"7E0000000133000100\\", 0x0000, 0xA001);\\n *\\n * @param dataHexString 无空格的HEX格式文本，例如：\\"7E0000000133000100\\";\\n * @param init CRC16的初始值，例如：0x0000\\n * @param poly CRC16的多项式，例如：0xA001\\n * @returns {string}\\n */\\nfunction calculateCRC16(dataHexString, init, poly) {\\n    var dataBytes = [];\\n    for (var i = 0; i < dataHexString.length; i += 2) {\\n        dataBytes.push(parseInt(dataHexString.substring(i, i + 2), 16));\\n    }\\n\\n    var crc = init;\\n    var polynomial = poly;  // This is the polynomial x^16 + x^15 + x^2 + 1\\n\\n    for (var i = 0; i < dataBytes.length; i++) {\\n        crc ^= dataBytes[i];\\n        for (var j = 0; j < 8; j++) {\\n            if (crc & 0x0001) {\\n                crc = ((crc >> 1) ^ polynomial) & 0xFFFF;\\n            } else {\\n                crc >>= 1;\\n            }\\n        }\\n    }\\n\\n    crc = crc & 0xffff\\n\\n    var txt = crc.toString(16).toUpperCase();\\n    txt = padStart(txt, 4, \'0\');\\n    return txt;\\n}\\n\\nfunction padStart(str, length, ch) {\\n    while (str.length < length) {\\n        str = ch + str;\\n    }\\n\\n    return str;\\n}"}}', '{"description":"报文格式：\\n【报头】【长度】【数据】【校验】\\n\\n范例1：\\n7E 0D 90 02 11 96 00 17 04 06 0C 12 15 AD 5B\\n\\n范例2：\\n7E 03 80 10 88\\n\\n解读：\\n7F                          报头  1字节\\n03                          长度  1字节\\n80                          数据 N字节\\n10 88                    CRC16 2字节  CRC-MODBUS 从7E开始\\n\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n测试报文1：\\n7E 03 80 10 88\\n\\n"}', 'splitHandler', 'status', 1, 2000, 1712828091343, 1713354917413),
	(1301, 'libs', 'JB-QGZ2L-FW19000G', '北京防威威盛机电设备有限责任公司', 'JavaScript', 'device', '{"include":{"main":"include","code":"/**\\n * 编码器的入口函数\\n * 全局参数：\\n *     message：hex string格式的接收数据\\n *              XX+[合法报文]+XXX，合法报文可能混杂在一堆其他数据之中\\n * 返回值：\\n *   从XXX+[合法报文]+XXX中，截取到的[合法报文]\\n */\\nfunction decodeObj(message,mode) {\\n    var starTag = \\"7E\\";\\n\\n    message = message.replace(/\\\\s+/g, \\"\\");\\n    starTag = starTag.replace(/\\\\s+/g, \\"\\");\\n\\n    // 转换成大写\\n    message = message.toUpperCase();\\n    starTag = starTag.toUpperCase();\\n\\n    // 找到起始符\\n    var start = message.indexOf(starTag);\\n    if (start < 0) {\\n        return \\"\\";\\n    }\\n\\n    // 切掉前面的数据\\n    message = message.substring(start);\\n\\n    // 切出第一行\\n    var line = getLine(message, starTag);\\n    if (line.length === 0) {\\n        return \\"\\";\\n    }\\n\\n    //取出数据区\\n    var data = line.substring(4, line.length - 4);\\n\\n    // 心跳报文\\n    if (mode === \\"status\\" && data.length === 2){\\n        var status = {\\n            \\"心跳\\": new Date()\\n        };\\n        return status;\\n    }\\n\\n    // 检查：是否为记录报文\\n    if (mode === \\"record\\" && data.length < 10){\\n        return \\"长度不足\\";\\n    }\\n\\n    var result = [];\\n    var record = {\\n        \\"recordType\\": \\"\\", \\"device\\": \\"\\"\\n    };\\n\\n    // 设备地址\\n    var node_addr = \\"\\" + parseInt(data.substring(2, 4), 16);\\n    var loop_addr = \\"\\" + parseInt(data.substring(4, 6), 16);\\n    record.device = padStart(node_addr, 3, \'0\') + \\"-\\" + padStart(loop_addr, 3, \'0\');\\n\\n    var type = data.substring(6, 8);\\n\\n    // 上报类型\\n    record.recordType = getTypeName(type);\\n\\n    result.push(record);\\n    return result;\\n}\\n\\nfunction getTypeName(type) {\\n    if (type === \\"01\\") {\\n        return \\"手报火警\\";\\n    }\\n    if (type === \\"10\\") {\\n        return \\"备电故障\\";\\n    }\\n    if (type === \\"90\\") {\\n        return \\"备电恢复\\";\\n    }\\n    if (type === \\"16\\") {\\n        return \\"故障\\";\\n    }\\n    if (type === \\"96\\") {\\n        return \\"故障恢复\\";\\n    }\\n    if (type === \\"05\\") {\\n        return \\"启动\\";\\n    }\\n\\n    return \\"未识别类型：\\" + type;\\n}\\n\\n/**\\n * 分拆行\\n * @param message 消息\\n * @param starTag 起始符\\n * @returns {string} 行\\n */\\nfunction getLine(message, starTag) {\\n    // 寻找起始标记\\n    var start = message.indexOf(starTag);\\n    if (start !== 0) {\\n        return \\"\\";\\n    }\\n\\n    // 检测：最小长度\\n    if (message.length < 10) {\\n        return \\"\\";\\n    }\\n\\n    // 数据大小\\n    var size = parseInt(message.substring(2, 4), 16);\\n\\n    // 切第一行\\n    var line = message.substring(start, start + (2 + size) * 2);\\n\\n    // 截取第一行，并进行行验证\\n    if (!verifyLine(line)) {\\n        return \\"\\";\\n    }\\n\\n    return line;\\n}\\n\\n/**\\n * 验证CRC\\n *\\n * @param line 行信息\\n * @returns {boolean} 是否成功\\n */\\nfunction verifyLine(line) {\\n    if (line.length < 10) {\\n        return false;\\n    }\\n\\n    var body = line.substring(0, line.length - 4);\\n\\n    // 校验帧长度\\n    var size = parseInt(line.substring(2, 4), 16);\\n    if (line.length !== (2 + size) * 2) {\\n        return false;\\n    }\\n\\n\\n    var ch = line.substring(line.length - 2, line.length - 0);\\n    var cl = line.substring(line.length - 4, line.length - 2);\\n    var crc = calculateCRC16(body, 0xFFFF, 0xA001);\\n\\n    return crc === ch + cl;\\n}\\n\\n/**\\n * CRC16校验\\n * 范例：calculateCRC16(\\"7E0000000133000100\\", 0x0000, 0xA001);\\n *\\n * @param dataHexString 无空格的HEX格式文本，例如：\\"7E0000000133000100\\";\\n * @param init CRC16的初始值，例如：0x0000\\n * @param poly CRC16的多项式，例如：0xA001\\n * @returns {string}\\n */\\nfunction calculateCRC16(dataHexString, init, poly) {\\n    var dataBytes = [];\\n    for (var i = 0; i < dataHexString.length; i += 2) {\\n        dataBytes.push(parseInt(dataHexString.substring(i, i + 2), 16));\\n    }\\n\\n    var crc = init;\\n    var polynomial = poly;  // This is the polynomial x^16 + x^15 + x^2 + 1\\n\\n    for (var i = 0; i < dataBytes.length; i++) {\\n        crc ^= dataBytes[i];\\n        for (var j = 0; j < 8; j++) {\\n            if (crc & 0x0001) {\\n                crc = ((crc >> 1) ^ polynomial) & 0xFFFF;\\n            } else {\\n                crc >>= 1;\\n            }\\n        }\\n    }\\n\\n    crc = crc & 0xffff\\n\\n    var txt = crc.toString(16).toUpperCase();\\n    txt = padStart(txt, 4, \'0\');\\n    return txt;\\n}\\n\\nfunction padStart(str, length, ch) {\\n    while (str.length < length) {\\n        str = ch + str;\\n    }\\n\\n    return str;\\n}"}}', '{"description":"报文格式：\\n【报头】【长度】【数据】【校验】\\n\\n范例1：\\n7E 0D 90 02 11 96 00 17 04 06 0C 12 15 AD 5B\\n\\n范例2：\\n7E 03 80 10 88\\n\\n解读：\\n7F                          报头  1字节\\n03                          长度  1字节\\n80                          数据 N字节\\n10 88                    CRC16 2字节  CRC-MODBUS 从7E开始\\n\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n测试报文1：\\n手报故障02-17\\n7E 0D 90 02 11 16 00 17 04 06 0C 12 09 A4 F2\\n\\n测试报文2：\\n手报故障恢复02-17\\n7E 0D 90 02 11 96 00 17 04 06 0C 12 15 AD 5B\\n\\n手报火警02-16\\n7E 0D 90 02 10 01 00 17 04 06 0C 1C 08 2C 28 \\n\\n消报启动\\n7E 0D 90 02 12 05 00 17 04 06 0C 2E 02 A1 DC \\n\\n"}', 'include', 'record', 1, 2000, 1712903951637, 1713357541605),
	(1302, '上报事件', 'JB-QGZ2L-FW19000G', '北京防威威盛机电设备有限责任公司', 'JavaScript', 'device', '{"decode":{"main":"decode","code":"/**\\n * 解码器的入口函数\\n * 全局参数：\\n *     fox_edge_data：json string格式 或者 hex string格式的接收数据\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   提供给通道的发送数据。根据不同的通道服务，它可能是HEX结构的文本，也可能是JSON结构的对象，请自行根据选定的通道服务进行确认\\n */\\nfunction decode() {\\n\\tvar object = decodeStr(fox_edge_data, fox_edge_param);\\n  return JSON.stringify(object);\\n}\\n\\n/**\\n * 事件解码器函数：消火栓按钮报火警\\n * 全局参数：\\n *     fox_edge_data：hex string格式的接收数据\\n *                    XXX+[合法报文]+XXX，合法报文可能混杂在一堆其他数据之中\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   必须是列表格式的JSON字符串，并且JSON对象必须包含关键字【recordType】，否则不给与入库\\n */\\nfunction decodeStr(message, device_param) {\\n    var result = decodeObj(message, \\"record\\");\\n    return result;\\n}"}}', '{"description":"报文格式：\\n【报头】【长度】【数据】【校验】\\n\\n范例1：\\n7E 0D 90 02 11 96 00 17 04 06 0C 12 15 AD 5B\\n\\n范例2：\\n7E 03 80 10 88\\n\\n解读：\\n7F                          报头  1字节\\n03                          长度  1字节\\n80                          数据 N字节\\n10 88                    CRC16 2字节  CRC-MODBUS 从7E开始\\n\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n测试报文1：\\n手报故障02-17\\n7E 0D 90 02 11 16 00 17 04 06 0C 12 09 A4 F2\\n\\n测试报文2：\\n手报故障恢复02-17\\n7E 0D 90 02 11 96 00 17 04 06 0C 12 15 AD 5B\\n\\n手报火警02-16\\n7E 0D 90 02 10 01 00 17 04 06 0C 1C 08 2C 28 \\n\\n消报启动\\n7E 0D 90 02 12 05 00 17 04 06 0C 2E 02 A1 DC \\n\\n"}', 'report', 'record', 1, 2000, 1712829661152, 1713357585674),
	(1303, '心跳', 'JB-QGZ2L-FW19000G', '北京防威威盛机电设备有限责任公司', 'JavaScript', 'device', '{"decode":{"main":"decode","code":"/**\\n * 解码器的入口函数\\n * 全局参数：\\n *     fox_edge_data：json string格式 或者 hex string格式的接收数据\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   提供给通道的发送数据。根据不同的通道服务，它可能是HEX结构的文本，也可能是JSON结构的对象，请自行根据选定的通道服务进行确认\\n */\\nfunction decode() {\\n\\tvar object = decodeStr(fox_edge_data, fox_edge_param);\\n  return JSON.stringify(object);\\n}\\n\\n/**\\n * 事件解码器函数：消火栓按钮报火警\\n * 全局参数：\\n *     fox_edge_data：hex string格式的接收数据\\n *                    XXX+[合法报文]+XXX，合法报文可能混杂在一堆其他数据之中\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   必须是列表格式的JSON字符串，并且JSON对象必须包含关键字【recordType】，否则不给与入库\\n */\\nfunction decodeStr(message, device_param) {\\n    // 检查：是否解码器成功\\n    return decodeObj(message, \\"status\\");\\n}\\n"}}', '{"description":"报文格式：\\n【报头】【长度】【数据】【校验】\\n\\n范例1：\\n7E 03 80 10 88\\n\\n解读：\\n7F                          报头  1字节\\n03                          长度  1字节\\n80                          数据 N字节\\n10 88                    CRC16 2字节  CRC-MODBUS 从7E开始\\n\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n测试报文1：\\n7E 03 80 10 88\\n\\n"}', 'report', 'status', 1, 2000, 1712829661152, 1713357567326),
	(1304, '心跳', 'JB-QT-TS3200', '青岛鼎信通讯消防安全有限公司', 'JavaScript', 'device', '{"decode":{"main":"decode","code":"/**\\n * 解码器的入口函数\\n * 全局参数：\\n *     fox_edge_data：json string格式 或者 hex string格式的接收数据\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   提供给通道的发送数据。根据不同的通道服务，它可能是HEX结构的文本，也可能是JSON结构的对象，请自行根据选定的通道服务进行确认\\n */\\nfunction decode() {\\n\\tvar object = decodeStr(fox_edge_data, fox_edge_param);\\n  return JSON.stringify(object);\\n}\\n\\n/**\\n * 事件解码器函数：消火栓按钮报火警\\n * 全局参数：\\n *     fox_edge_data：hex string格式的接收数据\\n *                    XXX+[合法报文]+XXX，合法报文可能混杂在一堆其他数据之中\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   必须是列表格式的JSON字符串，并且JSON对象必须包含关键字【recordType】，否则不给与入库\\n */\\nfunction decodeStr(message, device_param) {\\n    var result = decodeObj(message, \\"status\\");\\n    return result;\\n}"}}', '{"description":"报文格式：\\n【报头】【长度】【未知】【类型】【数据】【校验】\\n\\n范例1：\\n7F 31 F6 08 9B 38 40 02 2A 49 10 00 01 00 00 00 00 00 00 C0 B5 FD B9 DA BF F6 B3 F9 CB DE B2 46 31 B7 D6 C9 BE E9 D2 E1 BB BD C9 AE C2 07 11 25 10 22 64 A5\\n\\n解读：\\n7F                          报头  1字节\\n31                         长度  1字节\\nF6 08 9B 38           未知，4字节\\n40                         类型  1字节\\n02 2A 49 10 00 01 00 00 00 00 00 00 C0 B5 FD B9 DA BF F6 B3 F9 CB DE B2 46 31 B7 D6 C9 BE E9 D2 E1 BB BD C9 AE C2 07 11 25 10 22  数据 N字节\\n64 A5                    CRC16 2字节  CRC-MODBUS 从7E开始\\n\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n测试报文1：\\n7F 06 FE 08 67 3F FF 5E 7A\\n"}', 'report', 'status', 1, 2000, 1712829661152, 1713357280246),
	(1305, 'splitHandler', 'JB-TB-MASYS5000', '福建闽安安全技术有限责任公司', 'JavaScript', 'channel', '{"decode":{"main":"decode","code":"/**\\n * 编码器的入口函数\\n * 全局参数：\\n *     message：hex string格式的接收数据\\n *              XX+[合法报文]+XXX，合法报文可能混杂在一堆其他数据之中\\n * 返回值：\\n *   从XXX+[合法报文]+XXX中，截取到的[合法报文]\\n */\\nfunction decode(message) {\\n    var starTag = \\"20\\";\\n    var endTag = \\"0D\\";\\n\\n    message = message.replace(/\\\\s+/g, \\"\\");\\n    starTag = starTag.replace(/\\\\s+/g, \\"\\");\\n    endTag = endTag.replace(/\\\\s+/g, \\"\\");\\n\\n\\n    // 转换成大写\\n    message = message.toUpperCase();\\n    starTag = starTag.toUpperCase();\\n    endTag = endTag.toUpperCase();\\n\\n    // 查找起始标记\\n    var start = message.indexOf(starTag);\\n    if (start < 0) {\\n        return \\"\\";\\n    }\\n\\n    // 查找结束标记\\n    var end = message.indexOf(endTag, start);\\n    if (end < 0) {\\n        return \\"\\";\\n    }\\n\\n    var line = message.substring(start, end + endTag.length);\\n\\n    // 取出时间\\n    var time = getTime(line);\\n\\n    // 检查： 前面的日期，符合特定的格式，范例06/27 12:08 故障 1022号\\n    var regex = /^\\\\d{2}\\\\/\\\\d{2} \\\\d{2}:\\\\d{2}$/;\\n    if (!regex.test(time)){\\n        return \\"\\";\\n    }\\n    if (line.substring(24, 26) !== \'20\') {\\n        return \\"\\";\\n    }\\n\\n    return line;\\n}\\n\\nfunction getTime(line) {\\n    var text = \\"\\";\\n    for (var i = 2; i < 24; i += 2) {\\n        text += String.fromCharCode(parseInt(line[i] + line[i + 1], 16));\\n    }\\n\\n    return text;\\n}\\n\\n"}}', '{"description":"报文格式：\\nGB2312编码的中文文本，文本行的特征是前面是日期时间格式，例如\\" 06/27 12:08 \\"\\n\\n 06/27 12:08 故障 1022号\\n\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n测试报文1：\\n\\n20 30 36 2F 32 37 20 31 32 3A 30 38 20 B9 CA D5 CF 20 31 30 32 32 BA C5 0D\\n\\n 06/27 12:08 故障 1022号\\n\\n\\n"}', 'splitHandler', 'status', 1, 2000, 1712828091343, 1713363660611),
	(1307, 'libs', 'JB-TB-MASYS5000', '福建闽安安全技术有限责任公司', 'JavaScript', 'device', '{"include":{"main":"include","code":"/**\\n * 编码器的入口函数\\n * 全局参数：\\n *     message：hex string格式的接收数据\\n *              XX+[合法报文]+XXX，合法报文可能混杂在一堆其他数据之中\\n * 返回值：\\n *   从XXX+[合法报文]+XXX中，截取到的[合法报文]\\n */\\nfunction decodeObj(message) {\\n    // 切掉前面的数据\\n    var time = message.substring(1, 12);\\n\\n    // 检查： 前面的日期，符合特定的格式，范例06/27 12:08 故障 1022号\\n    var regex = /^\\\\d{2}\\\\/\\\\d{2} \\\\d{2}:\\\\d{2}$/;\\n    if (!regex.test(time)) {\\n        return \\"\\";\\n    }\\n\\n    var data = message.substring(13, message.length);\\n\\n    var items = data.split(\\" \\");\\n    if (items.length === 0) {\\n        return \\"\\";\\n    }\\n\\n    var result = [];\\n    var record = {\\n        \\"recordType\\": \\"\\", \\"device\\": \\"\\"\\n    };\\n\\n    // 告警类型\\n    record.recordType = items[0];\\n\\n    // 如果包含第2段，那么这是地址\\n    if (items.length === 2){\\n        if (items[1].indexOf(\\"号\\")<0){\\n            return \\"\\";\\n        }\\n\\n        record.device = items[1].substring(0,items[1].indexOf(\\"号\\"));\\n    }\\n\\n\\n    result.push(record);\\n    return result;\\n}\\n"}}', '{"description":"报文格式：\\n【报头】【长度】【数据】【校验】\\n\\n范例1：\\n7E 0D 90 02 11 96 00 17 04 06 0C 12 15 AD 5B\\n\\n范例2：\\n7E 03 80 10 88\\n\\n解读：\\n7F                          报头  1字节\\n03                          长度  1字节\\n80                          数据 N字节\\n10 88                    CRC16 2字节  CRC-MODBUS 从7E开始\\n\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n测试报文1：\\n20 30 36 2F 32 37 20 31 32 3A 30 39 20 BB F0 BE AF 20 31 30 32 32 BA C5 0D\\n\\n测试报文2：\\n20 30 36 2F 32 37 20 31 32 3A 30 36 20 B8 B4 CE BB 0D\\n\\n"}', 'include', 'record', 1, 2000, 1712903951637, 1713363846831),
	(1308, '上报事件', 'JB-TB-MASYS5000', '福建闽安安全技术有限责任公司', 'JavaScript', 'device', '{"decode":{"main":"decode","code":"/**\\n * 解码器的入口函数\\n * 全局参数：\\n *     fox_edge_data：json string格式 或者 hex string格式的接收数据\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   提供给通道的发送数据。根据不同的通道服务，它可能是HEX结构的文本，也可能是JSON结构的对象，请自行根据选定的通道服务进行确认\\n */\\nfunction decode() {\\n\\tvar object = decodeStr(fox_edge_data, fox_edge_param);\\n  return JSON.stringify(object);\\n}\\n\\n/**\\n * 事件解码器函数：消火栓按钮报火警\\n * 全局参数：\\n *     fox_edge_data：hex string格式的接收数据\\n *                    XXX+[合法报文]+XXX，合法报文可能混杂在一堆其他数据之中\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   必须是列表格式的JSON字符串，并且JSON对象必须包含关键字【recordType】，否则不给与入库\\n */\\nfunction decodeStr(message, device_param) {\\n    var result = decodeObj(message);\\n    return result;\\n}"}}', '{"description":"报文格式：\\n【报头】【长度】【数据】【校验】\\n\\n范例1：\\n7E 0D 90 02 11 96 00 17 04 06 0C 12 15 AD 5B\\n\\n范例2：\\n7E 03 80 10 88\\n\\n解读：\\n7F                          报头  1字节\\n03                          长度  1字节\\n80                          数据 N字节\\n10 88                    CRC16 2字节  CRC-MODBUS 从7E开始\\n\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n测试报文1：\\n手报故障02-17\\n7E 0D 90 02 11 16 00 17 04 06 0C 12 09 A4 F2\\n\\n测试报文2：\\n手报故障恢复02-17\\n7E 0D 90 02 11 96 00 17 04 06 0C 12 15 AD 5B\\n\\n手报火警02-16\\n7E 0D 90 02 10 01 00 17 04 06 0C 1C 08 2C 28 \\n\\n消报启动\\n7E 0D 90 02 12 05 00 17 04 06 0C 2E 02 A1 DC \\n\\n"}', 'report', 'record', 1, 2000, 1712829661152, 1713363677365),
	(1309, 'libs', 'JB-QB-GST500', '海湾安全技术有限公司', 'JavaScript', 'device', '{"include":{"main":"include","code":"\\n/**\\n * 按类型解码数据\\n * @param message 消息内容\\n * @returns {{data, success, sn, type, message}}\\n */\\nfunction decodeObj(message) {\\n    var endTag = \\"0D\\";\\n\\n    message = message.replace(/\\\\s+/g, \\"\\");\\n    endTag = endTag.replace(/\\\\s+/g, \\"\\");\\n\\n\\n    // 转换成大写\\n    message = message.toUpperCase();\\n    endTag = endTag.toUpperCase();\\n\\n    // 根据换行符0D,查找有多少行\\n    var lns = indexCount(message, endTag);\\n    if (lns.length !== 4) {\\n        return \\"\\";\\n    }\\n\\n    var line1 = message.substring(0, lns[0] + 2);\\n    var line2 = message.substring(lns[0] + 2, lns[1] + 2);\\n    var line3 = message.substring(lns[1] + 2, lns[2] + 2);\\n    var line4 = message.substring(lns[2] + 2, lns[3] + 2);\\n\\n    // 检查：第1行，时间行\\n    if (line1.substring(4, 6) !== \\"8D\\" || line1.substring(10, 12) !== \\"8E\\") {\\n        return \\"\\";\\n    }\\n\\n    // 转成ASCII\\n    var yy = \\"/\\".charCodeAt(0).toString(16);\\n    var mm = \\" \\".charCodeAt(0).toString(16);\\n    var timeLine = line1.substring(0, 4) + yy + line1.substring(6, 10) + mm + line1.substring(12, line1.length - 2);\\n    var text = getAscii(timeLine);\\n\\n    var items = text.split(\\"  \\");\\n    if (items.length != 2) {\\n        return \\"\\";\\n    }\\n\\n    var record = {\\n        \\"recordType\\": \\"\\", \\"time\\": \\"\\", \\"device\\": \\"\\"\\n    }\\n\\n    record.time = items[0];\\n    record.device = items[1];\\n\\n    var type = getType(line2);\\n    record.recordType = type;\\n\\n    var result = [];\\n\\n    result.push(record);\\n    return result;\\n}\\n\\n\\nfunction indexCount(hexStr, hexTag, position) {\\n    // 默认值处理\\n    if (position == undefined) {\\n        position = 0;\\n    }\\n\\n    if (position % 2 !== 0) {\\n        return -1;\\n    }\\n\\n    var array = [];\\n\\n    var pos = position;\\n\\n    do {\\n        // 寻找标记\\n        pos = hexStr.indexOf(hexTag, pos);\\n        if (pos < 0) {\\n            break;\\n        }\\n\\n        // 检查：是否是错位，造成的误查\\n        if (pos % 2 !== 0) {\\n            // 纠正错位，并继续查找\\n            pos += 1;\\n            continue;\\n        }\\n\\n        // 没有错位的，才是真数据\\n        array.push(pos);\\n        pos += 2;\\n\\n    } while (true);\\n\\n    return array;\\n}\\n\\nfunction getAscii(hexStr) {\\n    var text = \\"\\";\\n    for (var i = 0; i < hexStr.length; i += 2) {\\n        text += String.fromCharCode(parseInt(hexStr[i] + hexStr[i + 1], 16));\\n    }\\n\\n    return text;\\n}"}}', '{"description":"报文特征：\\n1、由4行组成的段落，中文字符的编码格式是海湾公司自己的私有编码\\n2、第1行（固定19+1字节）是是事件发生的时间和设备编码，其中年(8D)和月(8E)是私有中文编码，10�09�16:20  000000\\n3、第2行（固定100+1字节）的末尾，是告警类型特征，可以凭借这个特征，识别是哪个事件类型的大类\\n4、第3行（固定98+1字节）是告警的设备名称信息，中文字符的编码格式是海湾公司的私有编码，无法识别\\n5、第4行（固定2+1字节）是04 03 \\n--------------------------------------------------------------------------------------------------------------------------\\n\\n测试报文1：\\n31 30 8D 30 39 8E 31 36 3A 32 32 20 20 30 31 31 31 34 39 0D 04 00 0F 60 80 40 37 04 14 64 04 14 24 64 04 17 20 C0 00 00 40 4C 4A 49 48 48 4B 7E 48 48 48 4A 4C 6B 40 00 04 43 30 07 72 82 8A 93 B4 82 E1 12 24 64 07 00 40 30 0F 10 20 FF 50 48 46 41 42 44 58 FF 00 00 00 7F 21 21 21 7F 80 80 43 24 18 24 43 C0 40 00 00 FF 04 08 17 10 17 15 15 FD 15 15 17 10 10 00 0D 0F 60 00 00 C0 40 40 40 7F 48 48 48 48 E8 4C 08 00 00 20 22 22 FE 22 22 FE 23 22 00 FC 00 00 FF 00 00 00 FC 14 D4 54 54 54 D4 14 FF 04 85 66 04 00 00 E0 00 FF 20 10 FE 42 42 42 FA 42 42 42 FF 02 00 10 10 10 FF 10 10 50 20 D0 1F 10 10 F0 18 10 00 00 FE 22 5A 86 10 D2 56 5A 53 5A 56 D2 10 10 00 0D 04 03 0D"}', 'include', 'record', 1, 2000, 1712903951637, 1713454652983),
	(1310, '设备特征', 'JB-QB-GST500', '海湾安全技术有限公司', 'JavaScript', 'device', '{"include":{"main":"include","code":"/**\\n * 特征信息：它在第2行的最末尾部分75到100字节\\n *\\n * @param line2\\n * @returns {string}\\n */\\nfunction getType(line2) {\\n    var feature = line2.substring(75 * 2, 100 * 2);\\n    var tag = \'\';\\n  \\n    tag = \\"80 43 24 18 24 43 C0 40 00 00 FF 04 08 17 10 17 15 15 FD 15 15 17 10 10 00\\";\\n    tag = tag.replace(/\\\\s+/g, \\"\\");\\n    if (feature === tag) {\\n        return \\"故障\\";\\n    }\\n\\n\\n    tag = \\"80 41 32 0F 32 41 C1 40 00 00 20 90 88 46 47 2A 32 12 2A 46 42 80 80 80 00\\";\\n    tag = tag.replace(/\\\\s+/g, \\"\\");\\n    if (feature === tag) {\\n        return \\"故障恢复\\";\\n    }\\n\\n\\n    tag = \\"00 03 0C 10 20 40 C0 40 00 01 01 01 F1 93 95 99 93 95 99 91 F1 01 01 01 00\\";\\n    tag = tag.replace(/\\\\s+/g, \\"\\");\\n    if (feature === tag) {\\n        return \\"火警\\";\\n    }\\n\\n    tag = \\"14 0C FF 0C 14 24 66 24 00 00 00 00 FF 00 00 00 00 FF 08 08 08 0C 08 00 00\\";\\n    tag = tag.replace(/\\\\s+/g, \\"\\");\\n    if (feature === tag) {\\n        return \\"复位\\";\\n    }\\n\\n    tag = \\"20 1C 03 40 80 40 3F 00 00 00 00 00 FF 00 00 00 00 FF 08 08 08 0C 08 00 00\\";\\n    tag = tag.replace(/\\\\s+/g, \\"\\");\\n    if (feature === tag) {\\n        return \\"动作\\";\\n    }\\n\\n\\n    return \\"\\";\\n}\\n"}}', '{"description":"报文特征：\\n1、由4行组成的段落，中文字符的编码格式是海湾公司自己的私有编码\\n2、第1行（固定19+1字节）是是事件发生的时间和设备编码，其中年(8D)和月(8E)是私有中文编码，10�09�16:20  000000\\n3、第2行（固定100+1字节）的末尾，是告警类型特征，可以凭借这个特征，识别是哪个事件类型的大类\\n4、第3行（固定98+1字节）是告警的设备名称信息，中文字符的编码格式是海湾公司的私有编码，无法识别\\n5、第4行（固定2+1字节）是04 03 \\n--------------------------------------------------------------------------------------------------------------------------\\n\\n范例：\\n31 30 8D 30 39 8E 31 36 3A 32 37 20 20 30 30 30 30 30 30 0D--------------------》时间+设备\\n04 00 0F 60 04 04 FE 01 00 00 FF 15 15 15 55 95 7F 01 00 00 00 FF 04 08 07\\n22 12 4A 82 7F 02 0A 12 32 00 00 02 42 81 7F 04 44 24 14 0C FF 0C 14 24 66\\n24 00 00 00 00 FF 00 00 00 00 FF 08 08 08 0C 08 00 00 02 42 81 7F 04 44 24\\n14 0C FF 0C 14 24 66 24 00 00 00 00 FF 00 00 00 00 FF 08 08 08 0C 08 00 00 ----》类型特征信息\\n0D\\n0F 60 10 22 64 0C C0 44 54 54 54 7F 54 54 D6 44 40 00 00 FE 22 5A 86 40 20\\n50 4C C3 4C 50 20 40 40 00 10 10 10 FF 90 F0 A0 AE EA 0A EA AF A2 F0 20 00\\n80 40 20 F8 87 40 30 0F F8 88 88 C8 88 0C 08 00 10 10 10 FF 90 F0 A0 AE EA\\n0A EA AF A2 F0 20 00 80 40 20 F8 87 40 30 0F F8 88 88 C8 88 0C 08 00 0D\\n04 03 0D"}', 'include', 'record', 1, 2000, 1712903951637, 1713496903193),
	(1311, 'splitHandler', 'JB-TBL-EI8000S', '蚌埠依爱消防电子有限责任公司', 'JavaScript', 'channel', '{"decode":{"main":"decode","code":"/**\\n * 编码器的入口函数\\n * 全局参数：\\n *     message：hex string格式的接收数据\\n *              XX+[合法报文]+XXX，合法报文可能混杂在一堆其他数据之中\\n * 返回值：\\n *   从XXX+[合法报文]+XXX中，截取到的[合法报文]\\n */\\nfunction decode(message) {\\n    var startTag = \\"2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 0D\\";\\n    var endTag = \\"0D\\";\\n\\n    message = message.replace(/\\\\s+/g, \\"\\");\\n    startTag = startTag.replace(/\\\\s+/g, \\"\\");\\n    endTag = endTag.replace(/\\\\s+/g, \\"\\");\\n\\n\\n    // 转换成大写\\n    message = message.toUpperCase();\\n    startTag = startTag.toUpperCase();\\n    endTag = endTag.toUpperCase();\\n\\n    // 检测第1行\\n    var start = message.indexOf(startTag);\\n    if (start < 0) {\\n        return \\"\\";\\n    }\\n\\n    // 截断前面的数据\\n    message = message.substring(start, message.length);\\n\\n    // 根据换行符0D,查找有多少行\\n    var lns = indexCount(message, endTag);\\n    if (lns.length < 5) {\\n        return \\"\\";\\n    }\\n\\n    // 寻找数据\\n    for (var i = 0; i < lns.length - 4; i++) {\\n        var section = getSection(message, lns, i);\\n        if (section.length > 0) {\\n            return section;\\n        }\\n    }\\n\\n\\n    return \\"\\";\\n}\\n\\nfunction getSection(message, lns, offset) {\\n    var ln1 = lns[offset + 0] + 2;\\n    var ln2 = lns[offset + 1] + 2 - ln1;\\n    var ln3 = lns[offset + 2] + 2 - ln1 - ln2;\\n    var ln4 = lns[offset + 3] + 2 - ln1 - ln2 - ln3;\\n    var ln5 = lns[offset + 4] + 2 - ln1 - ln2 - ln3 - ln4;\\n\\n    // 检查：各行是否符合指定的长度\\n    if (ln1 !== 23 * 2 || ln2 !== 25 * 2 || ln3 !== 1 * 2 || ln4 !== 5 * 2 || ln5 !== 19 * 2) {\\n        return \\"\\";\\n    }\\n\\n    // 切行\\n    var line1 = message.substring(lns[offset + 0] - 23 * 2, lns[offset + 0] + 2);\\n    var line2 = message.substring(lns[offset + 0] + 2, lns[offset + 1] + 2);\\n    var line3 = message.substring(lns[offset + 1] + 2, lns[offset + 2] + 2);\\n    var line4 = message.substring(lns[offset + 2] + 2, lns[offset + 3] + 2);\\n    var line5 = message.substring(lns[offset + 3] + 2, lns[offset + 4] + 2);\\n\\n    // 检查：第1行，----------------------\\n    if (line1 !== \\"2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D0D\\") {\\n        return \\"\\";\\n    }\\n\\n    // 检查：第3行，时间行 2024年04月17日 11时05分\\n    if (line2.length !== 50) {\\n        return \\"\\";\\n    }\\n    if (line2.substring(0, 2) !== \\"0A\\") {\\n        return \\"\\";\\n    }\\n    if (line2.substring(10, 14) !== \\"C4EA\\") {\\n        return \\"\\";\\n    }\\n    if (line2.substring(18, 22) !== \\"D4C2\\") {\\n        return \\"\\";\\n    }\\n    if (line2.substring(26, 30) !== \\"C8D5\\") {\\n        return \\"\\";\\n    }\\n    if (line2.substring(30, 32) !== \\"20\\") {\\n        return \\"\\";\\n    }\\n    if (line2.substring(36, 40) !== \\"CAB1\\") {\\n        return \\"\\";\\n    }\\n    if (line2.substring(44, 48) !== \\"B7D6\\") {\\n        return \\"\\";\\n    }\\n\\n    // 第3行：空行\\n    if (line3 !== \\"0D\\") {\\n        return \\"\\";\\n    }\\n\\n    // 第4行：设备行\\n    var device = getAscii(line4.substring(0, line4.length - 2));\\n    device = device.replace(\\" \\", \\"\\");\\n\\n    // 是否符合10/09的格式\\n    var regex = /^\\\\d\\\\/\\\\d$/;\\n    if (!regex.test(device)) {\\n        return \\"\\";\\n    }\\n\\n    return message.substring(lns[offset + 0] - 23 * 2, lns[offset + 4] + 2);\\n}\\n\\nfunction indexCount(hexStr, hexTag, position) {\\n    // 默认值处理\\n    if (position == undefined) {\\n        position = 0;\\n    }\\n\\n    if (position % 2 !== 0) {\\n        return -1;\\n    }\\n\\n    var array = [];\\n\\n    var pos = position;\\n\\n    do {\\n        // 寻找标记\\n        pos = hexStr.indexOf(hexTag, pos);\\n        if (pos < 0) {\\n            break;\\n        }\\n\\n        // 检查：是否是错位，造成的误查\\n        if (pos % 2 !== 0) {\\n            // 纠正错位，并继续查找\\n            pos += 1;\\n            continue;\\n        }\\n\\n        // 没有错位的，才是真数据\\n        array.push(pos);\\n        pos += 2;\\n\\n    } while (true);\\n\\n    return array;\\n}\\n\\nfunction getAscii(hexStr) {\\n    var text = \\"\\";\\n    for (var i = 0; i < hexStr.length; i += 2) {\\n        text += String.fromCharCode(parseInt(hexStr[i] + hexStr[i + 1], 16));\\n    }\\n\\n    return text;\\n}\\n"}}', '{"description":"报文特征：\\n1、多行GB2312的中文文本\\n2、第1行：固定为----------------------\\n3、第2行：时间，例如：2024年04月17日 11时05分\\n4、第3行：空行\\n5、第4行：设备地址\\n6、第5行：告警类型\\n\\n范例：\\n2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 0D \\n0A 32 30 32 34 C4 EA 30 34 D4 C2 31 37 C8 D5 20 31 31 CA B1 30 35 B7 D6 0D\\n0D 31 2F 33 20 0D \\nCA D6 B6 AF B1 A8 BE AF B0 B4 C5 A5 B1 A8 BB F0 BE AF 0D \\n\\n转码：\\n----------------------\\n2024年04月17日 11时05分\\n\\n1/3 \\n手动报警按钮报火警\\n\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n测试报文1：\\n2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 0D 0A 32 30 32 34 C4 EA 30 34 D4 C2 31 37 C8 D5 20 31 31 CA B1 30 35 B7 D6 0D 0D 31 2F 33 20 0D CA D6 B6 AF B1 A8 BE AF B0 B4 C5 A5 B1 A8 BB F0 BE AF 0D \\n\\n中文：\\n----------------------\\n2024年04月17日 11时05分\\n\\n1/3 \\n手动报警按钮报火警\\n\\n"}', 'splitHandler', 'status', 1, 2000, 1703166735892, 1713519761677),
	(1312, 'libs', 'JB-TBL-EI8000S', '蚌埠依爱消防电子有限责任公司', 'JavaScript', 'device', '{"include":{"main":"include","code":"/**\\n * 按类型解码数据\\n *\\n * @param message 消息内容\\n * @returns {string|*[]} 数据\\n */\\nfunction decodeObj(message) {\\n    var lines = message.split(\'\\\\r\');\\n\\n    // 剔除空行\\n    lines = removeEmpty(lines);\\n    if (lines.length !== 4) {\\n        return \\"行数不等于4\\";\\n    }\\n\\n    var obj = {\\n        \\"recordType\\": \\"\\", \\"device\\": \\"\\", \\"datetime\\": \\"\\"\\n    };\\n\\n    obj.recordType = lines[3];\\n    obj.device = lines[2];\\n    obj.datetime = lines[1].substring(1,lines[1].length);\\n\\n    // 必须以列表格式返回\\n    var result = [];\\n    result.push(obj);\\n\\n    return result;\\n\\n}\\n\\nfunction removeEmpty(lines) {\\n    var dats = [];\\n    for (var i = 0; i < lines.length; i++) {\\n        var line = lines[i].replace(/\\\\u0000/g, \'\');\\n        if (line.length == 0) {\\n            continue;\\n        }\\n\\n        dats.push(line);\\n    }\\n\\n    return dats;\\n}\\n"}}', '{"description":"报文特征：\\n1、多行GB2312的中文文本\\n2、第1行：固定为----------------------\\n3、第2行：时间，例如：2024年04月17日 11时05分\\n4、第3行：空行\\n5、第4行：设备地址\\n6、第5行：告警类型\\n\\n范例：\\n2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 0D \\n0A 32 30 32 34 C4 EA 30 34 D4 C2 31 37 C8 D5 20 31 31 CA B1 30 35 B7 D6 0D\\n0D 31 2F 33 20 0D \\nCA D6 B6 AF B1 A8 BE AF B0 B4 C5 A5 B1 A8 BB F0 BE AF 0D \\n\\n转码：\\n----------------------\\n2024年04月17日 11时05分\\n\\n1/3 \\n手动报警按钮报火警\\n\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n测试报文1：\\n2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 0D 0A 32 30 32 34 C4 EA 30 34 D4 C2 31 37 C8 D5 20 31 31 CA B1 30 35 B7 D6 0D 0D 31 2F 33 20 0D CA D6 B6 AF B1 A8 BE AF B0 B4 C5 A5 B1 A8 BB F0 BE AF 0D \\n\\n中文：\\n----------------------\\n2024年04月17日 11时05分\\n\\n1/3 \\n手动报警按钮报火警\\n\\n"}', 'include', 'record', 1, 2000, 1712903951637, 1713520789755),
	(1313, '上报事件', 'JB-TBL-EI8000S', '蚌埠依爱消防电子有限责任公司', 'JavaScript', 'device', '{"decode":{"main":"decode","code":"/**\\n * 解码器的入口函数\\n * 全局参数：\\n *     fox_edge_data：json string格式 或者 hex string格式的接收数据\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   提供给通道的发送数据。根据不同的通道服务，它可能是HEX结构的文本，也可能是JSON结构的对象，请自行根据选定的通道服务进行确认\\n */\\nfunction decode() {\\n\\tvar object = decodeStr(fox_edge_data, fox_edge_param);\\n  return JSON.stringify(object);\\n}\\n\\n/**\\n * 事件解码器函数：消火栓按钮报火警\\n * 全局参数：\\n *     fox_edge_data：hex string格式的接收数据\\n *                    XXX+[合法报文]+XXX，合法报文可能混杂在一堆其他数据之中\\n *     fox_edge_param：json string格式的设备参数的合并对象\\n * 返回值：\\n *   必须是列表格式的JSON字符串，并且JSON对象必须包含关键字【recordType】，否则不给与入库\\n */\\nfunction decodeStr(message, device_param) {\\n    var result = decodeObj(message);\\n    return result;\\n}"}}', '{"description":"报文特征：\\n1、多行GB2312的中文文本\\n2、第1行：固定为----------------------\\n3、第2行：时间，例如：2024年04月17日 11时05分\\n4、第3行：空行\\n5、第4行：设备地址\\n6、第5行：告警类型\\n\\n范例：\\n2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 0D \\n0A 32 30 32 34 C4 EA 30 34 D4 C2 31 37 C8 D5 20 31 31 CA B1 30 35 B7 D6 0D\\n0D 31 2F 33 20 0D \\nCA D6 B6 AF B1 A8 BE AF B0 B4 C5 A5 B1 A8 BB F0 BE AF 0D \\n\\n转码：\\n----------------------\\n2024年04月17日 11时05分\\n\\n1/3 \\n手动报警按钮报火警\\n\\n\\n--------------------------------------------------------------------------------------------------------------------------\\n\\n测试报文1：\\n2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 0D 0A 32 30 32 34 C4 EA 30 34 D4 C2 31 37 C8 D5 20 31 31 CA B1 30 35 B7 D6 0D 0D 31 2F 33 20 0D CA D6 B6 AF B1 A8 BE AF B0 B4 C5 A5 B1 A8 BB F0 BE AF 0D \\n\\n中文：\\n----------------------\\n2024年04月17日 11时05分\\n\\n1/3 \\n手动报警按钮报火警\\n\\n"}', 'report', 'record', 1, 2000, 1712829661152, 1713520227453);

-- 正在导出表  fox_edge.tb_operate_channel_task 的数据：~27 rows (大约)
DELETE FROM `tb_operate_channel_task`;
INSERT INTO `tb_operate_channel_task` (`id`, `task_name`, `channel_name`, `channel_type`, `task_param`, `send_mode`, `timeout`, `create_time`, `update_time`) VALUES
	(5, '1', 'channel-simulator', 'simulator', '{"sendTxt": "46 49 4E 53 00 00 00 1A 00 00 00 02 00 00 00 00 80 00 02 00 0A 00 00 71 00 FF 01 01 B1 00 0A 00 00 01"}', 'exchange', 2000, 1669110542772, 1699694987750),
	(6, '2', 'slaver1', 'iec104-master', '{"sendMap": {"asdu": {"cot": {"pn": true, "addr": 0, "test": false, "reason": 6}, "vsq": {"sq": false, "num": 0}, "data": "00 00 00 14 ", "typeId": 100, "commonAddress": 1}, "control": {"cmd": null, "send": 0, "type": "I_FORMAT", "accept": 0}, "waitEndFlag": [10]}}', 'exchange', 1111, 1669110542772, 1669116919022),
	(7, '21', 'slaver1', 'iec104-master', '{"sendMap": {"asdu": {"cot": {"pn": true, "addr": 0, "test": false, "reason": 6}, "vsq": {"sq": false, "num": 0}, "data": "00 00 00 14 ", "typeId": 100, "commonAddress": 1}, "control": {"cmd": null, "send": 0, "type": "I_FORMAT", "accept": 0}, "waitEndFlag": [10]}}', 'exchange', 2000, 1669116951025, 1669116951025),
	(12, 'snmpv2', '192.168.1.21', 'snmp', '{"sendMap": {"oids": ["1.3.6.1.6.3.10.2.1.2.0", "1.3.6.1.6.3.10.2.1.3.0"], "operate": "GET"}}', 'exchange', 2000, 1676466262419, 1676516034873),
	(14, 'Linux-COM1 测试任务', 'Linux COM1', 'serialport', '{"sendTxt": "68 11 11 11 53 12 35 68 01 02 43 C3 A6 16 "}', 'exchange', 10000, 1678181666749, 1700137057628),
	(15, 'Win32 COM1测试任务', 'Win32 COM1', 'serialport', '{"sendTxt": "01 04 00 00 00 06 70 08  "}', 'exchange', 2000, 1678181846835, 1698150799041),
	(16, 'Linux-COM2 测试任务', 'Linux COM2', 'serialport', '{"sendTxt": "68 11 11 11 53 12 35 68 01 02 43 C3 A6 16 "}', 'exchange', 2000, 1678363816384, 1698039079652),
	(17, 'MQTT测试任务', '/v1/device/request/12345', 'mqtt_client', '{"sendTxt": "FE0068AAAAAAAAAAAA68010253C3E516"}', 'exchange', 2000, 1681808636212, 1681825716987),
	(19, 'OPC UA-browseTree', 'channel-opc-ua-2', 'opc-ua', '{"sendMap": {"operate": "browseTree"}}', 'exchange', 50000, 1688980602167, 1697533220397),
	(20, 'OPC UA-browseChildValue', 'channel-opc-ua-2', 'opc-ua', '{"sendMap": {"nodeId": {"namespace": 3, "identifier": "85/0:Simulation"}, "operate": "browseChildValue"}}', 'exchange', 5000, 1689000214448, 1689045295166),
	(21, 'OPC UA-browseChild', 'channel-opc-ua-2', 'opc-ua', '{"sendMap": {"nodeId": {"namespace": 3, "identifier": "85/0:Simulation"}, "operate": "browseChild"}}', 'exchange', 5000, 1689002438971, 1689045278570),
	(22, '中科图灵-空气六合一', '中科图灵空气六合一', 'tcp-server', '{"sendTxt": "24241828131D467F0053009000a9006400bb019a000200aa "}', 'publish', 2000, 1694422235922, 1694422235922),
	(23, '中科图灵-空气五合一', '中科图灵空气五合一', 'tcp-server', '{"sendTxt": "24240138867572058700527898611212450141741910058009b00b30064b60AA"}', 'publish', 2000, 1694514268964, 1694514296975),
	(24, 'udp测试', 'Udp空气六合一', 'udp-server', '{"sendTxt": "24241828131D467F0053009000a9006400bb019a000200aa"}', 'publish', 2000, 1694698140477, 1694698350206),
	(25, 'modbus2', 'channel-simulator', 'simulator', '{"sendTxt": " 01 03 00 45 00 02 14 1E "}', 'exchange', 2000, 1694832962041, 1694833254305),
	(26, 'ZS-SHT30-1T-1H-485', 'Win32 COM3', 'serialport', '{"sendTxt": "01 04 00 00 00 06 70 08 "}', 'exchange', 2000, 1695390288950, 1695390311914),
	(27, 'tcp-client-test', '192.168.2.80:9527', 'tcp-client', '{"sendTxt": "00 71 00 00 00 06 01 03 00 00 00 0A "}', 'exchange', 2000, 1695558148470, 1695801953740),
	(28, 'test-fant', 'channel-simulator', 'simulator', '{"sendTxt": "0A 03 01 30 00 03 05 43"}', 'exchange', 2000, 1696077604868, 1696077625179),
	(31, '西门子-S7-readData', '西门子-S7-PLC-1', 's7plc', '{"sendMap": {"method": "readData", "params": [{"address": "DB1.0.1", "dataType": "BOOL"}, {"address": "DB1.4", "dataType": "UINT16"}, {"address": "DB1.20", "dataType": "FLOAT64"}, {"count": 3, "address": "DB1.28", "dataType": "BYTE"}, {"count": 5, "address": "DB1.31", "dataType": "STRING"}, {"count": 1, "address": "DB1.43", "dataType": "TIME"}]}}', 'exchange', 2000, 1696823959938, 1696835581451),
	(32, '西门子-S7-writeData', '西门子-S7-PLC-1', 's7plc', '{"sendMap": {"method": "writeData", "params": [{"value": true, "address": "DB1.0.1", "dataType": "BOOL"}, {"value": 42767, "address": "DB1.4", "dataType": "UINT16"}, {"value": 4.15, "address": "DB1.20", "dataType": "FLOAT64"}, {"value": "01 02 03", "address": "DB1.28", "dataType": "BYTE"}, {"value": "1234567890", "address": "DB1.31", "dataType": "STRING"}]}}', 'exchange', 2000, 1696824037572, 1696826315940),
	(33, 'DLT645 1997 REDATA (当前)正向有功总电能"', 'Win32 COM2', 'serialport', '{"sendTxt": "fe 68 11 11 11 53 12 35 68 01 02 43 c3 a6 16"}', 'exchange', 2000, 1698065824961, 1698065824961),
	(34, 'TCP监听通道', 'Tcp-Client', 'tcp-client', '{"sendTxt": "00 06 00 00 00 06 01 03 00 00 00 0A"}', 'publish', 2000, 1699022887333, 1699355265867),
	(37, '506', '配置范例：半双工TCP客户端506', 'tcp-client', '{"sendTxt": "00 06 00 00 00 06 01 03 00 00 00 0A"}', 'exchange', 2000, 1701851752916, 1701851846891),
	(38, '505', '配置范例：半双工TCP客户端505', 'tcp-client', '{"sendTxt": "00 06 00 00 00 06 01 03 00 00 00 0A"}', 'exchange', 2000, 1701851821204, 1701851838584),
	(39, 'QD6000', 'channel-simulator', 'simulator', '{"sendTxt": " 01 03 00 00 00 01 84 0A  "}', 'exchange', 2000, 1704283634369, 1704283672260),
	(40, '测试任务：海康威视', '配置范例：海康威视-消防', 'hikvision-fire', '{"sendTxt": "    "}', 'publish', 2000, 1705051783088, 1705051783088),
	(41, '测试认为：海尔空调-YCJ-A000', 'channel-simulator', 'simulator', '{"sendTxt": " f4 f5 06 00 00 00 00 00 06 fb"}', 'exchange', 2000, 1709271318693, 1709271342037);

-- 正在导出表  fox_edge.tb_operate_manual_task 的数据：~66 rows (大约)
DELETE FROM `tb_operate_manual_task`;
INSERT INTO `tb_operate_manual_task` (`id`, `task_name`, `device_name`, `device_type`, `manufacturer`, `task_param`, `create_time`, `update_time`) VALUES
	(5, '格丹纳消解仪-检查设备状态', '广州格丹纳全自动消解控制器', '全自动消解控制器', '广州格丹纳仪器有限公司', '[{"param": {"设备地址": 227204, "子设备地址": 3}, "timeout": 2000, "deviceName": "广州格丹纳全自动消解控制器", "deviceType": "全自动消解控制器", "operateMode": "exchange", "operateName": "检查设备状态"}]', 1669120761777, 1669382010179),
	(6, '格丹纳消解仪-复位电机', '广州格丹纳全自动消解控制器', '全自动消解控制器', '广州格丹纳仪器有限公司', '[{"param": {"电机类型": "Y轴电机", "设备地址": 227204, "子设备地址": 3}, "timeout": 2000, "deviceName": "广州格丹纳全自动消解控制器", "operateMode": "exchange", "operateName": "复位电机"}]', 1669122315791, 1669294895195),
	(7, '格丹纳消解仪-操作支架', '广州格丹纳全自动消解控制器', '全自动消解控制器', '广州格丹纳仪器有限公司', '[{"param": {"标记": "抬升", "支架编号": 1, "设备地址": 227204, "子设备地址": 3}, "timeout": 2000, "deviceName": "广州格丹纳全自动消解控制器", "operateMode": "exchange", "operateName": "操作支架"}]', 1669122397592, 1669294857127),
	(8, '格丹纳消解仪-添加样本', '广州格丹纳全自动消解控制器', '全自动消解控制器', '广州格丹纳仪器有限公司', '[{"param": {"孔位参数": [{"体积": 100, "孔位": 1, "试剂通道": 1}], "设备地址": 227204, "速度档位": 5, "子设备地址": 3}, "timeout": 2000, "deviceName": "广州格丹纳全自动消解控制器", "deviceType": "全自动消解控制器", "operateMode": "exchange", "operateName": "添加样本"}]', 1669122543702, 1669381917487),
	(9, 'BASS260ZJ-读取刷卡记录', '浙江移动-丽水移动-丹霞山5号基站-4号电源设备:623', 'BASS260ZJ', '广东高新兴', '[{"param": {}, "timeout": 2002, "deviceName": "浙江移动-丽水移动-丹霞山5号基站-4号电源设备:623", "deviceType": "BASS260ZJ", "operateMode": "exchange", "operateName": "读取刷卡记录"}]', 1669209235131, 1669895311929),
	(10, 'BASS260ZJ-读取告警状态', '浙江移动-丽水移动-丹霞山5号基站-4号电源设备:623', 'BASS260ZJ', '广东高新兴', '[{"param": {}, "timeout": 2001, "deviceName": "浙江移动-丽水移动-丹霞山5号基站-4号电源设备:623", "deviceType": "BASS260ZJ", "operateMode": "exchange", "operateName": "读取告警状态"}]', 1669209360362, 1669894945811),
	(13, '欧姆龙-读取数据', '欧姆龙FINS设备', 'omron-fins', 'omron', '[{"param": {"CNT": 1, "DA1": 10, "FMT": "Short", "GCT": 2, "ICF": "80", "SA1": 113, "SID": 255, "AREA": "B1", "BADR": 0, "NAME": "数值", "WADR": 10}, "timeout": 2000, "deviceName": "欧姆龙FINS设备", "deviceType": "omron-fins", "operateMode": "exchange", "operateName": "Read Data"}]', 1669431962066, 1669431962066),
	(14, 'ZXDU58-获取交流系统告警状态', '浙江移动-丽水移动-丹霞山5号基站-4号电源设备', 'ZXDU58', '中兴通讯', '[{"param": {}, "timeout": 2000, "deviceName": "浙江移动-丽水移动-丹霞山5号基站-4号电源设备", "deviceType": "ZXDU58", "operateMode": "exchange", "operateName": "获取交流系统告警状态"}]', 1669460591660, 1669461670343),
	(15, 'ZXDU58-获取交流系统开关输入状态', '浙江移动-丽水移动-丹霞山5号基站-4号电源设备', 'ZXDU58', '中兴通讯', '[{"param": {}, "timeout": 2000, "deviceName": "浙江移动-丽水移动-丹霞山5号基站-4号电源设备", "deviceType": "ZXDU58", "operateMode": "exchange", "operateName": "获取交流系统开关输入状态"}]', 1669461715255, 1669461715255),
	(16, 'ZXDU58-获取交流系统模拟量量化数据', '浙江移动-丽水移动-丹霞山5号基站-4号电源设备', 'ZXDU58', '中兴通讯', '[{"param": {}, "timeout": 2000, "deviceName": "浙江移动-丽水移动-丹霞山5号基站-4号电源设备", "deviceType": "ZXDU58", "operateMode": "exchange", "operateName": "获取交流系统模拟量量化数据"}]', 1669461751269, 1669461751269),
	(17, 'ZXDU58-获取整流系统模拟量量化数据', '浙江移动-丽水移动-丹霞山5号基站-4号电源设备', 'ZXDU58', '中兴通讯', '[{"param": {}, "timeout": 2000, "deviceName": "浙江移动-丽水移动-丹霞山5号基站-4号电源设备", "deviceType": "ZXDU58", "operateMode": "exchange", "operateName": "获取整流系统模拟量量化数据"}]', 1669461792343, 1669461792343),
	(18, 'CE+T UPS-获取告警数据', 'CE+T UPS设备-1', 'CE+T UPS', '深圳安圣电气有限公司', '[{"param": {}, "timeout": 2000, "deviceName": "CE+T UPS设备-1", "deviceType": "CE+T UPS", "operateMode": "exchange", "operateName": "Read Alarms And Events Table"}]', 1669464110850, 1670337746779),
	(19, 'CE+T UPS-获取测量数据', 'CE+T UPS设备-1', 'CE+T UPS', '深圳安圣电气有限公司', '[{"param": {}, "timeout": 2000, "deviceName": "CE+T UPS设备-1", "deviceType": "CE+T UPS", "operateMode": "exchange", "operateName": "Read System Measures Table"}]', 1669464164351, 1670337718067),
	(24, 'LRW单板-查询设备版本', 'LRW单板', 'LRW解码器', '', '[{"param": {}, "timeout": 2000, "deviceName": "LRW单板", "deviceType": "LRW解码器", "operateMode": "exchange", "operateName": "检查版本号"}]', 1669466376036, 1679386302322),
	(26, 'DLT645-读取设备数据-(当前)正向有功总电能', 'DLT645设备-01', 'DLT645 v1997', 'Fox Edge', '[{"param": {"tableName": "DLT645-v1997/v1/1.0.0/DLT645-1997.csv", "objectName": "(当前)正向有功总电能", "deviceAddress": "351253111111"}, "timeout": 2000, "deviceName": "DLT645设备-01", "deviceType": "DLT645 v1997", "operateMode": "exchange", "operateName": "读数据"}]', 1669636234406, 1694166522580),
	(27, 'DLT645-读取设备数据-(当前)反向有功总电能', 'DLT645设备-01', 'DLT645 v1997', 'Fox Edge', '[{"param": {"tableName": "DLT645-v1997/v1/1.0.0/DLT645-1997.csv", "objectName": "(当前)反向有功总电能", "deviceAddress": "351253111111"}, "timeout": 2000, "deviceName": "DLT645设备-01", "deviceType": "DLT645 v1997", "operateMode": "exchange", "operateName": "读数据"}]', 1669636305482, 1694166409204),
	(28, 'ModBus设备', 'Win32 COM3', 'ModBus Device', 'Fox Edge', '[{"param": {"regCnt": 69, "devAddr": 1, "regAddr": 1070, "tableName": "ModBus/v1/101.CETUPS_Read System Measures Table.csv", "modbusMode": "RTU", "operateName": "Read Holding Register", "templateName": "Read System Measures Table"}, "timeout": 2000, "deviceName": "Win32 COM3", "deviceType": "ModBus Device", "operateMode": "exchange", "operateName": "Read Holding Register", "manufacturer": "Fox Edge"}]', 1669640531371, 1704285503676),
	(30, 'ZXDU58-获取整流系统模拟量量化数据1', '浙江移动-丽水移动-丹霞山5号基站-4号电源设备', 'ZXDU58', '中兴通讯', '[{"param": {}, "timeout": 2000, "deviceName": "浙江移动-丽水移动-丹霞山5号基站-4号电源设备", "deviceType": "ZXDU58", "operateMode": "exchange", "operateName": "获取整流系统模拟量量化数据"}]', 1670116758075, 1670116758075),
	(31, 'SNMP设备-读数据', 'SNMP设备-21', 'SNMP Device', 'Fox Edge', '[{"param": {"tableName": "snmp/v1/1.0.0/101.SNMP_MIB_Default_Table.csv", "templateName": "Read Data", "objectNameList": ["CPU负载(1分钟)", "CPU负载(5分钟)", "CPU负载(15分钟)", "总交换大小", "可用交换空间", "机器内存总量", "使用的总RAM", "总可用RAM", "共享的RAM总量", "缓冲的总RAM", "系统运行时间"]}, "timeout": 2000, "deviceName": "SNMP设备-21", "deviceType": "SNMP Device", "operateMode": "exchange", "operateName": "读数据"}]', 1676543030536, 1694166781451),
	(32, 'CJT188设备-读表数据', 'CJT188设备-01', 'CJT188', 'Fox Edge', '[{"param": {"type": 16, "address": "01 00 00 05 08 00 00"}, "timeout": 2000, "deviceName": "CJT188设备-01", "deviceType": "CJT188", "operateMode": "exchange", "operateName": "读表数据"}]', 1677307752381, 1677333405240),
	(34, 'OPC-UA设备-读子节点数值', 'Prosys-OPC-UA-Simulation', 'OPC-UA', 'Fox Edge', '[{"param": {"tableName": "fox-edge-opc-ua/v1/1.0.0/101.OPC_UA_ReadNode Table.csv", "objectName": "Simulation", "templateName": "读子节点数值"}, "timeout": 2000, "deviceName": "Prosys-OPC-UA-Simulation", "deviceType": "OPC-UA", "operateMode": "exchange", "operateName": "读子节点数值"}]', 1689062693675, 1697531910730),
	(35, 'ModBus-Read Holding Register', 'Win32 COM3', 'ModBus Device', 'Fox Edge', '[{"param": {"regCnt": 69, "devAddr": 1, "regAddr": 1070, "tableName": "ModBus/v1/101.CETUPS_Read System Measures Table.csv", "modbusMode": "RTU", "operateName": "Read Holding Register", "templateName": "Read System Measures Table"}, "timeout": 2000, "deviceName": "Win32 COM3", "deviceType": "ModBus Device", "operateMode": "exchange", "operateName": "Read Holding Register", "manufacturer": "Fox Edge"}]', 1689146946704, 1704285496252),
	(36, 'ModBus-Read Input Register', 'Win32 COM3', '温湿度采集模块(ZS-SHT30-1T-1H-485)', '中盛科技', '[{"param": {"devAddr": 1, "modbusMode": "RTU", "operateName": "读取温湿度"}, "timeout": 2000, "deviceName": "Win32 COM3", "deviceType": "温湿度采集模块(ZS-SHT30-1T-1H-485)", "operateMode": "exchange", "operateName": "读取温湿度"}]', 1689147016034, 1689167832472),
	(38, '新的ModBus任务', '新的ModBus设备', 'ModBus Device', 'Fox Edge', '[{"param": {"regCnt": 2, "devAddr": 1, "regAddr": 69, "tableName": "modbus/v1/101.CETUPS_Read System Measures Table.csv", "modbusMode": "TCP", "operateName": "Read Holding Register", "templateName": "Read System Measures Table"}, "timeout": 2000, "deviceName": "新的ModBus设备", "deviceType": "ModBus Device", "operateMode": "exchange", "operateName": "Read Holding Register", "manufacturer": "Fox Edge"}]', 1694833905514, 1704285489003),
	(40, 'DOBOT-MG400-按键1', 'DOBOT-MG400', 'ModBus Device', 'Fox Edge', '[{"param": {"tableName": "dobot-mg400/v1/Holding Registers.csv", "objectName": "按键", "objectValue": 1, "templateName": "DOBOT-MG400 Write Holding Registers"}, "timeout": 2000, "deviceName": "DOBOT-MG400", "deviceType": "ModBus Device", "operateMode": "exchange", "operateName": "Write Single Register", "manufacturer": "Fox Edge"}]', 1695544313345, 1704285479563),
	(41, 'DOBOT-MG400-按键2', 'DOBOT-MG400', 'ModBus Device', 'Fox Edge', '[{"param": {"tableName": "dobot-mg400/v1/Holding Registers.csv", "objectName": "按键", "objectValue": 2, "templateName": "DOBOT-MG400 Write Holding Registers"}, "timeout": 2000, "deviceName": "DOBOT-MG400", "deviceType": "ModBus Device", "operateMode": "exchange", "operateName": "Write Single Register", "manufacturer": "Fox Edge"}]', 1695544332753, 1704285458363),
	(42, 'DOBOT-MG400-系统:启动', 'DOBOT-MG400', 'ModBus Device', 'Fox Edge', '[{"param": {"tableName": "dobot-mg400/v1/Coil Status.csv", "objectName": "启动", "objectValue": true, "templateName": "DOBOT-MG400 Write Coil Status"}, "timeout": 2000, "deviceName": "DOBOT-MG400", "deviceType": "ModBus Device", "operateMode": "exchange", "operateName": "Write Single Status", "manufacturer": "Fox Edge"}]', 1695545014182, 1704285450541),
	(44, 'DOBOT-MG400-读取线圈状态', 'DOBOT-MG400', 'ModBus Device', 'Fox Edge', '[{"param": {"regCnt": 7, "regAddr": 0, "tableName": "dobot-mg400/v1/Coil Status.csv", "templateName": "DOBOT-MG400 Read Coil Status"}, "timeout": 2000, "deviceName": "DOBOT-MG400", "deviceType": "ModBus Device", "operateMode": "exchange", "operateName": "Read Coil Status", "manufacturer": "Fox Edge"}]', 1695548068341, 1704285442994),
	(45, 'DOBOT-MG400-读取离散输入状态', 'DOBOT-MG400', 'ModBus Device', 'Fox Edge', '[{"param": {"regCnt": 7, "regAddr": 0, "tableName": "dobot-mg400/v1/Discrete Inputs Status.csv", "templateName": "DOBOT-MG400 Discrete Inputs Status"}, "timeout": 2000, "deviceName": "DOBOT-MG400", "deviceType": "ModBus Device", "operateMode": "exchange", "operateName": "Read Discrete Inputs Status", "manufacturer": "Fox Edge"}]', 1695548472950, 1704285435103),
	(46, 'DOBOT-MG400-读取保持寄存器', 'DOBOT-MG400', 'ModBus Device', 'Fox Edge', '[{"param": {"regCnt": 1, "regAddr": 3095, "tableName": "dobot-mg400/v1/Holding Registers.csv", "templateName": "DOBOT-MG400 Read Holding Register"}, "timeout": 2000, "deviceName": "DOBOT-MG400", "deviceType": "ModBus Device", "operateMode": "exchange", "operateName": "Read Holding Register", "manufacturer": "Fox Edge"}]', 1695548850852, 1704285427664),
	(47, 'test-yy', 'test-yy', 'ModBus Device', 'Fox Edge', '[{"param": {"sn": 1, "regCnt": 1, "devAddr": 1, "regAddr": 0, "tableName": "yangyang/v1/102.CETUPS_Read System Measures Table.csv", "modbusMode": "TCP", "templateName": "Read System Measures Table"}, "timeout": 2000, "deviceName": "test-yy", "deviceType": "ModBus Device", "operateMode": "exchange", "operateName": "Read Holding Register", "manufacturer": "Fox Edge"}]', 1695802481749, 1704285420085),
	(48, 'fant-test', 'fant', 'ModBus Device', 'Fox Edge', '[{"param": {"sn": 1, "regCnt": 3, "regAddr": 304, "tableName": "fant-7120/v1/Holding Registers.csv", "modbusMode": "RTU", "templateName": "Read System Measures Table"}, "timeout": 2000, "deviceName": "fant", "deviceType": "ModBus Device", "operateMode": "exchange", "operateName": "Read Holding Register", "manufacturer": "Fox Edge"}]', 1696077839309, 1704285411936),
	(49, 'S7 PLC读数据', 'S7 PLC', 'S7 PLC', 'Siemens', '[{"param": {"tableName": "s7plc-s1200/v1/1.0.0/ReadData.csv", "objectNames": ["数据测量点1", "数据测量点2", "数据测量点3", "数据测量点4", "数据测量点5", "数据测量点6"], "templateName": "Read Data"}, "timeout": 2000, "deviceName": "S7 PLC", "deviceType": "S7 PLC", "operateMode": "exchange", "operateName": "readData"}]', 1696854400850, 1696908904700),
	(50, 'S7 PLC写数据', 'S7 PLC', 'S7 PLC', 'Siemens', '[{"param": {"tableName": "s7plc-s1200/v1/1.0.0/ReadData.csv", "objectValues": {"数据测量点1": true, "数据测量点2": 42767, "数据测量点3": 4.15, "数据测量点4": "01 02 03", "数据测量点5": "1234567890", "数据测量点6": 12}, "templateName": "Write Data"}, "timeout": 2000, "deviceName": "S7 PLC", "deviceType": "S7 PLC", "operateMode": "exchange", "operateName": "writeData"}]', 1696907693104, 1696909857220),
	(57, 'ModBus-Slave-Tcp', 'ModSim32', 'ModBus Device', 'Fox Edge', '[{"param": {"regCnt": 1, "regAddr": 3095, "tableName": "dobot-mg400/v1/Holding Registers.csv", "templateName": "DOBOT-MG400 Read Holding Register"}, "timeout": 2000, "deviceName": "ModSim32", "deviceType": "ModBus Device", "operateMode": "exchange", "operateName": "Read Coil Status", "manufacturer": "Fox Edge"}]', 1699516225446, 1704285402402),
	(58, 'DOBOT-MG400-TCP-测试', 'DOBOT-MG400-TCP', 'ModBus Device', 'Fox Edge', '[{"param": {"regCnt": 1, "regAddr": 3095, "tableName": "dobot-mg400/v1/Holding Registers.csv", "templateName": "DOBOT-MG400 Read Holding Register"}, "timeout": 2000, "deviceName": "DOBOT-MG400-TCP", "deviceType": "ModBus Device", "operateMode": "exchange", "operateName": "Read Coil Status", "manufacturer": "Fox Edge"}]', 1699516437330, 1704285386909),
	(61, '范例1：JSP引擎测试', '范例1：JSP测试设备', '基站电源-ABC', '华为技术有限公司', '[{"param": {"regCnt": 1, "regAddr": 3095, "tableName": "dobot-mg400/v1/1.0.0/Holding Registers.csv", "templateName": "DOBOT-MG400 Read Holding Register"}, "timeout": 2000, "deviceName": "范例1：JSP测试设备", "deviceType": "基站电源-ABC", "operateMode": "exchange", "operateName": "范例1：读取当前工作电压", "manufacturer": "华为技术有限公司"}]', 1699626081082, 1699953878351),
	(62, 'QD6000', '范例：QD6000', 'ModBus Device', 'Fox Edge', '[{"param": {"regCnt": 1, "devAddr": 1, "regAddr": 0, "tableName": "QD6000/v1/Holding Registers.csv", "modbusMode": "RTU", "operateName": "Read Holding Register", "templateName": "QD6000 Holding Registers"}, "timeout": 2000, "deviceName": "范例：QD6000", "deviceType": "ModBus Device", "operateMode": "exchange", "operateName": "Read Holding Register", "manufacturer": "Fox Edge"}]', 1704284119170, 1704284723350),
	(66, '范例：海尔空调-YCJ-A0-查询系统监视状态', '范例：海尔空调-YCJ-A0', '海尔空调-YCJ-A000', '海尔集团公司', '[{"param": {"devAddr": 0}, "timeout": 2000, "deviceName": "范例：海尔空调-YCJ-A0", "deviceType": "海尔空调-YCJ-A000", "operateMode": "exchange", "operateName": "查询系统监视状态", "manufacturer": "海尔集团公司"}]', 1709273227885, 1709273315027),
	(67, '范例：海尔空调-YCJ-A0-查询控制状态监视', '范例：海尔空调-YCJ-A0', '海尔空调-YCJ-A000', '海尔集团公司', '[{"param": {"devAddr": 0}, "timeout": 2000, "deviceName": "范例：海尔空调-YCJ-A0", "deviceType": "海尔空调-YCJ-A000", "operateMode": "exchange", "operateName": "查询控制状态监视", "manufacturer": "海尔集团公司"}]', 1709273263936, 1709273323820),
	(68, '范例：海尔空调-YCJ-A0-控制', '范例：海尔空调-YCJ-A0', '海尔空调-YCJ-A000', '海尔集团公司', '[{"param": {"mode": "自动模式", "open": false, "temp": 0, "speed": "超高速", "damper": false, "devAddr": 0}, "timeout": 2000, "deviceName": "范例：海尔空调-YCJ-A0", "deviceType": "海尔空调-YCJ-A000", "operateMode": "exchange", "operateName": "控制", "manufacturer": "海尔集团公司"}]', 1709273759298, 1709274424396),
	(69, '范例：TCL柜式空调(KPRd)-查询运行状态', '范例：TCL柜式空调(KPRd)', '柜式空调(KPRd)', 'TCL科技集团股份有限公司', '[{"param": {"devAddr": 0}, "timeout": 2000, "deviceName": "范例：TCL柜式空调(KPRd)", "deviceType": "柜式空调(KPRd)", "operateMode": "exchange", "operateName": "查询运行状态", "manufacturer": "TCL科技集团股份有限公司"}]', 1711101568170, 1711101587279),
	(70, '范例：TCL柜式空调(KPRd)-开关空调', '范例：TCL柜式空调(KPRd)', '柜式空调(KPRd)', 'TCL科技集团股份有限公司', '[{"param": {"运行": true, "devAddr": 0}, "timeout": 2000, "deviceName": "范例：TCL柜式空调(KPRd)", "deviceType": "柜式空调(KPRd)", "operateMode": "exchange", "operateName": "用户开关空调", "manufacturer": "TCL科技集团股份有限公司"}]', 1711110056356, 1711110811608),
	(71, '范例：TCL柜式空调(KPRd)-设置运行状态', '范例：TCL柜式空调(KPRd)', '柜式空调(KPRd)', 'TCL科技集团股份有限公司', '[{"param": {"模式": "自动", "运行": true, "风向": true, "风量": "自动", "devAddr": 0, "温度补偿": 0, "设定温度": 24}, "timeout": 2000, "deviceName": "范例：TCL柜式空调(KPRd)", "deviceType": "柜式空调(KPRd)", "operateMode": "exchange", "operateName": "设置运行状态", "manufacturer": "TCL科技集团股份有限公司"}]', 1711110349641, 1711111086337),
	(73, '范例（ModBus）：建大仁科-1号继电器断开', '范例（ModBus）：建大仁科', 'ModBus Device', 'Fox Edge', '[{"param": {"tableName": "rkckth-rs-m88/v1/Holding Registers.csv", "objectName": "1号继电器", "objectValue": 0, "templateName": "rkckth-rs-m88 Write Holding Registers"}, "timeout": 2000, "deviceName": "范例（ModBus）：建大仁科", "deviceType": "ModBus Device", "operateMode": "exchange", "operateName": "Write Single Register", "manufacturer": "Fox Edge"}]', 1711335561396, 1711335718571),
	(74, '范例（ModBus）：建大仁科-1号继电器吸合', '范例（ModBus）：建大仁科', 'ModBus Device', 'Fox Edge', '[{"param": {"tableName": "rkckth-rs-m88/v1/Holding Registers.csv", "objectName": "1号继电器", "objectValue": 1, "templateName": "rkckth-rs-m88 Write Holding Registers"}, "timeout": 2000, "deviceName": "范例（ModBus）：建大仁科", "deviceType": "ModBus Device", "operateMode": "exchange", "operateName": "Write Single Register", "manufacturer": "Fox Edge"}]', 1711335596344, 1711335596344),
	(75, '	 范例（ModBus）：建大仁科-读输入点1~8', '范例（ModBus）：建大仁科', 'ModBus Device', 'Fox Edge', '[{"param": {"regCnt": 8, "regAddr": 16, "tableName": "rkckth-rs-m88/v1/Holding Registers.csv", "templateName": "rkckth-rs-m88 Read Holding Registers"}, "timeout": 2000, "deviceName": "范例（ModBus）：建大仁科", "deviceType": "ModBus Device", "operateMode": "exchange", "operateName": "Read Holding Register", "manufacturer": "Fox Edge"}]', 1711336441943, 1711807593535),
	(79, '范例：海悟空调-获取厂家信息', '范例：海悟基站空调', '基站空调(V1.00)', '广东海悟科技有限公司', '[{"param": {"devAddr": 1}, "timeout": 2000, "deviceName": "范例：海悟基站空调", "deviceType": "基站空调(V1.00)", "operateMode": "exchange", "operateName": "获取厂家信息", "manufacturer": "广东海悟科技有限公司"}]', 1711803217404, 1711803487671),
	(80, '范例：海悟空调-获取告警状态', '范例：海悟基站空调', '基站空调(V1.00)', '广东海悟科技有限公司', '[{"param": {"devAddr": 1}, "timeout": 2000, "deviceName": "范例：海悟基站空调", "deviceType": "基站空调(V1.00)", "operateMode": "exchange", "operateName": "获取告警状态", "manufacturer": "广东海悟科技有限公司"}]', 1711803544611, 1711803544611),
	(81, '范例：海悟空调-获取系统参数（定点数）', '范例：海悟基站空调', '基站空调(V1.00)', '广东海悟科技有限公司', '[{"param": {"devAddr": 1}, "timeout": 2000, "deviceName": "范例：海悟基站空调", "deviceType": "基站空调(V1.00)", "operateMode": "exchange", "operateName": "获取系统参数（定点数）", "manufacturer": "广东海悟科技有限公司"}]', 1711803582144, 1711803582144),
	(82, '范例：海悟空调-获取开关状态', '范例：海悟基站空调', '基站空调(V1.00)', '广东海悟科技有限公司', '[{"param": {"devAddr": 1}, "timeout": 2000, "deviceName": "范例：海悟基站空调", "deviceType": "基站空调(V1.00)", "operateMode": "exchange", "operateName": "获取开关状态", "manufacturer": "广东海悟科技有限公司"}]', 1711803621660, 1711803621660),
	(83, '范例：海悟空调-获取模拟量（定点数）', '范例：海悟基站空调', '基站空调(V1.00)', '广东海悟科技有限公司', '[{"param": {"devAddr": 1}, "timeout": 2000, "deviceName": "范例：海悟基站空调", "deviceType": "基站空调(V1.00)", "operateMode": "exchange", "operateName": "获取模拟量（定点数）", "manufacturer": "广东海悟科技有限公司"}]', 1711803674368, 1711803674368),
	(84, '范例：海悟空调-读取版本号', '范例：海悟基站空调', '基站空调(V1.00)', '广东海悟科技有限公司', '[{"param": {"devAddr": 1}, "timeout": 2000, "deviceName": "范例：海悟基站空调", "deviceType": "基站空调(V1.00)", "operateMode": "exchange", "operateName": "读取版本号", "manufacturer": "广东海悟科技有限公司"}]', 1711803792370, 1711803792370),
	(85, '范例：海悟空调-设定系统参数（定点数）', '范例：海悟基站空调', '基站空调(V1.00)', '广东海悟科技有限公司', '[{"param": {"type": "空调开机温度", "value": 26, "devAddr": 1}, "timeout": 2000, "deviceName": "范例：海悟基站空调", "deviceType": "基站空调(V1.00)", "operateMode": "exchange", "operateName": "设定系统参数（定点数）", "manufacturer": "广东海悟科技有限公司"}]', 1711803834257, 1711803911242),
	(86, '范例：海悟空调-遥控开机', '范例：海悟基站空调', '基站空调(V1.00)', '广东海悟科技有限公司', '[{"param": {"devAddr": 1}, "timeout": 2000, "deviceName": "范例：海悟基站空调", "deviceType": "基站空调(V1.00)", "operateMode": "exchange", "operateName": "遥控开机", "manufacturer": "广东海悟科技有限公司"}]', 1711804368485, 1711804368485),
	(87, '范例：海悟空调-遥控关机', '范例：海悟基站空调', '基站空调(V1.00)', '广东海悟科技有限公司', '[{"param": {"devAddr": 1}, "timeout": 2000, "deviceName": "范例：海悟基站空调", "deviceType": "基站空调(V1.00)", "operateMode": "exchange", "operateName": "遥控关机", "manufacturer": "广东海悟科技有限公司"}]', 1711804404317, 1711804404317),
	(91, '正泰三相电表DT-SU666-读三相电压/电流', '范例（ModBus）：正泰三相电表DT-SU666', 'ModBus Device', 'Fox Edge', '[{"operateMode":"exchange","operateName":"Read Input Register","deviceName":"范例（ModBus）：正泰三相电表DT-SU666","deviceType":"ModBus Device","manufacturer":"Fox Edge","timeout":2000,"param":{"regCnt":18,"regAddr":8192,"tableName":"chint-dt-su666/v1/Holding Registers.csv","templateName":"chint-dt-su666 Read Holding Registers"}}]', 1712028180547, 1712032262888),
	(92, '正泰三相电表DT-SU666-读有功功率', '范例（ModBus）：正泰三相电表DT-SU666', 'ModBus Device', 'Fox Edge', '[{"operateMode":"exchange","operateName":"Read Holding Register","deviceName":"范例（ModBus）：正泰三相电表DT-SU666","deviceType":"ModBus Device","manufacturer":"Fox Edge","timeout":2000,"param":{"regCnt":8,"regAddr":8210,"tableName":"chint-dt-su666/v1/Holding Registers.csv","templateName":"chint-dt-su666 Read Holding Registers"}}]', 1712033145057, 1712033167193),
	(93, '正泰三相电表DT-SU666-读无功功率', '范例（ModBus）：正泰三相电表DT-SU666', 'ModBus Device', 'Fox Edge', '[{"operateMode":"exchange","operateName":"Read Holding Register","deviceName":"范例（ModBus）：正泰三相电表DT-SU666","deviceType":"ModBus Device","manufacturer":"Fox Edge","timeout":2000,"param":{"regCnt":8,"regAddr":8218,"tableName":"chint-dt-su666/v1/Holding Registers.csv","templateName":"chint-dt-su666 Read Holding Registers"}}]', 1712033145057, 1712034365091),
	(94, '正泰三相电表DT-SU666-读功率因数', '范例（ModBus）：正泰三相电表DT-SU666', 'ModBus Device', 'Fox Edge', '[{"operateMode":"exchange","operateName":"Read Holding Register","deviceName":"范例（ModBus）：正泰三相电表DT-SU666","deviceType":"ModBus Device","manufacturer":"Fox Edge","timeout":2000,"param":{"regCnt":8,"regAddr":8234,"tableName":"chint-dt-su666/v1/Holding Registers.csv","templateName":"chint-dt-su666 Read Holding Registers"}}]', 1712033145057, 1712034764406),
	(95, '正泰三相电表DT-SU666-读总谐波含量', '范例（ModBus）：正泰三相电表DT-SU666', 'ModBus Device', 'Fox Edge', '[{"operateMode":"exchange","operateName":"Read Holding Register","deviceName":"范例（ModBus）：正泰三相电表DT-SU666","deviceType":"ModBus Device","manufacturer":"Fox Edge","timeout":2000,"param":{"regCnt":16,"regAddr":8248,"tableName":"chint-dt-su666/v1/Holding Registers.csv","templateName":"chint-dt-su666 Read Holding Registers"}}]', 1712033145057, 1712034796085),
	(96, '正泰三相电表DT-SU666-读正向有功', '范例（ModBus）：正泰三相电表DT-SU666', 'ModBus Device', 'Fox Edge', '[{"operateMode":"exchange","operateName":"Read Holding Register","deviceName":"范例（ModBus）：正泰三相电表DT-SU666","deviceType":"ModBus Device","manufacturer":"Fox Edge","timeout":2000,"param":{"regCnt":10,"regAddr":4126,"tableName":"chint-dt-su666/v1/Holding Registers.csv","templateName":"chint-dt-su666 Read Holding Registers"}}]', 1712033145057, 1712034821428),
	(97, '正泰三相电表DT-SU666-读反向有功', '范例（ModBus）：正泰三相电表DT-SU666', 'ModBus Device', 'Fox Edge', '[{"operateMode":"exchange","operateName":"Read Holding Register","deviceName":"范例（ModBus）：正泰三相电表DT-SU666","deviceType":"ModBus Device","manufacturer":"Fox Edge","timeout":2000,"param":{"regCnt":10,"regAddr":4136,"tableName":"chint-dt-su666/v1/Holding Registers.csv","templateName":"chint-dt-su666 Read Holding Registers"}}]', 1712033145057, 1712034842093),
	(98, '正泰三相电表DT-SU666-读第一象限无功', '范例（ModBus）：正泰三相电表DT-SU666', 'ModBus Device', 'Fox Edge', '[{"operateMode":"exchange","operateName":"Read Holding Register","deviceName":"范例（ModBus）：正泰三相电表DT-SU666","deviceType":"ModBus Device","manufacturer":"Fox Edge","timeout":2000,"param":{"regCnt":10,"regAddr":4146,"tableName":"chint-dt-su666/v1/Holding Registers.csv","templateName":"chint-dt-su666 Read Holding Registers"}}]', 1712033145057, 1712034861029),
	(102, '范例：宏冠风机(HF-315PE)-读取风机速度', '范例：宏冠风机(HF-315PE)', 'ModBus Device', 'Fox Edge', '[{"operateMode":"exchange","operateName":"Read Holding Register","deviceName":"范例：宏冠风机(HF-315PE)","deviceType":"ModBus Device","manufacturer":"Fox Edge","timeout":2000,"param":{"regCnt":10,"regAddr":4146,"tableName":"hgfan-hf315pe/v1/Holding Registers.csv","templateName":"hgfan-hf315pe Read Holding Registers"}}]', 1712669438717, 1712669518716),
	(103, '范例：动态模板', '范例：模型-正泰-三相电表(DT-SU666)', 'ModBus Device', 'Fox Edge', '[{"operateMode":"exchange","operateName":"Read Holding Register","deviceName":"范例：模型-正泰-三相电表(DT-SU666)","deviceType":"ModBus Device","manufacturer":"Fox Edge","timeout":2000,"param":{"regCnt":10,"regAddr":4146}}]', 1713595990087, 1713709313666);

-- 正在导出表  fox_edge.tb_operate_monitor_task 的数据：~11 rows (大约)
DELETE FROM `tb_operate_monitor_task`;
INSERT INTO `tb_operate_monitor_task` (`id`, `template_name`, `device_type`, `manufacturer`, `template_param`, `device_ids`, `create_time`, `update_time`) VALUES
	(6, 'BASS260ZJ监控任务', 'BASS260ZJ', '广东高新兴', '[{"param": {}, "timeout": 2000, "operateMode": "exchange", "operateName": "读取刷卡记录"}, {"param": {}, "timeout": 2000, "operateMode": "exchange", "operateName": "读取告警状态"}]', '[1184, 1185, 2, 1176, 1178, 1179, 623]', 1669207456971, 1669431472468),
	(8, '欧姆龙设备监控任务', 'omron-fins', 'omron', '[{"param": {"CNT": 1, "DA1": 10, "FMT": "Short", "GCT": 2, "ICF": "80", "SA1": 113, "SID": 255, "AREA": "B1", "BADR": 0, "NAME": "数值", "WADR": 10}, "timeout": 2000, "deviceName": "欧姆龙FINS设备", "deviceType": "omron-fins", "operateMode": "exchange", "operateName": "Read Data"}]', '[11]', 1669433014247, 1669460515789),
	(9, 'ZXDU58设备监控任务', 'ZXDU58', '中兴通讯', '[{"param": {}, "timeout": 2000, "operateMode": "exchange", "operateName": "获取整流系统模拟量量化数据"}, {"param": {}, "timeout": 2000, "operateMode": "exchange", "operateName": "获取交流系统模拟量量化数据"}, {"param": {}, "timeout": 2000, "operateMode": "exchange", "operateName": "获取交流系统开关输入状态"}, {"param": {}, "timeout": 2000, "operateMode": "exchange", "operateName": "获取交流系统告警状态"}]', '[3]', 1669461832918, 1669462003248),
	(10, 'CE+T UPS设备监控任务', 'CE+T UPS', '深圳安圣电气有限公司', '[{"param": {}, "timeout": 2000, "operateMode": "exchange", "operateName": "Read System Measures Table"}, {"param": {}, "timeout": 2000, "operateMode": "exchange", "operateName": "Read Alarms And Events Table"}]', '[2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 1180, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047]', 1669464465304, 1670337629054),
	(12, 'LRW设备', 'LRW解码器', '', '[{"param": {}, "timeout": 2000, "operateMode": "exchange", "operateName": "检查版本号"}, {"param": {}, "timeout": 2000, "operateMode": "exchange", "operateName": "查询传感器状态"}]', '[1]', 1669466444237, 1669637711558),
	(13, 'DLT645 v1997 Device监控任务', 'DLT645 v1997', 'Fox Edge', '[{"param": {"tableName": "DLT645-v1997/v1/DLT645-1997.csv", "objectName": "(当前)正向有功总电能", "deviceAddress": "351253111111"}, "timeout": 2000, "operateMode": "exchange", "operateName": "读数据"}, {"param": {"tableName": "DLT645-v1997/v1/DLT645-1997.csv", "objectName": "(当前)反向有功总电能", "deviceAddress": "351253111111"}, "timeout": 2000, "operateMode": "exchange", "operateName": "读数据"}, {"param": {"tableName": "DLT645-v1997/v1/DLT645-1997.csv", "objectName": "(当前)正向无功总电能", "deviceAddress": "351253111111"}, "timeout": 2000, "operateMode": "exchange", "operateName": "读数据"}, {"param": {"tableName": "DLT645-v1997/v1/DLT645-1997.csv", "objectName": "(当前)反向无功总电能", "deviceAddress": "351253111111"}, "timeout": 2000, "operateMode": "exchange", "operateName": "读数据"}, {"param": {"tableName": "DLT645-v1997/v1/DLT645-1997.csv", "objectName": "A相电压", "deviceAddress": "351253111111"}, "timeout": 2000, "operateMode": "exchange", "operateName": "读数据"}, {"param": {"tableName": "DLT645-v1997/v1/DLT645-1997.csv", "objectName": "B相电压", "deviceAddress": "351253111111"}, "timeout": 2000, "operateMode": "exchange", "operateName": "读数据"}, {"param": {"tableName": "DLT645-v1997/v1/DLT645-1997.csv", "objectName": "C相电压", "deviceAddress": "351253111111"}, "timeout": 2000, "operateMode": "exchange", "operateName": "读数据"}, {"param": {"tableName": "DLT645-v1997/v1/DLT645-1997.csv", "objectName": "A相电流", "deviceAddress": "351253111111"}, "timeout": 2000, "operateMode": "exchange", "operateName": "读数据"}, {"param": {"tableName": "DLT645-v1997/v1/DLT645-1997.csv", "objectName": "B相电流", "deviceAddress": "351253111111"}, "timeout": 2000, "operateMode": "exchange", "operateName": "读数据"}, {"param": {"tableName": "DLT645-v1997/v1/DLT645-1997.csv", "objectName": "C相电流", "deviceAddress": "351253111111"}, "timeout": 2000, "operateMode": "exchange", "operateName": "读数据"}, {"param": {"tableName": "DLT645-v1997/v1/DLT645-1997.csv", "objectName": "瞬时有功功率", "deviceAddress": "351253111111"}, "timeout": 2000, "operateMode": "exchange", "operateName": "读数据"}, {"param": {"tableName": "DLT645-v1997/v1/DLT645-1997.csv", "objectName": "A相有功功率", "deviceAddress": "351253111111"}, "timeout": 2000, "operateMode": "exchange", "operateName": "读数据"}, {"param": {"tableName": "DLT645-v1997/v1/DLT645-1997.csv", "objectName": "B相有功功率", "deviceAddress": "351253111111"}, "timeout": 2000, "operateMode": "exchange", "operateName": "读数据"}, {"param": {"tableName": "DLT645-v1997/v1/DLT645-1997.csv", "objectName": "C相有功功率", "deviceAddress": "351253111111"}, "timeout": 2000, "operateMode": "exchange", "operateName": "读数据"}, {"param": {"tableName": "DLT645-v1997/v1/DLT645-1997.csv", "objectName": "日期及周次", "deviceAddress": "351253111111"}, "timeout": 2000, "operateMode": "exchange", "operateName": "读数据"}, {"param": {"tableName": "DLT645-v1997/v1/DLT645-1997.csv", "objectName": "时间", "deviceAddress": "351253111111"}, "timeout": 2000, "operateMode": "exchange", "operateName": "读数据"}, {"param": {"tableName": "DLT645-v1997/v1/DLT645-1997.csv", "objectName": "电表运行状态字", "deviceAddress": "351253111111"}, "timeout": 2000, "operateMode": "exchange", "operateName": "读数据"}, {"param": {"tableName": "DLT645-v1997/v1/DLT645-1997.csv", "objectName": "电网状态字", "deviceAddress": "351253111111"}, "timeout": 2000, "operateMode": "exchange", "operateName": "读数据"}, {"param": {"tableName": "DLT645-v1997/v1/DLT645-1997.csv", "objectName": "周休日状态字", "deviceAddress": "351253111111"}, "timeout": 2000, "operateMode": "exchange", "operateName": "读数据"}, {"param": {"tableName": "DLT645-v1997/v1/DLT645-1997.csv", "objectName": "表号", "deviceAddress": "351253111111"}, "timeout": 2000, "operateMode": "exchange", "operateName": "读数据"}, {"param": {"tableName": "DLT645-v1997/v1/DLT645-1997.csv", "objectName": "用户号", "deviceAddress": "351253111111"}, "timeout": 2000, "operateMode": "exchange", "operateName": "读数据"}, {"param": {"tableName": "DLT645-v1997/v1/DLT645-1997.csv", "objectName": "自动抄表日期", "deviceAddress": "351253111111"}, "timeout": 2000, "operateMode": "exchange", "operateName": "读数据"}]', '[]', 1669636679052, 1703327141566),
	(14, 'DLT645 v1997 Device监控任务-电表状态', 'DLT645 v1997', 'Fox Edge', '[{"param": {"tableName": "DLT645-v1997/v1/DLT645-1997.csv", "objectName": "(当前)正向有功总电能", "deviceAddress": "351253111111"}, "timeout": 2000, "operateMode": "exchange", "operateName": "读数据"}, {"param": {"tableName": "DLT645-v1997/v1/DLT645-1997.csv", "objectName": "(当前)反向有功总电能", "deviceAddress": "351253111111"}, "timeout": 2000, "operateMode": "exchange", "operateName": "读数据"}, {"param": {"tableName": "DLT645-v1997/v1/DLT645-1997.csv", "objectName": "(当前)正向无功总电能", "deviceAddress": "351253111111"}, "timeout": 2000, "operateMode": "exchange", "operateName": "读数据"}, {"param": {"tableName": "DLT645-v1997/v1/DLT645-1997.csv", "objectName": "(当前)反向无功总电能", "deviceAddress": "351253111111"}, "timeout": 2000, "operateMode": "exchange", "operateName": "读数据"}, {"param": {"tableName": "DLT645-v1997/v1/DLT645-1997.csv", "objectName": "A相电压", "deviceAddress": "351253111111"}, "timeout": 2000, "operateMode": "exchange", "operateName": "读数据"}, {"param": {"tableName": "DLT645-v1997/v1/DLT645-1997.csv", "objectName": "B相电压", "deviceAddress": "351253111111"}, "timeout": 2000, "operateMode": "exchange", "operateName": "读数据"}, {"param": {"tableName": "DLT645-v1997/v1/DLT645-1997.csv", "objectName": "C相电压", "deviceAddress": "351253111111"}, "timeout": 2000, "operateMode": "exchange", "operateName": "读数据"}, {"param": {"tableName": "DLT645-v1997/v1/DLT645-1997.csv", "objectName": "A相电流", "deviceAddress": "351253111111"}, "timeout": 2000, "operateMode": "exchange", "operateName": "读数据"}, {"param": {"tableName": "DLT645-v1997/v1/DLT645-1997.csv", "objectName": "B相电流", "deviceAddress": "351253111111"}, "timeout": 2000, "operateMode": "exchange", "operateName": "读数据"}, {"param": {"tableName": "DLT645-v1997/v1/DLT645-1997.csv", "objectName": "C相电流", "deviceAddress": "351253111111"}, "timeout": 2000, "operateMode": "exchange", "operateName": "读数据"}, {"param": {"tableName": "DLT645-v1997/v1/DLT645-1997.csv", "objectName": "瞬时有功功率", "deviceAddress": "351253111111"}, "timeout": 2000, "operateMode": "exchange", "operateName": "读数据"}, {"param": {"tableName": "DLT645-v1997/v1/DLT645-1997.csv", "objectName": "A相有功功率", "deviceAddress": "351253111111"}, "timeout": 2000, "operateMode": "exchange", "operateName": "读数据"}, {"param": {"tableName": "DLT645-v1997/v1/DLT645-1997.csv", "objectName": "B相有功功率", "deviceAddress": "351253111111"}, "timeout": 2000, "operateMode": "exchange", "operateName": "读数据"}, {"param": {"tableName": "DLT645-v1997/v1/DLT645-1997.csv", "objectName": "C相有功功率", "deviceAddress": "351253111111"}, "timeout": 2000, "operateMode": "exchange", "operateName": "读数据"}]', '[]', 1669637918809, 1703327125234),
	(15, 'DLT645 v1997 Device监控任务-电表配置信息', 'DLT645 v1997', 'Fox Edge', '[{"param": {"tableName": "DLT645-v1997/v1/DLT645-1997.csv", "objectName": "日期及周次", "deviceAddress": "351253111111"}, "timeout": 2000, "operateMode": "exchange", "operateName": "读数据"}, {"param": {"tableName": "DLT645-v1997/v1/DLT645-1997.csv", "objectName": "时间", "deviceAddress": "351253111111"}, "timeout": 2000, "operateMode": "exchange", "operateName": "读数据"}, {"param": {"tableName": "DLT645-v1997/v1/DLT645-1997.csv", "objectName": "电表运行状态字", "deviceAddress": "351253111111"}, "timeout": 2000, "operateMode": "exchange", "operateName": "读数据"}, {"param": {"tableName": "DLT645-v1997/v1/DLT645-1997.csv", "objectName": "电网状态字", "deviceAddress": "351253111111"}, "timeout": 2000, "operateMode": "exchange", "operateName": "读数据"}, {"param": {"tableName": "DLT645-v1997/v1/DLT645-1997.csv", "objectName": "周休日状态字", "deviceAddress": "351253111111"}, "timeout": 2000, "operateMode": "exchange", "operateName": "读数据"}, {"param": {"tableName": "DLT645-v1997/v1/DLT645-1997.csv", "objectName": "表号", "deviceAddress": "351253111111"}, "timeout": 2000, "operateMode": "exchange", "operateName": "读数据"}, {"param": {"tableName": "DLT645-v1997/v1/DLT645-1997.csv", "objectName": "用户号", "deviceAddress": "351253111111"}, "timeout": 2000, "operateMode": "exchange", "operateName": "读数据"}, {"param": {"tableName": "DLT645-v1997/v1/DLT645-1997.csv", "objectName": "自动抄表日期", "deviceAddress": "351253111111"}, "timeout": 2000, "operateMode": "exchange", "operateName": "读数据"}]', '[]', 1669637945804, 1703327101553),
	(16, 'ModBus设备-simulator监控任务', 'ModBus Device', 'Fox Edge', '[{"param": {"regCnt": 69, "devAddr": 1, "regAddr": 1070, "tableName": "ModBus/v1/101.CETUPS_Read System Measures Table.csv", "modbusMode": "RTU", "operateName": "Read Holding Register", "templateName": "Read System Measures Table"}, "timeout": 2000, "operateMode": "exchange", "operateName": "Read Holding Register"}]', '[8, 506, 155]', 1669641624348, 1703327051961),
	(17, 'SNMP服务器监控任务', 'SNMP Device', 'Fox Edge', '[{"param": {"tableName": "snmp/v1/101.SNMP_MIB_Default_Table.csv", "templateName": "Read Data", "objectNameList": ["CPU负载(1分钟)", "CPU负载(5分钟)", "CPU负载(15分钟)", "总交换大小", "可用交换空间", "机器内存总量", "使用的总RAM", "总可用RAM", "共享的RAM总量", "缓冲的总RAM", "系统运行时间"]}, "timeout": 2000, "operateMode": "exchange", "operateName": "读数据"}]', '[2200]', 1676611509576, 1703327186889),
	(18, 'CJT188设备-读表数据', 'CJT188', 'Fox Edge', '[{"param": {}, "timeout": 2000, "operateMode": "exchange", "operateName": "读表数据"}]', '[2204]', 1677310065496, 1703733059691);

-- 正在导出表  fox_edge.tb_operate_record 的数据：~224 rows (大约)
DELETE FROM `tb_operate_record`;
INSERT INTO `tb_operate_record` (`id`, `device_name`, `device_type`, `manufacturer`, `record_name`, `client_model`, `operate_uuid`, `record_param`, `record_data`, `create_time`, `update_time`) VALUES
	(23221, 'CJT188设备-01', 'CJT188', 'Fox Edge', '读表数据', 'proxy4http2topic', '97ea528d-aefe-4d2d-8661-d474ef33cccd', '{"type": 16, "address": "01 00 00 05 08 00 00"}', '{"value": {"status": {"sn": 0, "时间": "2015-5-11 22:1:31", "状态1": 32, "状态2": 33, "本月用量": 776655, "累计用量": 776655, "本月用量单位": "m3", "累计用量单位": "m3"}}, "commStatus": {"commFailedTime": 0, "commFailedCount": 0, "commSuccessTime": 1682695021690}}', 1682695021700, 1682695021700),
	(23222, 'CE+T UPS设备-1', 'CE+T UPS', '深圳安圣电气有限公司', 'Read System Measures Table', 'proxy4http2topic', '061ceb5f-4c21-459e-9b1a-f15bc7c5d7c3', '{}', '{"value": {"status": {"ADDR": 1, "负载比": 9, "组1输入电压": 2.9, "组2输入电压": 0.0, "组3输入电压": 0.0, "组4输入电压": 0.0, "逆变器01温度": 0, "逆变器02温度": 59, "逆变器03温度": 0, "逆变器04温度": 0, "逆变器05温度": 0, "逆变器06温度": 0, "逆变器07温度": 0, "逆变器08温度": 0, "逆变器09温度": 0, "逆变器10温度": 0, "逆变器11温度": 0, "逆变器12温度": 0, "逆变器13温度": 0, "逆变器14温度": 0, "逆变器15温度": 0, "逆变器16温度": 0, "系统输出功率": 121, "系统输出电压": 229, "系统输出电流": 5.3, "系统输出频率": 24.4, "逆变器01输出功率": 48, "逆变器01输出电流": 1, "逆变器02输出功率": 48, "逆变器02输出电流": 2, "逆变器03输出功率": 25, "逆变器03输出电流": 1, "逆变器04输出功率": 0, "逆变器04输出电流": 0, "逆变器05输出功率": 0, "逆变器05输出电流": 0, "逆变器06输出功率": 1, "逆变器06输出电流": 0, "逆变器07输出功率": 0, "逆变器07输出电流": 0, "逆变器08输出功率": 0, "逆变器08输出电流": 0, "逆变器09输出功率": 0, "逆变器09输出电流": 0, "逆变器10输出功率": 0, "逆变器10输出电流": 0, "逆变器11输出功率": 0, "逆变器11输出电流": 0, "逆变器12输出功率": 0, "逆变器12输出电流": 0, "逆变器13输出功率": 0, "逆变器13输出电流": 0, "逆变器14输出功率": 0, "逆变器14输出电流": 0, "逆变器15输出功率": 0, "逆变器15输出电流": 0, "逆变器16输出功率": 0, "逆变器16输出电流": 0}}, "commStatus": {"commFailedTime": 0, "commFailedCount": 0, "commSuccessTime": 1682695028328}}', 1682695028337, 1682695028337),
	(23223, 'CE+T UPS设备-1', 'CE+T UPS', '深圳安圣电气有限公司', 'Read Alarms And Events Table', 'proxy4http2topic', 'd995e324-7505-49a9-a395-aab46bd4b5cc', '{}', '{"value": {"status": {"ADDR": 1, "过载告警状态": false, "不同步告警状态": false, "系统紧急告警状态": false, "是否工作在交流方式": false, "是否工作在在线方式": true, "是否工作在逆变方式": false, "是否有逆变器手动停": false, "系统非紧急告警状态": false, "负载是否由市电供电": false, "逆变器故障告警状态": false, "逆变器超温告警状态": false, "逆变器限流告警状态": false, "48V直流熔丝断告警状态": false, "直流电压超限告警状态": false, "负载是否由逆变器供电": false, "输出电压超限告警状态": false, "用户交流熔丝断告警状态": false, "辅助交流熔丝断告警状态": false, "逆变器 0传输故障告警状态": false, "逆变器 1传输故障告警状态": false, "逆变器 2传输故障告警状态": false, "逆变器 3传输故障告警状态": false, "逆变器 4传输故障告警状态": false, "逆变器 5传输故障告警状态": false, "逆变器 6传输故障告警状态": false, "逆变器 7传输故障告警状态": false, "逆变器 8传输故障告警状态": false, "逆变器 9传输故障告警状态": false, "逆变器10传输故障告警状态": false, "逆变器11传输故障告警状态": false, "逆变器12传输故障告警状态": false, "逆变器13传输故障告警状态": false, "逆变器14传输故障告警状态": false, "逆变器15传输故障告警状态": false, "是否由市电切换到手动旁路": false, "是否由逆变切换到手动旁路": false}}, "commStatus": {"commFailedTime": 0, "commFailedCount": 0, "commSuccessTime": 1682695032845}}', 1682695032860, 1682695032860),
	(23224, 'DLT645设备-01', 'DLT645 v1997', 'Fox Edge', '读数据', 'proxy4http2topic', '08aebc96-1dd8-4462-850f-5a381fc2da9b', '{"tableName": "DLT645-v1997/1.0.0/DLT645-1997.csv", "objectName": "(当前)正向有功总电能", "deviceAddress": "351253111111"}', '{"value": {}, "commStatus": {"commFailedTime": 1683548122043, "commFailedCount": 1, "commSuccessTime": 0}}', 1683548122066, 1683548122066),
	(23225, 'CJT188设备-01', 'CJT188', 'Fox Edge', '读表数据', 'proxy4http2topic', 'e1f64911-0bca-4f00-9f59-413d7a27e88b', '{"type": 16, "address": "01 00 00 05 08 00 00"}', '{"value": {"status": {"sn": 0, "时间": "2015-5-11 22:1:31", "状态1": 32, "状态2": 33, "本月用量": 776655, "累计用量": 776655, "本月用量单位": "m3", "累计用量单位": "m3"}}, "commStatus": {"commFailedTime": 0, "commFailedCount": 0, "commSuccessTime": 1687699345745}}', 1687699345819, 1687699345819),
	(23226, 'CJT188设备-01', 'CJT188', 'Fox Edge', '读表数据', 'proxy4http2topic', '42af3818-dd03-43a3-94d0-48c6a362131a', '{"type": 16, "address": "01 00 00 05 08 00 00"}', '{"value": {}, "commStatus": {"commFailedTime": 1687704635136, "commFailedCount": 1, "commSuccessTime": 0}}', 1687704635190, 1687704635190),
	(23227, 'CJT188设备-01', 'CJT188', 'Fox Edge', '读表数据', 'proxy4http2topic', '9cb1c6b6-2268-49b6-9e33-cd201f463c55', '{"type": 16, "address": "01 00 00 05 08 00 00"}', '{"value": {}, "commStatus": {"commFailedTime": 1687704640720, "commFailedCount": 1, "commSuccessTime": 0}}', 1687704640724, 1687704640724),
	(23228, 'CJT188设备-01', 'CJT188', 'Fox Edge', '读表数据', 'proxy4http2topic', 'b23b3e6e-ddb7-4229-9994-2de6e6b1cd8e', '{"type": 16, "address": "01 00 00 05 08 00 00"}', '{"value": {}, "commStatus": {"commFailedTime": 1687704644659, "commFailedCount": 1, "commSuccessTime": 0}}', 1687704644664, 1687704644664),
	(23229, 'CJT188设备-01', 'CJT188', 'Fox Edge', '读表数据', 'proxy4http2topic', '6f76de7c-2f31-4662-b6bc-443ad52f3926', '{"type": 16, "address": "01 00 00 05 08 00 00"}', '{"value": {}, "commStatus": {"commFailedTime": 1687704654218, "commFailedCount": 1, "commSuccessTime": 0}}', 1687704654222, 1687704654222),
	(23230, 'CJT188设备-01', 'CJT188', 'Fox Edge', '读表数据', 'proxy4http2topic', '0fb5d6af-4ac8-4c75-845f-2d21373c946d', '{"type": 16, "address": "01 00 00 05 08 00 00"}', '{"value": {}, "commStatus": {"commFailedTime": 1687704658609, "commFailedCount": 1, "commSuccessTime": 0}}', 1687704658613, 1687704658613),
	(23231, 'CJT188设备-01', 'CJT188', 'Fox Edge', '读表数据', 'proxy4http2topic', 'cb02647a-3019-48e8-b451-f4b6dede7d9b', '{"type": 16, "address": "01 00 00 05 08 00 00"}', '{"value": {}, "commStatus": {"commFailedTime": 1687704660284, "commFailedCount": 1, "commSuccessTime": 0}}', 1687704660288, 1687704660288),
	(23232, 'CJT188设备-01', 'CJT188', 'Fox Edge', '读表数据', 'proxy4http2topic', 'd35b7026-d3ac-47a0-889c-dce8c1e5395e', '{"type": 16, "address": "01 00 00 05 08 00 00"}', '{"value": {}, "commStatus": {"commFailedTime": 1687704662980, "commFailedCount": 1, "commSuccessTime": 0}}', 1687704662984, 1687704662984),
	(23233, 'CJT188设备-01', 'CJT188', 'Fox Edge', '读表数据', 'proxy4http2topic', 'd6f8cd8f-7ec4-4302-b83f-340e1d253c83', '{"type": 16, "address": "01 00 00 05 08 00 00"}', '{"value": {}, "commStatus": {"commFailedTime": 1687704665197, "commFailedCount": 1, "commSuccessTime": 0}}', 1687704665213, 1687704665213),
	(23234, 'CJT188设备-01', 'CJT188', 'Fox Edge', '读表数据', 'proxy4http2topic', 'cd802969-6e5a-44a3-b648-da9d77c3eb94', '{"type": 16, "address": "01 00 00 05 08 00 00"}', '{"value": {}, "commStatus": {"commFailedTime": 1687704668239, "commFailedCount": 1, "commSuccessTime": 0}}', 1687704668244, 1687704668244),
	(23235, 'CJT188设备-01', 'CJT188', 'Fox Edge', '读表数据', 'proxy4http2topic', '5ada872e-8827-4648-824a-ed5ca08e2005', '{"type": 16, "address": "01 00 00 05 08 00 00"}', '{"value": {}, "commStatus": {"commFailedTime": 1687704979290, "commFailedCount": 1, "commSuccessTime": 0}}', 1687704979295, 1687704979295),
	(23236, 'CJT188设备-01', 'CJT188', 'Fox Edge', '读表数据', 'proxy4http2topic', '44aac9b3-4681-4b9d-9133-c6ac3214005e', '{"type": 16, "address": "01 00 00 05 08 00 00"}', '{"value": {}, "commStatus": {"commFailedTime": 1687705036786, "commFailedCount": 1, "commSuccessTime": 0}}', 1687705036789, 1687705036789),
	(23237, 'CJT188设备-01', 'CJT188', 'Fox Edge', '读表数据', 'proxy4http2topic', '5d464ae1-1d0c-40c1-828f-a89729613681', '{"type": 16, "address": "01 00 00 05 08 00 00"}', '{"value": {}, "commStatus": {"commFailedTime": 1687758206159, "commFailedCount": 1, "commSuccessTime": 0}}', 1687758206161, 1687758206161),
	(23238, 'CJT188设备-01', 'CJT188', 'Fox Edge', '读表数据', 'proxy4http2topic', 'e9e27ec7-b53b-4f47-b026-8b54099447a7', '{"type": 16, "address": "01 00 00 05 08 00 00"}', '{"value": {}, "commStatus": {"commFailedTime": 1687758224582, "commFailedCount": 1, "commSuccessTime": 0}}', 1687758224584, 1687758224584),
	(23239, 'CJT188设备-01', 'CJT188', 'Fox Edge', '读表数据', 'proxy4http2topic', '38fabdfa-2613-4deb-82d7-d7c50d19f51b', '{"type": 16, "address": "01 00 00 05 08 00 00"}', '{"value": {"status": {"sn": 0, "时间": "2015-5-11 22:1:31", "状态1": 32, "状态2": 33, "本月用量": 776655, "累计用量": 776655, "本月用量单位": "m3", "累计用量单位": "m3"}}, "commStatus": {"commFailedTime": 0, "commFailedCount": 0, "commSuccessTime": 1687764822807}}', 1687764822824, 1687764822824),
	(23240, 'SNMP设备-21', 'SNMP Device', 'Fox Edge', '读数据', 'proxy4http2topic', '7d331370-b09a-40e3-bd94-eadeb6c397ef', '{"tableName": "snmp/1.0.0/101.SNMP_MIB_Default_Table.csv", "templateName": "Read Data", "objectNameList": ["CPU负载(1分钟)", "CPU负载(5分钟)", "CPU负载(15分钟)", "总交换大小", "可用交换空间", "机器内存总量", "使用的总RAM", "总可用RAM", "共享的RAM总量", "缓冲的总RAM", "系统运行时间"]}', '{"value": {}, "commStatus": {"commFailedTime": 1687764830197, "commFailedCount": 1, "commSuccessTime": 0}}', 1687764830202, 1687764830202),
	(23241, 'CE+T UPS设备-1', 'CE+T UPS', '深圳安圣电气有限公司', 'Read System Measures Table', 'proxy4http2topic', '52fb40a3-55d7-4100-9f0a-66bdca2832ac', '{}', '{"value": {"status": {"ADDR": 1, "负载比": 9, "组1输入电压": 2.9, "组2输入电压": 0.0, "组3输入电压": 0.0, "组4输入电压": 0.0, "逆变器01温度": 0, "逆变器02温度": 59, "逆变器03温度": 0, "逆变器04温度": 0, "逆变器05温度": 0, "逆变器06温度": 0, "逆变器07温度": 0, "逆变器08温度": 0, "逆变器09温度": 0, "逆变器10温度": 0, "逆变器11温度": 0, "逆变器12温度": 0, "逆变器13温度": 0, "逆变器14温度": 0, "逆变器15温度": 0, "逆变器16温度": 0, "系统输出功率": 121, "系统输出电压": 229, "系统输出电流": 5.3, "系统输出频率": 24.4, "逆变器01输出功率": 48, "逆变器01输出电流": 1, "逆变器02输出功率": 48, "逆变器02输出电流": 2, "逆变器03输出功率": 25, "逆变器03输出电流": 1, "逆变器04输出功率": 0, "逆变器04输出电流": 0, "逆变器05输出功率": 0, "逆变器05输出电流": 0, "逆变器06输出功率": 1, "逆变器06输出电流": 0, "逆变器07输出功率": 0, "逆变器07输出电流": 0, "逆变器08输出功率": 0, "逆变器08输出电流": 0, "逆变器09输出功率": 0, "逆变器09输出电流": 0, "逆变器10输出功率": 0, "逆变器10输出电流": 0, "逆变器11输出功率": 0, "逆变器11输出电流": 0, "逆变器12输出功率": 0, "逆变器12输出电流": 0, "逆变器13输出功率": 0, "逆变器13输出电流": 0, "逆变器14输出功率": 0, "逆变器14输出电流": 0, "逆变器15输出功率": 0, "逆变器15输出电流": 0, "逆变器16输出功率": 0, "逆变器16输出电流": 0}}, "commStatus": {"commFailedTime": 0, "commFailedCount": 0, "commSuccessTime": 1687764834982}}', 1687764834995, 1687764834995),
	(23242, 'CJT188设备-01', 'CJT188', 'Fox Edge', '读表数据', 'proxy4http2topic', '4ff05a36-0924-44bd-a1a3-c38ee3694b08', '{"type": 16, "address": "01 00 00 05 08 00 00"}', '{"value": {"status": {"sn": 0, "时间": "2015-5-11 22:1:31", "状态1": 32, "状态2": 33, "本月用量": 776655, "累计用量": 776655, "本月用量单位": "m3", "累计用量单位": "m3"}}, "commStatus": {"commFailedTime": 0, "commFailedCount": 0, "commSuccessTime": 1687844588322}}', 1687844588355, 1687844588355),
	(23243, 'CJT188设备-01', 'CJT188', 'Fox Edge', '读表数据', 'proxy4http2topic', '21823512-3893-451e-9537-8e125de29274', '{"type": 16, "address": "01 00 00 05 08 00 00"}', '{"value": {"status": {"sn": 0, "时间": "2015-5-11 22:1:31", "状态1": 32, "状态2": 33, "本月用量": 776655, "累计用量": 776655, "本月用量单位": "m3", "累计用量单位": "m3"}}, "commStatus": {"commFailedTime": 0, "commFailedCount": 0, "commSuccessTime": 1687844592000}}', 1687844592006, 1687844592006),
	(23244, 'CE+T UPS设备-1', 'CE+T UPS', '深圳安圣电气有限公司', 'Read Alarms And Events Table', 'proxy4http2topic', 'a3dee14b-cfd9-403d-a601-28b03362e25e', '{}', '{"value": {"status": {"ADDR": 1, "过载告警状态": false, "不同步告警状态": false, "系统紧急告警状态": false, "是否工作在交流方式": false, "是否工作在在线方式": true, "是否工作在逆变方式": false, "是否有逆变器手动停": false, "系统非紧急告警状态": false, "负载是否由市电供电": false, "逆变器故障告警状态": false, "逆变器超温告警状态": false, "逆变器限流告警状态": false, "48V直流熔丝断告警状态": false, "直流电压超限告警状态": false, "负载是否由逆变器供电": false, "输出电压超限告警状态": false, "用户交流熔丝断告警状态": false, "辅助交流熔丝断告警状态": false, "逆变器 0传输故障告警状态": false, "逆变器 1传输故障告警状态": false, "逆变器 2传输故障告警状态": false, "逆变器 3传输故障告警状态": false, "逆变器 4传输故障告警状态": false, "逆变器 5传输故障告警状态": false, "逆变器 6传输故障告警状态": false, "逆变器 7传输故障告警状态": false, "逆变器 8传输故障告警状态": false, "逆变器 9传输故障告警状态": false, "逆变器10传输故障告警状态": false, "逆变器11传输故障告警状态": false, "逆变器12传输故障告警状态": false, "逆变器13传输故障告警状态": false, "逆变器14传输故障告警状态": false, "逆变器15传输故障告警状态": false, "是否由市电切换到手动旁路": false, "是否由逆变切换到手动旁路": false}}, "commStatus": {"commFailedTime": 0, "commFailedCount": 0, "commSuccessTime": 1687856271410}}', 1687856271428, 1687856271428),
	(23245, 'CE+T UPS设备-1', 'CE+T UPS', '深圳安圣电气有限公司', 'Read System Measures Table', 'proxy4http2topic', 'd1605f61-aed9-443b-99d2-f72f34a614cc', '{}', '{"value": {}, "commStatus": {"commFailedTime": 1688390592136, "commFailedCount": 1, "commSuccessTime": 0}}', 1688390592142, 1688390592142),
	(23246, 'CE+T UPS设备-1', 'CE+T UPS', '深圳安圣电气有限公司', 'Read System Measures Table', 'proxy4http2topic', '026acf1e-c6c6-4e7b-9381-bcfe90aece54', '{}', '{"value": {}, "commStatus": {"commFailedTime": 1688390666276, "commFailedCount": 1, "commSuccessTime": 0}}', 1688390666280, 1688390666280),
	(23247, 'CE+T UPS设备-1', 'CE+T UPS', '深圳安圣电气有限公司', 'Read System Measures Table', 'proxy4http2topic', '4127c085-981a-4556-b878-47c7bf3eca33', '{}', '{"value": {"status": {"ADDR": 1, "负载比": 9, "组1输入电压": 2.9, "组2输入电压": 0.0, "组3输入电压": 0.0, "组4输入电压": 0.0, "逆变器01温度": 0, "逆变器02温度": 59, "逆变器03温度": 0, "逆变器04温度": 0, "逆变器05温度": 0, "逆变器06温度": 0, "逆变器07温度": 0, "逆变器08温度": 0, "逆变器09温度": 0, "逆变器10温度": 0, "逆变器11温度": 0, "逆变器12温度": 0, "逆变器13温度": 0, "逆变器14温度": 0, "逆变器15温度": 0, "逆变器16温度": 0, "系统输出功率": 121, "系统输出电压": 229, "系统输出电流": 5.3, "系统输出频率": 24.4, "逆变器01输出功率": 48, "逆变器01输出电流": 1, "逆变器02输出功率": 48, "逆变器02输出电流": 2, "逆变器03输出功率": 25, "逆变器03输出电流": 1, "逆变器04输出功率": 0, "逆变器04输出电流": 0, "逆变器05输出功率": 0, "逆变器05输出电流": 0, "逆变器06输出功率": 1, "逆变器06输出电流": 0, "逆变器07输出功率": 0, "逆变器07输出电流": 0, "逆变器08输出功率": 0, "逆变器08输出电流": 0, "逆变器09输出功率": 0, "逆变器09输出电流": 0, "逆变器10输出功率": 0, "逆变器10输出电流": 0, "逆变器11输出功率": 0, "逆变器11输出电流": 0, "逆变器12输出功率": 0, "逆变器12输出电流": 0, "逆变器13输出功率": 0, "逆变器13输出电流": 0, "逆变器14输出功率": 0, "逆变器14输出电流": 0, "逆变器15输出功率": 0, "逆变器15输出电流": 0, "逆变器16输出功率": 0, "逆变器16输出电流": 0}}, "commStatus": {"commFailedTime": 0, "commFailedCount": 0, "commSuccessTime": 1688390870853}}', 1688390870864, 1688390870864),
	(23248, 'CE+T UPS设备-1', 'CE+T UPS', '深圳安圣电气有限公司', 'Read Alarms And Events Table', 'proxy4http2topic', '9caa5fa9-f468-41ef-a016-f1712f33b2bf', '{}', '{"value": {"status": {"ADDR": 1, "过载告警状态": false, "不同步告警状态": false, "系统紧急告警状态": false, "是否工作在交流方式": false, "是否工作在在线方式": true, "是否工作在逆变方式": false, "是否有逆变器手动停": false, "系统非紧急告警状态": false, "负载是否由市电供电": false, "逆变器故障告警状态": false, "逆变器超温告警状态": false, "逆变器限流告警状态": false, "48V直流熔丝断告警状态": false, "直流电压超限告警状态": false, "负载是否由逆变器供电": false, "输出电压超限告警状态": false, "用户交流熔丝断告警状态": false, "辅助交流熔丝断告警状态": false, "逆变器 0传输故障告警状态": false, "逆变器 1传输故障告警状态": false, "逆变器 2传输故障告警状态": false, "逆变器 3传输故障告警状态": false, "逆变器 4传输故障告警状态": false, "逆变器 5传输故障告警状态": false, "逆变器 6传输故障告警状态": false, "逆变器 7传输故障告警状态": false, "逆变器 8传输故障告警状态": false, "逆变器 9传输故障告警状态": false, "逆变器10传输故障告警状态": false, "逆变器11传输故障告警状态": false, "逆变器12传输故障告警状态": false, "逆变器13传输故障告警状态": false, "逆变器14传输故障告警状态": false, "逆变器15传输故障告警状态": false, "是否由市电切换到手动旁路": false, "是否由逆变切换到手动旁路": false}}, "commStatus": {"commFailedTime": 0, "commFailedCount": 0, "commSuccessTime": 1688391254937}}', 1688391254953, 1688391254953),
	(23249, 'Prosys-OPC-UA-Simulation', 'OPC-UA', 'Fox Edge', '读子节点数值', 'proxy4http2topic', '6d38355a-1f1f-4e01-9f92-e5d842fbf0f9', '{"tableName": "fox-edge-opc-ua/1.0.0/101.OPC_UA_ReadNode Table.csv", "objectName": "Simulation", "templateName": "读子节点数值"}', '{"value": {"status": {"Random": 1.9066550861553464, "Square": -2.0, "Counter": 83, "Sawtooth": 1.2000000476837158, "Sinusoid": 0.8134733782337555, "Triangle": 0.5333333975023583, "Expression": 4.013473425917471}}, "commStatus": {"commFailedTime": 0, "commFailedCount": 0, "commSuccessTime": 1689065503568}}', 1689065503810, 1689065503810),
	(23250, 'Prosys-OPC-UA-Simulation', 'OPC-UA', 'Fox Edge', '读子节点数值', 'proxy4http2topic', '2f61949b-1ec9-428f-b0a0-33be38c5a391', '{"tableName": "fox-edge-opc-ua/1.0.0/101.OPC_UA_ReadNode Table.csv", "objectName": "Simulation", "templateName": "读子节点数值"}', '{"value": {"status": {"Random": -0.5382145015449273, "Square": 2.0, "Counter": 46, "Sawtooth": -0.3999999761581421, "Sinusoid": 1.9021130633818089, "Triangle": 1.6000000634349585, "Expression": 3.5021130872236665}}, "commStatus": {"commFailedTime": 0, "commFailedCount": 0, "commSuccessTime": 1689065769312}}', 1689065769339, 1689065769339),
	(23251, 'Prosys-OPC-UA-Simulation', 'OPC-UA', 'Fox Edge', '读子节点数值', 'proxy4http2topic', '82731c5a-1abd-4830-b022-28e632827ffe', '{"tableName": "fox-edge-opc-ua/1.0.0/101.OPC_UA_ReadNode Table.csv", "objectName": "Simulation", "templateName": "读子节点数值"}', '{"value": {"status": {"Random": -0.3107777970267245, "Square": 2.0, "Counter": 95, "Sawtooth": -0.7999999523162842, "Sinusoid": -0.8134732910101962, "Triangle": -0.5333333367191289, "Expression": 0.38652675667351977}}, "commStatus": {"commFailedTime": 0, "commFailedCount": 0, "commSuccessTime": 1689065818935}}', 1689065818958, 1689065818958),
	(23252, 'Prosys-OPC-UA-Simulation', 'OPC-UA', 'Fox Edge', '读子节点数值', 'proxy4http2topic', 'ae3e9a9a-2ac0-474b-87c7-2bc1030b2fff', '{"tableName": "fox-edge-opc-ua/1.0.0/101.OPC_UA_ReadNode Table.csv", "objectName": "Simulation", "templateName": "读子节点数值"}', '{"value": {"status": {"Random": -1.6068400154253464, "Square": 2.0, "Counter": 44, "Sawtooth": 0.0, "Sinusoid": -1.7320507547109705, "Triangle": -1.333333266032559, "Expression": 0.26794924528902975}}, "commStatus": {"commFailedTime": 0, "commFailedCount": 0, "commSuccessTime": 1689068090582}}', 1689068090604, 1689068090604),
	(23253, 'Prosys-OPC-UA-Simulation', 'OPC-UA', 'Fox Edge', '读子节点数值', 'proxy4http2topic', '78589c1a-378d-4ce2-9391-a7c5a2ff7aeb', '{"tableName": "fox-edge-opc-ua/1.0.0/101.OPC_UA_ReadNode Table.csv", "objectName": "Simulation", "templateName": "读子节点数值"}', '{"value": {"status": {"Random": -1.3276903263144075, "Square": -2.0, "Counter": 50, "Sawtooth": -1.600000023841858, "Sinusoid": -1.4862896748946657, "Triangle": -1.066666689443385, "Expression": -1.0862896987365236}}, "commStatus": {"commFailedTime": 0, "commFailedCount": 0, "commSuccessTime": 1689068096193}}', 1689068096224, 1689068096224),
	(23254, 'Prosys-OPC-UA-Simulation', 'OPC-UA', 'Fox Edge', '读子节点数值', 'proxy4http2topic', '1c17f5b8-4e16-4450-8de5-d1102beef4fa', '{"tableName": "fox-edge-opc-ua/1.0.0/101.OPC_UA_ReadNode Table.csv", "objectName": "Simulation", "templateName": "读子节点数值"}', '{"value": {"status": {"Random": -1.7468932757126183, "Square": 2.0, "Counter": 30, "Sawtooth": 0.7999999523162842, "Sinusoid": 1.1755705046447154, "Triangle": 0.8000000000470326, "Expression": 3.975570456960999}}, "commStatus": {"commFailedTime": 0, "commFailedCount": 0, "commSuccessTime": 1689068682243}}', 1689068682268, 1689068682268),
	(23255, 'CE+T UPS设备-1', 'CE+T UPS', '深圳安圣电气有限公司', 'Read System Measures Table', 'proxy4http2topic', 'cc167235-df28-411e-a695-e3a46271dc13', '{}', '{"value": {}, "commStatus": {"commFailedTime": 1694163579464, "commFailedCount": 1, "commSuccessTime": 0}}', 1694163579531, 1694163579531),
	(23256, 'CE+T UPS设备-1', 'CE+T UPS', '深圳安圣电气有限公司', 'Read System Measures Table', 'proxy4http2topic', 'b5c75178-33c8-40e3-a767-c398521ceecd', '{}', '{"value": {"status": {"ADDR": 1, "负载比": 9, "组1输入电压": 54.1, "组2输入电压": 0.0, "组3输入电压": 0.0, "组4输入电压": 0.0, "逆变器01温度": 0, "逆变器02温度": 59, "逆变器03温度": 0, "逆变器04温度": 0, "逆变器05温度": 0, "逆变器06温度": 0, "逆变器07温度": 0, "逆变器08温度": 0, "逆变器09温度": 0, "逆变器10温度": 0, "逆变器11温度": 0, "逆变器12温度": 0, "逆变器13温度": 0, "逆变器14温度": 0, "逆变器15温度": 0, "逆变器16温度": 0, "系统输出功率": 889, "系统输出电压": 229, "系统输出电流": 5.3, "系统输出频率": 50.0, "逆变器01输出功率": 304, "逆变器01输出电流": 1, "逆变器02输出功率": 304, "逆变器02输出电流": 2, "逆变器03输出功率": 281, "逆变器03输出电流": 1, "逆变器04输出功率": 0, "逆变器04输出电流": 0, "逆变器05输出功率": 0, "逆变器05输出电流": 0, "逆变器06输出功率": 0, "逆变器06输出电流": 0, "逆变器07输出功率": 0, "逆变器07输出电流": 0, "逆变器08输出功率": 0, "逆变器08输出电流": 0, "逆变器09输出功率": 0, "逆变器09输出电流": 0, "逆变器10输出功率": 0, "逆变器10输出电流": 0, "逆变器11输出功率": 0, "逆变器11输出电流": 0, "逆变器12输出功率": 0, "逆变器12输出电流": 0, "逆变器13输出功率": 0, "逆变器13输出电流": 0, "逆变器14输出功率": 0, "逆变器14输出电流": 0, "逆变器15输出功率": 0, "逆变器15输出电流": 0, "逆变器16输出功率": 0, "逆变器16输出电流": 0}}, "commStatus": {"commFailedTime": 0, "commFailedCount": 0, "commSuccessTime": 1694163642091}}', 1694163642458, 1694163642458),
	(23257, 'DLT645设备-01', 'DLT645 v1997', 'Fox Edge', '读数据', 'proxy4http2topic', 'e3363b24-3f40-4e73-8b3a-4f8e46341262', '{"tableName": "DLT645-v1997/1.0.0/DLT645-1997.csv", "objectName": "(当前)正向有功总电能", "deviceAddress": "351253111111"}', '{"value": {}, "commStatus": {"commFailedTime": 1694165412275, "commFailedCount": 1, "commSuccessTime": 0}}', 1694165412289, 1694165412289),
	(23258, 'DLT645设备-01', 'DLT645 v1997', 'Fox Edge', '读数据', 'proxy4http2topic', 'f2177619-69ce-4b5a-952a-e6a1e8aca96b', '{"tableName": "DLT645-v1997/1.0.0/DLT645-1997.csv", "objectName": "(当前)正向有功总电能", "deviceAddress": "351253111111"}', '{"value": {}, "commStatus": {"commFailedTime": 1694165964929, "commFailedCount": 1, "commSuccessTime": 0}}', 1694165964947, 1694165964947),
	(23264, '新的ModBus设备', 'ModBus Device', 'Fox Edge', 'Read Holding Register', 'manager', 'f8e29ea9-c3ee-4de7-a7c1-02a82c5f4d83', '{"regCnt": 2, "devAddr": 1, "regAddr": 69, "tableName": "bufu-modbus/v1/1.0.0/01.READ_HOLDING_REGISTER.csv", "modbusMode": "RTU", "operateName": "Read Holding Register", "templateName": "Read System Measures Table"}', '{"value": {}, "commStatus": {"commFailedTime": 1695035507217, "commFailedCount": 1, "commSuccessTime": 0}}', 1695035507226, 1695035507226),
	(23266, 'CE+T UPS设备-1', 'CE+T UPS', '深圳安圣电气有限公司', 'Read System Measures Table', 'manager', '0d7f08de-2bdb-43bd-9ffe-d83117c7662d', '{}', '{"value": {}, "commStatus": {"commFailedTime": 1695036607784, "commFailedCount": 1, "commSuccessTime": 0}}', 1695036607786, 1695036607786),
	(23267, 'CE+T UPS设备-1', 'CE+T UPS', '深圳安圣电气有限公司', 'Read Alarms And Events Table', 'manager', 'ac4f5c26-aa18-4f43-8029-d38f58c56864', '{}', '{"value": {}, "commStatus": {"commFailedTime": 1695036636342, "commFailedCount": 1, "commSuccessTime": 0}}', 1695036636346, 1695036636346),
	(23268, 'CE+T UPS设备-1', 'CE+T UPS', '深圳安圣电气有限公司', 'Read Alarms And Events Table', 'manager', 'b1b57cf7-60f7-44ba-9c96-10fa6e60efec', '{}', '{"value": {}, "commStatus": {"commFailedTime": 1695036727451, "commFailedCount": 1, "commSuccessTime": 0}}', 1695036727453, 1695036727453),
	(23269, 'CE+T UPS设备-1', 'CE+T UPS', '深圳安圣电气有限公司', 'Read System Measures Table', 'manager', '43c789e9-46a1-4863-95b3-d5176327d52e', '{}', '{"value": {}, "commStatus": {"commFailedTime": 1695037547490, "commFailedCount": 1, "commSuccessTime": 0}}', 1695037547494, 1695037547494),
	(23270, 'CE+T UPS设备-1', 'CE+T UPS', '深圳安圣电气有限公司', 'Read System Measures Table', 'manager', '12190e64-dbf3-4915-82f6-3255c0516a70', '{}', '{"value": {}, "commStatus": {"commFailedTime": 1695037576163, "commFailedCount": 1, "commSuccessTime": 0}}', 1695037576166, 1695037576166),
	(23271, 'CE+T UPS设备-1', 'CE+T UPS', '深圳安圣电气有限公司', 'Read System Measures Table', 'manager', '9955dcbc-6237-4196-854c-5c4612cd4bd2', '{}', '{"value": {}, "commStatus": {"commFailedTime": 1695037585810, "commFailedCount": 1, "commSuccessTime": 0}}', 1695037585821, 1695037585821),
	(23272, 'CE+T UPS设备-1', 'CE+T UPS', '深圳安圣电气有限公司', 'Read Alarms And Events Table', 'manager', '952d49aa-a301-4976-a669-59cc62f64095', '{}', '{"value": {}, "commStatus": {"commFailedTime": 1695037594164, "commFailedCount": 1, "commSuccessTime": 0}}', 1695037594169, 1695037594169),
	(23273, 'CE+T UPS设备-1', 'CE+T UPS', '深圳安圣电气有限公司', 'Read System Measures Table', 'manager', '35e25033-1bfc-4723-bf82-ac14a4e4f184', '{}', '{"value": {}, "commStatus": {"commFailedTime": 1695037598761, "commFailedCount": 1, "commSuccessTime": 0}}', 1695037598765, 1695037598765),
	(23274, 'CE+T UPS设备-1', 'CE+T UPS', '深圳安圣电气有限公司', 'Read System Measures Table', 'manager', '6e8318b3-2ec0-4809-9e2c-be776ee9f90b', '{}', '{"value": {"status": {"ADDR": 1, "负载比": 9, "组1输入电压": 54.1, "组2输入电压": 0.0, "组3输入电压": 0.0, "组4输入电压": 0.0, "逆变器01温度": 0, "逆变器02温度": 59, "逆变器03温度": 0, "逆变器04温度": 0, "逆变器05温度": 0, "逆变器06温度": 0, "逆变器07温度": 0, "逆变器08温度": 0, "逆变器09温度": 0, "逆变器10温度": 0, "逆变器11温度": 0, "逆变器12温度": 0, "逆变器13温度": 0, "逆变器14温度": 0, "逆变器15温度": 0, "逆变器16温度": 0, "系统输出功率": 889, "系统输出电压": 229, "系统输出电流": 5.3, "系统输出频率": 50.0, "逆变器01输出功率": 304, "逆变器01输出电流": 1, "逆变器02输出功率": 304, "逆变器02输出电流": 2, "逆变器03输出功率": 281, "逆变器03输出电流": 1, "逆变器04输出功率": 0, "逆变器04输出电流": 0, "逆变器05输出功率": 0, "逆变器05输出电流": 0, "逆变器06输出功率": 1, "逆变器06输出电流": 0, "逆变器07输出功率": 256, "逆变器07输出电流": 0, "逆变器08输出功率": 0, "逆变器08输出电流": 0, "逆变器09输出功率": 0, "逆变器09输出电流": 0, "逆变器10输出功率": 0, "逆变器10输出电流": 0, "逆变器11输出功率": 0, "逆变器11输出电流": 0, "逆变器12输出功率": 0, "逆变器12输出电流": 0, "逆变器13输出功率": 0, "逆变器13输出电流": 0, "逆变器14输出功率": 0, "逆变器14输出电流": 0, "逆变器15输出功率": 0, "逆变器15输出电流": 0, "逆变器16输出功率": 0, "逆变器16输出电流": 0}}, "commStatus": {"commFailedTime": 0, "commFailedCount": 0, "commSuccessTime": 1695096635510}}', 1695096635912, 1695096635912),
	(23275, '新的ModBus设备', 'ModBus Device', 'Fox Edge', 'Read Holding Register', 'manager', '4700863a-d2fa-4f53-b49d-7283c8375d29', '{"regCnt": 2, "devAddr": 1, "regAddr": 69, "tableName": "bufu-modbus/v1/1.0.0/01.READ_HOLDING_REGISTER.csv", "modbusMode": "RTU", "operateName": "Read Holding Register", "templateName": "Read System Measures Table"}', '{"value": {}, "commStatus": {"commFailedTime": 1695461716484, "commFailedCount": 1, "commSuccessTime": 0}}', 1695461717038, 1695461717038),
	(23276, '新的ModBus设备', 'ModBus Device', 'Fox Edge', 'Read Holding Register', 'manager', '5cbf641a-cb54-4590-b6ac-1e4732a91ac5', '{"regCnt": 2, "devAddr": 1, "regAddr": 69, "tableName": "bufu-modbus/v1/1.0.0/01.READ_HOLDING_REGISTER.csv", "modbusMode": "TCP", "operateName": "Read Holding Register", "templateName": "Read System Measures Table"}', '{"value": {}, "commStatus": {"commFailedTime": 1695461804691, "commFailedCount": 1, "commSuccessTime": 0}}', 1695461804713, 1695461804713),
	(23277, '新的ModBus设备', 'ModBus Device', 'Fox Edge', 'Read Holding Register', 'manager', '61f59873-1bff-48be-9dc1-3281ac45ecf6', '{"regCnt": 2, "devAddr": 1, "regAddr": 69, "tableName": "bufu-modbus/v1/1.0.0/01.READ_HOLDING_REGISTER.csv", "modbusMode": "TCP", "operateName": "Read Holding Register", "templateName": "Read System Measures Table"}', '{"value": {}, "commStatus": {"commFailedTime": 1695543113442, "commFailedCount": 1, "commSuccessTime": 0}}', 1695543113533, 1695543113533),
	(23278, 'DOBOT-MG400', 'ModBus Device', 'Fox Edge', 'Read Holding Register', 'manager', 'd115072a-64b9-4a35-8513-1dd277e777fa', '{"regCnt": 1, "devAddr": 1, "regAddr": 3095, "tableName": "dobot-mg400/v1/1.0.0/Holding Registers.csv", "modbusMode": "TCP", "templateName": "Read Holding Register"}', '{"value": {"status": {"按键": 2}}, "commStatus": {"commFailedTime": 0, "commFailedCount": 0, "commSuccessTime": 1695610470958}}', 1695610471107, 1695610471107),
	(23279, 'DOBOT-MG400', 'ModBus Device', 'Fox Edge', 'Read Discrete Inputs Status', 'manager', '90c3348c-7730-45c0-8b71-10a8cf36b0d1', '{"regCnt": 7, "devAddr": 1, "regAddr": 0, "tableName": "dobot-mg400/v1/1.0.0/Discrete Inputs Status.csv", "templateName": "DOBOT-MG400 Discrete Inputs Status"}', '{"value": {}, "commStatus": {"commFailedTime": 1695610486088, "commFailedCount": 1, "commSuccessTime": 0}}', 1695610486102, 1695610486102),
	(23280, 'DOBOT-MG400', 'ModBus Device', 'Fox Edge', 'Read Coil Status', 'manager', '5da28522-0f95-4374-b155-84ba5f654184', '{"regCnt": 7, "devAddr": 1, "regAddr": 0, "tableName": "dobot-mg400/v1/1.0.0/Coil Status.csv", "templateName": "DOBOT-MG400 Read Coil Status"}', '{"value": {}, "commStatus": {"commFailedTime": 1695610492500, "commFailedCount": 1, "commSuccessTime": 0}}', 1695610492510, 1695610492510),
	(23281, 'DOBOT-MG400', 'ModBus Device', 'Fox Edge', 'Read Holding Register', 'manager', 'e9aa1be3-c190-44a9-9e60-7223b136deed', '{"regCnt": 1, "devAddr": 1, "regAddr": 3095, "tableName": "dobot-mg400/v1/1.0.0/Holding Registers.csv", "modbusMode": "TCP", "templateName": "Read Holding Register"}', '{"value": {"status": {"按键": 2}}, "commStatus": {"commFailedTime": 0, "commFailedCount": 0, "commSuccessTime": 1695610608201}}', 1695610608242, 1695610608242),
	(23282, 'DOBOT-MG400', 'ModBus Device', 'Fox Edge', 'Read Discrete Inputs Status', 'manager', '35c4c76f-4df5-47ad-b9ed-c71cefa639ea', '{"regCnt": 7, "devAddr": 1, "regAddr": 0, "tableName": "dobot-mg400/v1/1.0.0/Discrete Inputs Status.csv", "templateName": "DOBOT-MG400 Discrete Inputs Status"}', '{"value": {}, "commStatus": {"commFailedTime": 1695610612502, "commFailedCount": 1, "commSuccessTime": 0}}', 1695610612514, 1695610612514),
	(23283, 'DOBOT-MG400', 'ModBus Device', 'Fox Edge', 'Read Discrete Inputs Status', 'manager', '51f6c953-4f0f-45d7-846c-145d5f558bd7', '{"regCnt": 7, "devAddr": 1, "regAddr": 0, "tableName": "dobot-mg400/v1/1.0.0/Discrete Inputs Status.csv", "templateName": "DOBOT-MG400 Discrete Inputs Status"}', '{"value": {}, "commStatus": {"commFailedTime": 1695611006202, "commFailedCount": 1, "commSuccessTime": 0}}', 1695611006274, 1695611006274),
	(23284, 'DOBOT-MG400', 'ModBus Device', 'Fox Edge', 'Read Discrete Inputs Status', 'manager', '49eabfdc-3e19-49ec-806c-02427b3755ae', '{"regCnt": 7, "devAddr": 1, "regAddr": 0, "tableName": "dobot-mg400/v1/1.0.0/Discrete Inputs Status.csv", "templateName": "DOBOT-MG400 Discrete Inputs Status"}', '{"value": {}, "commStatus": {"commFailedTime": 1695611307582, "commFailedCount": 1, "commSuccessTime": 0}}', 1695611307653, 1695611307653),
	(23285, 'DOBOT-MG400', 'ModBus Device', 'Fox Edge', 'Read Discrete Inputs Status', 'manager', '7c84b926-210c-4b2b-b476-b63bcdd4af78', '{"regCnt": 7, "devAddr": 1, "regAddr": 0, "tableName": "dobot-mg400/v1/1.0.0/Discrete Inputs Status.csv", "templateName": "DOBOT-MG400 Discrete Inputs Status"}', '{"value": {}, "commStatus": {"commFailedTime": 1695611346281, "commFailedCount": 1, "commSuccessTime": 0}}', 1695611346293, 1695611346293),
	(23286, 'DOBOT-MG400', 'ModBus Device', 'Fox Edge', 'Read Discrete Inputs Status', 'manager', 'a435bcf1-2f5f-4c0f-94a5-2520a0dfe63b', '{"regCnt": 7, "devAddr": 1, "regAddr": 0, "tableName": "dobot-mg400/v1/1.0.0/Discrete Inputs Status.csv", "templateName": "DOBOT-MG400 Discrete Inputs Status"}', '{"value": {}, "commStatus": {"commFailedTime": 1695611447104, "commFailedCount": 1, "commSuccessTime": 0}}', 1695611447123, 1695611447123),
	(23287, 'DOBOT-MG400', 'ModBus Device', 'Fox Edge', 'Read Discrete Inputs Status', 'manager', 'd2250c8f-e6d0-43c4-b2cb-f66e38f626e9', '{"regCnt": 7, "devAddr": 1, "regAddr": 0, "tableName": "dobot-mg400/v1/1.0.0/Discrete Inputs Status.csv", "templateName": "DOBOT-MG400 Discrete Inputs Status"}', '{"value": {}, "commStatus": {"commFailedTime": 1695611470572, "commFailedCount": 1, "commSuccessTime": 0}}', 1695611470587, 1695611470587),
	(23288, 'DOBOT-MG400', 'ModBus Device', 'Fox Edge', 'Read Discrete Inputs Status', 'manager', 'f7874bb5-5878-4dbb-9eab-e6736333d66c', '{"regCnt": 7, "devAddr": 1, "regAddr": 0, "tableName": "dobot-mg400/v1/1.0.0/Discrete Inputs Status.csv", "modbusMode": "TCP", "templateName": "DOBOT-MG400 Discrete Inputs Status"}', '{"value": {"status": {"暂停中": false, "已准备好": false, "报警状态": false, "碰撞状态": false, "自动退出": false, "运行状态": false, "手自动模式": false}}, "commStatus": {"commFailedTime": 0, "commFailedCount": 0, "commSuccessTime": 1695611543106}}', 1695611543184, 1695611543184),
	(23289, 'DOBOT-MG400', 'ModBus Device', 'Fox Edge', 'Write Single Status', 'manager', 'd4b12c98-3ee6-4d87-9870-2512c8b6a896', '{"tableName": "dobot-mg400/v1/1.0.0/Coil Status.csv", "objectName": "启动", "objectValue": true, "templateName": "DOBOT-MG400 Write Coil Status"}', '{"value": {}, "commStatus": {"commFailedTime": 1695611607894, "commFailedCount": 1, "commSuccessTime": 0}}', 1695611607906, 1695611607906),
	(23290, 'DOBOT-MG400', 'ModBus Device', 'Fox Edge', 'Write Single Status', 'manager', '6e52a4e3-cab3-4a5b-b128-3d28a7e31f36', '{"tableName": "dobot-mg400/v1/1.0.0/Coil Status.csv", "modbusMode": "TCP", "objectName": "启动", "objectValue": true, "templateName": "DOBOT-MG400 Write Coil Status"}', '{"value": {}, "commStatus": {"commFailedTime": 1695611623272, "commFailedCount": 1, "commSuccessTime": 0}}', 1695611623285, 1695611623285),
	(23291, 'DOBOT-MG400', 'ModBus Device', 'Fox Edge', 'Write Single Register', 'manager', '9bc72de0-485d-4711-98e8-daf5d0b75318', '{"tableName": "dobot-mg400/v1/1.0.0/Holding Registers.csv", "objectName": "按键", "objectValue": 2, "templateName": "DOBOT-MG400 Write Holding Registers"}', '{"value": {}, "commStatus": {"commFailedTime": 1695611631920, "commFailedCount": 1, "commSuccessTime": 0}}', 1695611631937, 1695611631937),
	(23292, 'DOBOT-MG400', 'ModBus Device', 'Fox Edge', 'Write Single Register', 'manager', '110e948e-506f-4c97-a302-5da2a00b1279', '{"tableName": "dobot-mg400/v1/1.0.0/Holding Registers.csv", "objectName": "按键", "objectValue": 1, "templateName": "DOBOT-MG400 Write Holding Registers"}', '{"value": {}, "commStatus": {"commFailedTime": 1695611641115, "commFailedCount": 1, "commSuccessTime": 0}}', 1695611641124, 1695611641124),
	(23293, 'DOBOT-MG400', 'ModBus Device', 'Fox Edge', 'Write Single Register', 'manager', '1c439def-6ebd-468a-8ca8-bd1114c76981', '{"tableName": "dobot-mg400/v1/1.0.0/Holding Registers.csv", "objectName": "按键", "objectValue": 2, "templateName": "DOBOT-MG400 Write Holding Registers"}', '{"value": {}, "commStatus": {"commFailedTime": 1695611692401, "commFailedCount": 1, "commSuccessTime": 0}}', 1695611692422, 1695611692422),
	(23294, 'DOBOT-MG400', 'ModBus Device', 'Fox Edge', 'Write Single Register', 'manager', '3073847c-97c2-4bb2-b634-11fba51930d2', '{"tableName": "dobot-mg400/v1/1.0.0/Holding Registers.csv", "modbusMode": "TCP", "objectName": "按键", "objectValue": 2, "templateName": "DOBOT-MG400 Write Holding Registers"}', '{"value": {}, "commStatus": {"commFailedTime": 1695611714991, "commFailedCount": 1, "commSuccessTime": 0}}', 1695611715009, 1695611715009),
	(23295, 'DOBOT-MG400', 'ModBus Device', 'Fox Edge', 'Read Discrete Inputs Status', 'manager', '1b3dfb8d-d526-4507-bfae-0b60634106b9', '{"regCnt": 7, "devAddr": 1, "regAddr": 0, "tableName": "dobot-mg400/v1/1.0.0/Discrete Inputs Status.csv", "modbusMode": "TCP", "templateName": "DOBOT-MG400 Discrete Inputs Status"}', '{"value": {"status": {"暂停中": false, "已准备好": false, "报警状态": false, "碰撞状态": false, "自动退出": false, "运行状态": false, "手自动模式": false}}, "commStatus": {"commFailedTime": 0, "commFailedCount": 0, "commSuccessTime": 1695611836636}}', 1695611836649, 1695611836649),
	(23296, 'DOBOT-MG400', 'ModBus Device', 'Fox Edge', 'Write Single Register', 'manager', '89eb1819-55d6-4edf-ba8e-7b9931ffc40d', '{"tableName": "dobot-mg400/v1/1.0.0/Holding Registers.csv", "modbusMode": "TCP", "objectName": "按键", "objectValue": 1, "templateName": "DOBOT-MG400 Write Holding Registers"}', '{"value": {}, "commStatus": {"commFailedTime": 1695611840048, "commFailedCount": 1, "commSuccessTime": 0}}', 1695611840054, 1695611840054),
	(23297, 'DOBOT-MG400', 'ModBus Device', 'Fox Edge', 'Write Single Register', 'manager', '7f33d357-623e-4b91-9359-09838e163b93', '{"tableName": "dobot-mg400/v1/1.0.0/Holding Registers.csv", "modbusMode": "TCP", "objectName": "按键", "objectValue": 1, "templateName": "DOBOT-MG400 Write Holding Registers"}', '{"value": {"status": {"按键": 1}}, "commStatus": {"commFailedTime": 0, "commFailedCount": 0, "commSuccessTime": 1695612033317}}', 1695612033356, 1695612033356),
	(23298, 'DOBOT-MG400', 'ModBus Device', 'Fox Edge', 'Write Single Register', 'manager', 'e5ffff78-b41a-480a-980b-bf7ecbfe3543', '{"tableName": "dobot-mg400/v1/1.0.0/Holding Registers.csv", "modbusMode": "TCP", "objectName": "按键", "objectValue": 2, "templateName": "DOBOT-MG400 Write Holding Registers"}', '{"value": {"status": {"按键": 2}}, "commStatus": {"commFailedTime": 0, "commFailedCount": 0, "commSuccessTime": 1695612037530}}', 1695612037554, 1695612037554),
	(23299, 'DOBOT-MG400', 'ModBus Device', 'Fox Edge', 'Write Single Status', 'manager', 'ee9a100e-f68b-4f4c-b99a-134f199c1c7d', '{"tableName": "dobot-mg400/v1/1.0.0/Coil Status.csv", "modbusMode": "TCP", "objectName": "启动", "objectValue": true, "templateName": "DOBOT-MG400 Write Coil Status"}', '{"value": {"status": {"启动": true}}, "commStatus": {"commFailedTime": 0, "commFailedCount": 0, "commSuccessTime": 1695612043204}}', 1695612043226, 1695612043226),
	(23300, 'DOBOT-MG400', 'ModBus Device', 'Fox Edge', 'Read Coil Status', 'manager', '715040eb-4dd7-4b6b-8db5-04ec476a7199', '{"regCnt": 7, "devAddr": 1, "regAddr": 0, "tableName": "dobot-mg400/v1/1.0.0/Coil Status.csv", "modbusMode": "TCP", "templateName": "DOBOT-MG400 Read Coil Status"}', '{"value": {"status": {"停止": true, "启动": true, "复位": false, "急停": false, "暂停": true, "继续": true, "清除报警": false}}, "commStatus": {"commFailedTime": 0, "commFailedCount": 0, "commSuccessTime": 1695612047337}}', 1695612047411, 1695612047411),
	(23301, 'DOBOT-MG400', 'ModBus Device', 'Fox Edge', 'Read Discrete Inputs Status', 'manager', '5ceedcb0-ab28-472f-ac44-8c39b428e31d', '{"regCnt": 7, "devAddr": 1, "regAddr": 0, "tableName": "dobot-mg400/v1/1.0.0/Discrete Inputs Status.csv", "modbusMode": "TCP", "templateName": "DOBOT-MG400 Discrete Inputs Status"}', '{"value": {"status": {"暂停中": false, "已准备好": false, "报警状态": false, "碰撞状态": false, "自动退出": false, "运行状态": false, "手自动模式": false}}, "commStatus": {"commFailedTime": 0, "commFailedCount": 0, "commSuccessTime": 1695612051030}}', 1695612051042, 1695612051042),
	(23302, 'DOBOT-MG400', 'ModBus Device', 'Fox Edge', 'Read Holding Register', 'manager', 'fd5fb2f5-88ef-4878-9cc2-03bf70f70e7a', '{"regCnt": 1, "devAddr": 1, "regAddr": 3095, "tableName": "dobot-mg400/v1/1.0.0/Holding Registers.csv", "modbusMode": "TCP", "templateName": "Read Holding Register"}', '{"value": {"status": {"按键": 2}}, "commStatus": {"commFailedTime": 0, "commFailedCount": 0, "commSuccessTime": 1695612056275}}', 1695612056285, 1695612056285),
	(23303, 'DOBOT-MG400', 'ModBus Device', 'Fox Edge', 'Write Single Register', 'manager', 'ef295b2d-15a4-4e65-9058-bffa85009616', '{"tableName": "dobot-mg400/v1/1.0.0/Holding Registers.csv", "objectName": "按键", "objectValue": 1, "templateName": "DOBOT-MG400 Write Holding Registers"}', '{"value": {"status": {"按键": 1}}, "commStatus": {"commFailedTime": 0, "commFailedCount": 0, "commSuccessTime": 1695612086529}}', 1695612086547, 1695612086547),
	(23304, 'DOBOT-MG400', 'ModBus Device', 'Fox Edge', 'Write Single Register', 'manager', 'c3675d54-36f9-4f33-aa27-cd1a0d1818ba', '{"tableName": "dobot-mg400/v1/1.0.0/Holding Registers.csv", "objectName": "按键", "objectValue": 2, "templateName": "DOBOT-MG400 Write Holding Registers"}', '{"value": {"status": {"按键": 2}}, "commStatus": {"commFailedTime": 0, "commFailedCount": 0, "commSuccessTime": 1695612100939}}', 1695612100965, 1695612100965),
	(23305, 'DOBOT-MG400', 'ModBus Device', 'Fox Edge', 'Read Coil Status', 'manager', '21bb4435-32ab-4d71-afe1-fbacdc7623bb', '{"regCnt": 7, "devAddr": 1, "regAddr": 0, "tableName": "dobot-mg400/v1/1.0.0/Coil Status.csv", "modbusMode": "TCP", "templateName": "DOBOT-MG400 Read Coil Status"}', '{"value": {"status": {"停止": true, "启动": true, "复位": false, "急停": false, "暂停": true, "继续": true, "清除报警": false}}, "commStatus": {"commFailedTime": 0, "commFailedCount": 0, "commSuccessTime": 1695612112917}}', 1695612112928, 1695612112928),
	(23306, 'DOBOT-MG400', 'ModBus Device', 'Fox Edge', 'Read Discrete Inputs Status', 'manager', '4e9d696c-fb6d-4ac8-9f9c-20070904c99a', '{"regCnt": 7, "devAddr": 1, "regAddr": 0, "tableName": "dobot-mg400/v1/1.0.0/Discrete Inputs Status.csv", "templateName": "DOBOT-MG400 Discrete Inputs Status"}', '{"value": {"status": {"暂停中": false, "已准备好": false, "报警状态": false, "碰撞状态": false, "自动退出": false, "运行状态": false, "手自动模式": false}}, "commStatus": {"commFailedTime": 0, "commFailedCount": 0, "commSuccessTime": 1695612125755}}', 1695612125771, 1695612125771),
	(23307, 'DOBOT-MG400', 'ModBus Device', 'Fox Edge', 'Read Holding Register', 'manager', '100becf0-92b0-46c9-b7fb-cc45cbdaf194', '{"regCnt": 1, "devAddr": 1, "regAddr": 3095, "tableName": "dobot-mg400/v1/1.0.0/Holding Registers.csv", "modbusMode": "TCP", "templateName": "Read Holding Register"}', '{"value": {"status": {"按键": 2}}, "commStatus": {"commFailedTime": 0, "commFailedCount": 0, "commSuccessTime": 1695612131121}}', 1695612131142, 1695612131142),
	(23308, 'DOBOT-MG400', 'ModBus Device', 'Fox Edge', 'Read Holding Register', 'manager', 'b00aa17c-5b96-4c56-9513-bbf6ac3bc221', '{"regCnt": 1, "devAddr": 1, "regAddr": 3095, "tableName": "dobot-mg400/v1/1.0.0/Holding Registers.csv", "templateName": "Read Holding Register"}', '{"value": {"status": {"按键": 2}}, "commStatus": {"commFailedTime": 0, "commFailedCount": 0, "commSuccessTime": 1695612143065}}', 1695612143071, 1695612143071),
	(23309, 'DOBOT-MG400', 'ModBus Device', 'Fox Edge', 'Read Holding Register', 'manager', 'ca5ec3a8-c83b-4611-8060-b9601aff1e3b', '{"regCnt": 1, "devAddr": 1, "regAddr": 3095, "tableName": "dobot-mg400/v1/1.0.0/Holding Registers.csv", "templateName": "Read Holding Register"}', '{"value": {"status": {"按键": 2}}, "commStatus": {"commFailedTime": 0, "commFailedCount": 0, "commSuccessTime": 1695612230239}}', 1695612230253, 1695612230253),
	(23310, 'DOBOT-MG400', 'ModBus Device', 'Fox Edge', 'Write Single Register', 'manager', '60a8fb2b-a7b3-4dd0-bb1b-658465fd0845', '{"tableName": "dobot-mg400/v1/1.0.0/Holding Registers.csv", "objectName": "按键", "objectValue": 2, "templateName": "DOBOT-MG400 Write Holding Registers"}', '{"value": {"status": {"按键": 2}}, "commStatus": {"commFailedTime": 0, "commFailedCount": 0, "commSuccessTime": 1695612235484}}', 1695612235495, 1695612235495),
	(23311, 'DOBOT-MG400', 'ModBus Device', 'Fox Edge', 'Write Single Status', 'manager', 'a3855292-4c07-407c-9bfd-5c28481931b1', '{"tableName": "dobot-mg400/v1/1.0.0/Coil Status.csv", "objectName": "启动", "objectValue": true, "templateName": "DOBOT-MG400 Write Coil Status"}', '{"value": {"status": {"启动": true}}, "commStatus": {"commFailedTime": 0, "commFailedCount": 0, "commSuccessTime": 1695612239642}}', 1695612239652, 1695612239652),
	(23312, 'DOBOT-MG400', 'ModBus Device', 'Fox Edge', 'Read Discrete Inputs Status', 'manager', '8dd2ba20-e9a7-4255-86e7-62c51b9f0156', '{"regCnt": 7, "devAddr": 1, "regAddr": 0, "tableName": "dobot-mg400/v1/1.0.0/Discrete Inputs Status.csv", "templateName": "DOBOT-MG400 Discrete Inputs Status"}', '{"value": {"status": {"暂停中": false, "已准备好": false, "报警状态": false, "碰撞状态": false, "自动退出": false, "运行状态": false, "手自动模式": false}}, "commStatus": {"commFailedTime": 0, "commFailedCount": 0, "commSuccessTime": 1695612244389}}', 1695612244405, 1695612244405),
	(23313, 'DOBOT-MG400', 'ModBus Device', 'Fox Edge', 'Read Holding Register', 'manager', 'a38d8111-98b4-4fe5-badd-6e279bd6d7fa', '{"regCnt": 1, "devAddr": 1, "regAddr": 3095, "tableName": "dobot-mg400/v1/1.0.0/Holding Registers.csv", "templateName": "Read Holding Register"}', '{"value": {"status": {"按键": 2}}, "commStatus": {"commFailedTime": 0, "commFailedCount": 0, "commSuccessTime": 1695614207795}}', 1695614207837, 1695614207837),
	(23314, 'CE+T UPS设备-1', 'CE+T UPS', '深圳安圣电气有限公司', 'Read Alarms And Events Table', 'manager', '91c330c5-15c4-4ca0-b091-0aa9a6f2b58b', '{}', '{"value": {}, "commStatus": {"commFailedTime": 1696573838522, "commFailedCount": 1, "commSuccessTime": 0}}', 1696573844547, 1696573844547),
	(23315, 'CE+T UPS设备-1', 'CE+T UPS', '深圳安圣电气有限公司', 'Read System Measures Table', 'manager', '119896f6-4f05-4b26-801b-40e1293e4b31', '{}', '{"value": {}, "commStatus": {"commFailedTime": 1697278241797, "commFailedCount": 1, "commSuccessTime": 0}}', 1697278241817, 1697278241817),
	(23316, 'CE+T UPS设备-1', 'CE+T UPS', '深圳安圣电气有限公司', 'Read System Measures Table', 'manager', 'ba70ad1d-efe9-4502-9259-438cfc047628', '{}', '{"value": {"status": {"devAddr": 1, "负载比": 9, "组1输入电压": 54.1, "组2输入电压": 0.0, "组3输入电压": 0.0, "组4输入电压": 0.0, "逆变器01温度": 0, "逆变器02温度": 59, "逆变器03温度": 0, "逆变器04温度": 0, "逆变器05温度": 0, "逆变器06温度": 0, "逆变器07温度": 0, "逆变器08温度": 0, "逆变器09温度": 0, "逆变器10温度": 0, "逆变器11温度": 0, "逆变器12温度": 0, "逆变器13温度": 0, "逆变器14温度": 0, "逆变器15温度": 0, "逆变器16温度": 0, "系统输出功率": 889, "系统输出电压": 229, "系统输出电流": 5.3, "系统输出频率": 50.0, "逆变器01输出功率": 304, "逆变器01输出电流": 1, "逆变器02输出功率": 304, "逆变器02输出电流": 2, "逆变器03输出功率": 281, "逆变器03输出电流": 1, "逆变器04输出功率": 0, "逆变器04输出电流": 0, "逆变器05输出功率": 0, "逆变器05输出电流": 0, "逆变器06输出功率": 0, "逆变器06输出电流": 0, "逆变器07输出功率": 0, "逆变器07输出电流": 0, "逆变器08输出功率": 0, "逆变器08输出电流": 0, "逆变器09输出功率": 0, "逆变器09输出电流": 0, "逆变器10输出功率": 0, "逆变器10输出电流": 0, "逆变器11输出功率": 0, "逆变器11输出电流": 0, "逆变器12输出功率": 0, "逆变器12输出电流": 0, "逆变器13输出功率": 0, "逆变器13输出电流": 0, "逆变器14输出功率": 0, "逆变器14输出电流": 0, "逆变器15输出功率": 0, "逆变器15输出电流": 0, "逆变器16输出功率": 0, "逆变器16输出电流": 0}}, "commStatus": {"commFailedTime": 0, "commFailedCount": 0, "commSuccessTime": 1697278329256}}', 1697278330300, 1697278330300),
	(23317, 'Prosys-OPC-UA-Simulation', 'OPC-UA', 'Fox Edge', '读子节点数值', 'manager', 'b3dcc24c-da7f-492c-b715-e6a8423f2f29', '{"tableName": "fox-edge-opc-ua/v1/1.0.0/101.OPC_UA_ReadNode Table.csv", "objectName": "Simulation", "templateName": "读子节点数值"}', '{"value": {"status": {"Random": 1.288319995450624, "Square": 2.0, "Counter": 69, "Sawtooth": -2.0, "Sinusoid": 1.7320507510305032, "Triangle": 1.3333332613464433, "Expression": 1.7320507510305032}}, "commStatus": {"commFailedTime": 0, "commFailedCount": 0, "commSuccessTime": 1697531915079}}', 1697531915219, 1697531915219),
	(23318, 'Prosys-OPC-UA-Simulation', 'OPC-UA', 'Fox Edge', '读子节点数值', 'manager', '810f9795-66a1-402a-8c4a-578947a4f9de', '{"tableName": "fox-edge-opc-ua/v1/1.0.0/101.OPC_UA_ReadNode Table.csv", "objectName": "Simulation", "templateName": "读子节点数值"}', '{"value": {"status": {"Random": -0.975265554635254, "Square": 2.0, "Counter": 22, "Sawtooth": 0.3999999761581421, "Sinusoid": -1.9021129988215173, "Triangle": -1.5999999304314072, "Expression": 0.4978869773366248}}, "commStatus": {"commFailedTime": 0, "commFailedCount": 0, "commSuccessTime": 1697532171647}}', 1697532171702, 1697532171702),
	(23319, 'Prosys-OPC-UA-Simulation', 'OPC-UA', 'Fox Edge', '读子节点数值', 'manager', '9b003985-2757-4527-899b-44e94736d0ef', '{"tableName": "fox-edge-opc-ua/v1/1.0.0/101.OPC_UA_ReadNode Table.csv", "objectName": "Simulation", "templateName": "读子节点数值"}', '{"value": {"status": {"Random": 1.013468648016823, "Square": 2.0, "Counter": 39, "Sawtooth": -0.7999999523162842, "Sinusoid": 1.9890437939067984, "Triangle": 1.8666666859747576, "Expression": 3.1890438415905145}}, "commStatus": {"commFailedTime": 0, "commFailedCount": 0, "commSuccessTime": 1697532188728}}', 1697532188808, 1697532188808),
	(23320, 'CE+T UPS设备-1', 'CE+T UPS', '深圳安圣电气有限公司', 'Read Alarms And Events Table', 'manager', '3c0c39fa-7094-44c6-9037-9bcbe63bddb1', '{}', '{"value": {"status": {"devAddr": 1, "过载告警状态": false, "不同步告警状态": false, "系统紧急告警状态": false, "是否工作在交流方式": false, "是否工作在在线方式": true, "是否工作在逆变方式": false, "是否有逆变器手动停": false, "系统非紧急告警状态": false, "负载是否由市电供电": false, "逆变器故障告警状态": false, "逆变器超温告警状态": false, "逆变器限流告警状态": false, "48V直流熔丝断告警状态": false, "直流电压超限告警状态": false, "负载是否由逆变器供电": false, "输出电压超限告警状态": false, "用户交流熔丝断告警状态": false, "辅助交流熔丝断告警状态": false, "逆变器 0传输故障告警状态": false, "逆变器 1传输故障告警状态": false, "逆变器 2传输故障告警状态": false, "逆变器 3传输故障告警状态": false, "逆变器 4传输故障告警状态": false, "逆变器 5传输故障告警状态": false, "逆变器 6传输故障告警状态": false, "逆变器 7传输故障告警状态": false, "逆变器 8传输故障告警状态": false, "逆变器 9传输故障告警状态": false, "逆变器10传输故障告警状态": false, "逆变器11传输故障告警状态": false, "逆变器12传输故障告警状态": false, "逆变器13传输故障告警状态": false, "逆变器14传输故障告警状态": false, "逆变器15传输故障告警状态": false, "是否由市电切换到手动旁路": false, "是否由逆变切换到手动旁路": false}}, "commStatus": {"commFailedTime": 0, "commFailedCount": 0, "commSuccessTime": 1697962448623}}', 1697962448672, 1697962448672),
	(23321, 'CJT188设备-01', 'CJT188', 'Fox Edge', '读表数据', 'manager', '0a685496-b5da-4e23-9c50-558e99caaf39', '{"type": 16, "address": "01 00 00 05 08 00 00"}', '{"value": {"status": {"sn": 0, "时间": "2015-5-11 22:1:31", "状态1": 32, "状态2": 33, "本月用量": 776655, "累计用量": 776655, "本月用量单位": "m3", "累计用量单位": "m3"}}, "commStatus": {"commFailedTime": 0, "commFailedCount": 0, "commSuccessTime": 1699259394398}}', 1699259416217, 1699259416217),
	(23322, 'ModSim32', 'ModBus Device', 'Fox Edge', 'Read Coil Status', 'manager', 'fe34ce6b-012e-4a81-bd69-140296fe6be1', '{"regCnt": 1, "regAddr": 3095, "tableName": "dobot-mg400/v1/1.0.0/Holding Registers.csv", "templateName": "DOBOT-MG400 Read Holding Register"}', '{"value": {}, "commStatus": {"commFailedTime": 1700538022582, "commFailedCount": 1, "commSuccessTime": 0}}', 1700538022618, 1700538022618),
	(23323, 'CE+T UPS设备-1', 'CE+T UPS', '深圳安圣电气有限公司', 'Read Alarms And Events Table', 'manager', '5667a592-191c-4c3b-aa2c-df5ab15a40d1', '{}', '{"value": {}, "commStatus": {"commFailedTime": 1702438798432, "commFailedCount": 1, "commSuccessTime": 0}}', 1702438800983, 1702438800983),
	(23324, 'CE+T UPS设备-1', 'CE+T UPS', '深圳安圣电气有限公司', 'Read Alarms And Events Table', 'manager', 'c5021819-dedb-41fe-bade-fed3bdea3e47', '{}', '{"value": {}, "commStatus": {"commFailedTime": 1702438805808, "commFailedCount": 1, "commSuccessTime": 0}}', 1702438813661, 1702438813661),
	(23325, 'CE+T UPS设备-1', 'CE+T UPS', '深圳安圣电气有限公司', 'Read Alarms And Events Table', 'manager', 'c0e855ce-1810-40a7-80a4-551823edd6e8', '{}', '{"value": {}, "commStatus": {"commFailedTime": 1702438805072, "commFailedCount": 1, "commSuccessTime": 0}}', 1702438813700, 1702438813700),
	(23326, 'CE+T UPS设备-1', 'CE+T UPS', '深圳安圣电气有限公司', 'Read Alarms And Events Table', 'manager', 'e77b7ef3-76d1-42b0-b489-a81d18afc821', '{}', '{"value": {}, "commStatus": {"commFailedTime": 1702438804389, "commFailedCount": 1, "commSuccessTime": 0}}', 1702438813729, 1702438813729),
	(23327, 'CE+T UPS设备-1', 'CE+T UPS', '深圳安圣电气有限公司', 'Read Alarms And Events Table', 'manager', 'b338d1cb-85de-4d55-be9f-949f26d573df', '{}', '{"value": {}, "commStatus": {"commFailedTime": 1702438803640, "commFailedCount": 1, "commSuccessTime": 0}}', 1702438813754, 1702438813754),
	(23328, 'CE+T UPS设备-1', 'CE+T UPS', '深圳安圣电气有限公司', 'Read System Measures Table', 'manager', '09fed3cf-129f-4534-9b17-cd5b18b76ee4', '{}', '{"value": {"status": {"devAddr": 1, "负载比": 9, "组1输入电压": 54.1, "组2输入电压": 0.0, "组3输入电压": 0.0, "组4输入电压": 0.0, "逆变器01温度": 0, "逆变器02温度": 59, "逆变器03温度": 0, "逆变器04温度": 0, "逆变器05温度": 0, "逆变器06温度": 0, "逆变器07温度": 0, "逆变器08温度": 0, "逆变器09温度": 0, "逆变器10温度": 0, "逆变器11温度": 0, "逆变器12温度": 0, "逆变器13温度": 0, "逆变器14温度": 0, "逆变器15温度": 0, "逆变器16温度": 0, "系统输出功率": 889, "系统输出电压": 229, "系统输出电流": 5.3, "系统输出频率": 50.0, "逆变器01输出功率": 304, "逆变器01输出电流": 1, "逆变器02输出功率": 304, "逆变器02输出电流": 2, "逆变器03输出功率": 281, "逆变器03输出电流": 1, "逆变器04输出功率": 0, "逆变器04输出电流": 0, "逆变器05输出功率": 0, "逆变器05输出电流": 0, "逆变器06输出功率": 1, "逆变器06输出电流": 0, "逆变器07输出功率": 256, "逆变器07输出电流": 0, "逆变器08输出功率": 0, "逆变器08输出电流": 0, "逆变器09输出功率": 0, "逆变器09输出电流": 0, "逆变器10输出功率": 0, "逆变器10输出电流": 0, "逆变器11输出功率": 0, "逆变器11输出电流": 0, "逆变器12输出功率": 0, "逆变器12输出电流": 0, "逆变器13输出功率": 0, "逆变器13输出电流": 0, "逆变器14输出功率": 0, "逆变器14输出电流": 0, "逆变器15输出功率": 0, "逆变器15输出电流": 0, "逆变器16输出功率": 0, "逆变器16输出电流": 0}}, "commStatus": {"commFailedTime": 0, "commFailedCount": 0, "commSuccessTime": 1702545554516}}', 1702545590180, 1702545590180),
	(23329, 'CE+T UPS设备-1', 'CE+T UPS', '深圳安圣电气有限公司', 'Read System Measures Table', 'manager', '971eef61-c01e-4f18-bc59-c6b4f9fffc13', '{}', '{"value": {"status": {"devAddr": 1, "负载比": 9, "组1输入电压": 54.1, "组2输入电压": 0.0, "组3输入电压": 0.0, "组4输入电压": 0.0, "逆变器01温度": 0, "逆变器02温度": 59, "逆变器03温度": 0, "逆变器04温度": 0, "逆变器05温度": 0, "逆变器06温度": 0, "逆变器07温度": 0, "逆变器08温度": 0, "逆变器09温度": 0, "逆变器10温度": 0, "逆变器11温度": 0, "逆变器12温度": 0, "逆变器13温度": 0, "逆变器14温度": 0, "逆变器15温度": 0, "逆变器16温度": 0, "系统输出功率": 889, "系统输出电压": 229, "系统输出电流": 5.3, "系统输出频率": 50.0, "逆变器01输出功率": 304, "逆变器01输出电流": 1, "逆变器02输出功率": 304, "逆变器02输出电流": 2, "逆变器03输出功率": 281, "逆变器03输出电流": 1, "逆变器04输出功率": 0, "逆变器04输出电流": 0, "逆变器05输出功率": 0, "逆变器05输出电流": 0, "逆变器06输出功率": 1, "逆变器06输出电流": 0, "逆变器07输出功率": 256, "逆变器07输出电流": 0, "逆变器08输出功率": 0, "逆变器08输出电流": 0, "逆变器09输出功率": 0, "逆变器09输出电流": 0, "逆变器10输出功率": 0, "逆变器10输出电流": 0, "逆变器11输出功率": 0, "逆变器11输出电流": 0, "逆变器12输出功率": 0, "逆变器12输出电流": 0, "逆变器13输出功率": 0, "逆变器13输出电流": 0, "逆变器14输出功率": 0, "逆变器14输出电流": 0, "逆变器15输出功率": 0, "逆变器15输出电流": 0, "逆变器16输出功率": 0, "逆变器16输出电流": 0}}, "commStatus": {"commFailedTime": 0, "commFailedCount": 0, "commSuccessTime": 1702826556900}}', 1702826626291, 1702826626291),
	(23330, 'CE+T UPS设备-1', 'CE+T UPS', '深圳安圣电气有限公司', 'Read System Measures Table', 'manager', 'c98501e2-345f-444f-a87e-ffd642eb234b', '{}', '{"value": {"status": {"devAddr": 1, "负载比": 9, "组1输入电压": 54.1, "组2输入电压": 0.0, "组3输入电压": 0.0, "组4输入电压": 0.0, "逆变器01温度": 0, "逆变器02温度": 59, "逆变器03温度": 0, "逆变器04温度": 0, "逆变器05温度": 0, "逆变器06温度": 0, "逆变器07温度": 0, "逆变器08温度": 0, "逆变器09温度": 0, "逆变器10温度": 0, "逆变器11温度": 0, "逆变器12温度": 0, "逆变器13温度": 0, "逆变器14温度": 0, "逆变器15温度": 0, "逆变器16温度": 0, "系统输出功率": 889, "系统输出电压": 229, "系统输出电流": 5.3, "系统输出频率": 50.0, "逆变器01输出功率": 304, "逆变器01输出电流": 1, "逆变器02输出功率": 304, "逆变器02输出电流": 2, "逆变器03输出功率": 281, "逆变器03输出电流": 1, "逆变器04输出功率": 0, "逆变器04输出电流": 0, "逆变器05输出功率": 0, "逆变器05输出电流": 0, "逆变器06输出功率": 1, "逆变器06输出电流": 0, "逆变器07输出功率": 256, "逆变器07输出电流": 0, "逆变器08输出功率": 0, "逆变器08输出电流": 0, "逆变器09输出功率": 0, "逆变器09输出电流": 0, "逆变器10输出功率": 0, "逆变器10输出电流": 0, "逆变器11输出功率": 0, "逆变器11输出电流": 0, "逆变器12输出功率": 0, "逆变器12输出电流": 0, "逆变器13输出功率": 0, "逆变器13输出电流": 0, "逆变器14输出功率": 0, "逆变器14输出电流": 0, "逆变器15输出功率": 0, "逆变器15输出电流": 0, "逆变器16输出功率": 0, "逆变器16输出电流": 0}}, "commStatus": {"commFailedTime": 0, "commFailedCount": 0, "commSuccessTime": 1702827153281}}', 1702827154066, 1702827154066),
	(23331, 'CE+T UPS设备-1', 'CE+T UPS', '深圳安圣电气有限公司', 'Read System Measures Table', 'manager', '7747a79a-288b-4127-b0ad-08f1880ed7ec', '{}', '{"value": {"status": {"devAddr": 1, "负载比": 9, "组1输入电压": 54.1, "组2输入电压": 0.0, "组3输入电压": 0.0, "组4输入电压": 0.0, "逆变器01温度": 0, "逆变器02温度": 59, "逆变器03温度": 0, "逆变器04温度": 0, "逆变器05温度": 0, "逆变器06温度": 0, "逆变器07温度": 0, "逆变器08温度": 0, "逆变器09温度": 0, "逆变器10温度": 0, "逆变器11温度": 0, "逆变器12温度": 0, "逆变器13温度": 0, "逆变器14温度": 0, "逆变器15温度": 0, "逆变器16温度": 0, "系统输出功率": 889, "系统输出电压": 229, "系统输出电流": 5.3, "系统输出频率": 50.0, "逆变器01输出功率": 304, "逆变器01输出电流": 1, "逆变器02输出功率": 304, "逆变器02输出电流": 2, "逆变器03输出功率": 281, "逆变器03输出电流": 1, "逆变器04输出功率": 0, "逆变器04输出电流": 0, "逆变器05输出功率": 0, "逆变器05输出电流": 0, "逆变器06输出功率": 1, "逆变器06输出电流": 0, "逆变器07输出功率": 256, "逆变器07输出电流": 0, "逆变器08输出功率": 0, "逆变器08输出电流": 0, "逆变器09输出功率": 0, "逆变器09输出电流": 0, "逆变器10输出功率": 0, "逆变器10输出电流": 0, "逆变器11输出功率": 0, "逆变器11输出电流": 0, "逆变器12输出功率": 0, "逆变器12输出电流": 0, "逆变器13输出功率": 0, "逆变器13输出电流": 0, "逆变器14输出功率": 0, "逆变器14输出电流": 0, "逆变器15输出功率": 0, "逆变器15输出电流": 0, "逆变器16输出功率": 0, "逆变器16输出电流": 0}}, "commStatus": {"commFailedTime": 0, "commFailedCount": 0, "commSuccessTime": 1702827409352}}', 1702827410196, 1702827410196),
	(23332, 'CE+T UPS设备-1', 'CE+T UPS', '深圳安圣电气有限公司', 'Read System Measures Table', 'manager', '07ec2f1a-5c12-47a7-bca4-7a1ff7f8131b', '{}', '{"value": {"status": {"devAddr": 1, "负载比": 9, "组1输入电压": 54.1, "组2输入电压": 0.0, "组3输入电压": 0.0, "组4输入电压": 0.0, "逆变器01温度": 0, "逆变器02温度": 59, "逆变器03温度": 0, "逆变器04温度": 0, "逆变器05温度": 0, "逆变器06温度": 0, "逆变器07温度": 0, "逆变器08温度": 0, "逆变器09温度": 0, "逆变器10温度": 0, "逆变器11温度": 0, "逆变器12温度": 0, "逆变器13温度": 0, "逆变器14温度": 0, "逆变器15温度": 0, "逆变器16温度": 0, "系统输出功率": 889, "系统输出电压": 229, "系统输出电流": 5.3, "系统输出频率": 50.0, "逆变器01输出功率": 304, "逆变器01输出电流": 1, "逆变器02输出功率": 304, "逆变器02输出电流": 2, "逆变器03输出功率": 281, "逆变器03输出电流": 1, "逆变器04输出功率": 0, "逆变器04输出电流": 0, "逆变器05输出功率": 0, "逆变器05输出电流": 0, "逆变器06输出功率": 0, "逆变器06输出电流": 0, "逆变器07输出功率": 0, "逆变器07输出电流": 0, "逆变器08输出功率": 0, "逆变器08输出电流": 0, "逆变器09输出功率": 0, "逆变器09输出电流": 0, "逆变器10输出功率": 0, "逆变器10输出电流": 0, "逆变器11输出功率": 0, "逆变器11输出电流": 0, "逆变器12输出功率": 0, "逆变器12输出电流": 0, "逆变器13输出功率": 0, "逆变器13输出电流": 0, "逆变器14输出功率": 0, "逆变器14输出电流": 0, "逆变器15输出功率": 0, "逆变器15输出电流": 0, "逆变器16输出功率": 0, "逆变器16输出电流": 0}}, "commStatus": {"commFailedTime": 0, "commFailedCount": 0, "commSuccessTime": 1702827448317}}', 1702827449295, 1702827449295),
	(23333, 'CE+T UPS设备-1', 'CE+T UPS', '深圳安圣电气有限公司', 'Read System Measures Table', 'manager', '9cb19276-5521-4167-a203-b4e232f32683', '{}', '{"value": {"status": {"devAddr": 1, "负载比": 9, "组1输入电压": 54.1, "组2输入电压": 0.0, "组3输入电压": 0.0, "组4输入电压": 0.0, "逆变器01温度": 0, "逆变器02温度": 59, "逆变器03温度": 0, "逆变器04温度": 0, "逆变器05温度": 0, "逆变器06温度": 0, "逆变器07温度": 0, "逆变器08温度": 0, "逆变器09温度": 0, "逆变器10温度": 0, "逆变器11温度": 0, "逆变器12温度": 0, "逆变器13温度": 0, "逆变器14温度": 0, "逆变器15温度": 0, "逆变器16温度": 0, "系统输出功率": 889, "系统输出电压": 229, "系统输出电流": 5.3, "系统输出频率": 50.0, "逆变器01输出功率": 304, "逆变器01输出电流": 1, "逆变器02输出功率": 304, "逆变器02输出电流": 2, "逆变器03输出功率": 281, "逆变器03输出电流": 1, "逆变器04输出功率": 0, "逆变器04输出电流": 0, "逆变器05输出功率": 0, "逆变器05输出电流": 0, "逆变器06输出功率": 1, "逆变器06输出电流": 0, "逆变器07输出功率": 256, "逆变器07输出电流": 0, "逆变器08输出功率": 0, "逆变器08输出电流": 0, "逆变器09输出功率": 0, "逆变器09输出电流": 0, "逆变器10输出功率": 0, "逆变器10输出电流": 0, "逆变器11输出功率": 0, "逆变器11输出电流": 0, "逆变器12输出功率": 0, "逆变器12输出电流": 0, "逆变器13输出功率": 0, "逆变器13输出电流": 0, "逆变器14输出功率": 0, "逆变器14输出电流": 0, "逆变器15输出功率": 0, "逆变器15输出电流": 0, "逆变器16输出功率": 0, "逆变器16输出电流": 0}}, "commStatus": {"commFailedTime": 0, "commFailedCount": 0, "commSuccessTime": 1702827508612}}', 1702827509527, 1702827509527),
	(23334, 'CE+T UPS设备-1', 'CE+T UPS', '深圳安圣电气有限公司', 'Read System Measures Table', 'manager', '89bd08d7-20bc-4925-a5d9-ffe6fa17725b', '{}', '{"value": {"status": {"devAddr": 1, "负载比": 9, "组1输入电压": 54.1, "组2输入电压": 0.0, "组3输入电压": 0.0, "组4输入电压": 0.0, "逆变器01温度": 0, "逆变器02温度": 59, "逆变器03温度": 0, "逆变器04温度": 0, "逆变器05温度": 0, "逆变器06温度": 0, "逆变器07温度": 0, "逆变器08温度": 0, "逆变器09温度": 0, "逆变器10温度": 0, "逆变器11温度": 0, "逆变器12温度": 0, "逆变器13温度": 0, "逆变器14温度": 0, "逆变器15温度": 0, "逆变器16温度": 0, "系统输出功率": 889, "系统输出电压": 229, "系统输出电流": 5.3, "系统输出频率": 50.0, "逆变器01输出功率": 304, "逆变器01输出电流": 1, "逆变器02输出功率": 304, "逆变器02输出电流": 2, "逆变器03输出功率": 281, "逆变器03输出电流": 1, "逆变器04输出功率": 0, "逆变器04输出电流": 0, "逆变器05输出功率": 0, "逆变器05输出电流": 0, "逆变器06输出功率": 0, "逆变器06输出电流": 0, "逆变器07输出功率": 0, "逆变器07输出电流": 0, "逆变器08输出功率": 0, "逆变器08输出电流": 0, "逆变器09输出功率": 0, "逆变器09输出电流": 0, "逆变器10输出功率": 0, "逆变器10输出电流": 0, "逆变器11输出功率": 0, "逆变器11输出电流": 0, "逆变器12输出功率": 0, "逆变器12输出电流": 0, "逆变器13输出功率": 0, "逆变器13输出电流": 0, "逆变器14输出功率": 0, "逆变器14输出电流": 0, "逆变器15输出功率": 0, "逆变器15输出电流": 0, "逆变器16输出功率": 0, "逆变器16输出电流": 0}}, "commStatus": {"commFailedTime": 0, "commFailedCount": 0, "commSuccessTime": 1702827567085}}', 1702827567251, 1702827567251),
	(23335, 'CE+T UPS设备-1', 'CE+T UPS', '深圳安圣电气有限公司', 'Read System Measures Table', 'manager', '3a870d78-cfb7-4631-b6af-83739d1f68f5', '{}', '{"value": {"status": {"devAddr": 1, "负载比": 9, "组1输入电压": 54.1, "组2输入电压": 0.0, "组3输入电压": 0.0, "组4输入电压": 0.0, "逆变器01温度": 0, "逆变器02温度": 59, "逆变器03温度": 0, "逆变器04温度": 0, "逆变器05温度": 0, "逆变器06温度": 0, "逆变器07温度": 0, "逆变器08温度": 0, "逆变器09温度": 0, "逆变器10温度": 0, "逆变器11温度": 0, "逆变器12温度": 0, "逆变器13温度": 0, "逆变器14温度": 0, "逆变器15温度": 0, "逆变器16温度": 0, "系统输出功率": 889, "系统输出电压": 229, "系统输出电流": 5.3, "系统输出频率": 50.0, "逆变器01输出功率": 304, "逆变器01输出电流": 1, "逆变器02输出功率": 304, "逆变器02输出电流": 2, "逆变器03输出功率": 281, "逆变器03输出电流": 1, "逆变器04输出功率": 0, "逆变器04输出电流": 0, "逆变器05输出功率": 0, "逆变器05输出电流": 0, "逆变器06输出功率": 0, "逆变器06输出电流": 0, "逆变器07输出功率": 0, "逆变器07输出电流": 0, "逆变器08输出功率": 0, "逆变器08输出电流": 0, "逆变器09输出功率": 0, "逆变器09输出电流": 0, "逆变器10输出功率": 0, "逆变器10输出电流": 0, "逆变器11输出功率": 0, "逆变器11输出电流": 0, "逆变器12输出功率": 0, "逆变器12输出电流": 0, "逆变器13输出功率": 0, "逆变器13输出电流": 0, "逆变器14输出功率": 0, "逆变器14输出电流": 0, "逆变器15输出功率": 0, "逆变器15输出电流": 0, "逆变器16输出功率": 0, "逆变器16输出电流": 0}}, "commStatus": {"commFailedTime": 0, "commFailedCount": 0, "commSuccessTime": 1702827623817}}', 1702827624145, 1702827624145),
	(23336, 'CE+T UPS设备-1', 'CE+T UPS', '深圳安圣电气有限公司', 'Read System Measures Table', 'manager', '2b358579-798e-48f2-9981-d57f19ecf493', '{}', '{"value": {"status": {"devAddr": 1, "负载比": 9, "组1输入电压": 54.1, "组2输入电压": 0.0, "组3输入电压": 0.0, "组4输入电压": 0.0, "逆变器01温度": 0, "逆变器02温度": 59, "逆变器03温度": 0, "逆变器04温度": 0, "逆变器05温度": 0, "逆变器06温度": 0, "逆变器07温度": 0, "逆变器08温度": 0, "逆变器09温度": 0, "逆变器10温度": 0, "逆变器11温度": 0, "逆变器12温度": 0, "逆变器13温度": 0, "逆变器14温度": 0, "逆变器15温度": 0, "逆变器16温度": 0, "系统输出功率": 889, "系统输出电压": 229, "系统输出电流": 5.3, "系统输出频率": 50.0, "逆变器01输出功率": 304, "逆变器01输出电流": 1, "逆变器02输出功率": 304, "逆变器02输出电流": 2, "逆变器03输出功率": 281, "逆变器03输出电流": 1, "逆变器04输出功率": 0, "逆变器04输出电流": 0, "逆变器05输出功率": 0, "逆变器05输出电流": 0, "逆变器06输出功率": 1, "逆变器06输出电流": 0, "逆变器07输出功率": 256, "逆变器07输出电流": 0, "逆变器08输出功率": 0, "逆变器08输出电流": 0, "逆变器09输出功率": 0, "逆变器09输出电流": 0, "逆变器10输出功率": 0, "逆变器10输出电流": 0, "逆变器11输出功率": 0, "逆变器11输出电流": 0, "逆变器12输出功率": 0, "逆变器12输出电流": 0, "逆变器13输出功率": 0, "逆变器13输出电流": 0, "逆变器14输出功率": 0, "逆变器14输出电流": 0, "逆变器15输出功率": 0, "逆变器15输出电流": 0, "逆变器16输出功率": 0, "逆变器16输出电流": 0}}, "commStatus": {"commFailedTime": 0, "commFailedCount": 0, "commSuccessTime": 1702827678488}}', 1702827678965, 1702827678965),
	(23337, 'CE+T UPS设备-1', 'CE+T UPS', '深圳安圣电气有限公司', 'Read System Measures Table', 'manager', 'a40dc90a-909f-4e75-ac10-d66960f38d68', '{}', '{"value": {"status": {"devAddr": 1, "负载比": 9, "组1输入电压": 54.1, "组2输入电压": 0.0, "组3输入电压": 0.0, "组4输入电压": 0.0, "逆变器01温度": 0, "逆变器02温度": 59, "逆变器03温度": 0, "逆变器04温度": 0, "逆变器05温度": 0, "逆变器06温度": 0, "逆变器07温度": 0, "逆变器08温度": 0, "逆变器09温度": 0, "逆变器10温度": 0, "逆变器11温度": 0, "逆变器12温度": 0, "逆变器13温度": 0, "逆变器14温度": 0, "逆变器15温度": 0, "逆变器16温度": 0, "系统输出功率": 889, "系统输出电压": 229, "系统输出电流": 5.3, "系统输出频率": 50.0, "逆变器01输出功率": 304, "逆变器01输出电流": 1, "逆变器02输出功率": 304, "逆变器02输出电流": 2, "逆变器03输出功率": 281, "逆变器03输出电流": 1, "逆变器04输出功率": 0, "逆变器04输出电流": 0, "逆变器05输出功率": 0, "逆变器05输出电流": 0, "逆变器06输出功率": 1, "逆变器06输出电流": 0, "逆变器07输出功率": 256, "逆变器07输出电流": 0, "逆变器08输出功率": 0, "逆变器08输出电流": 0, "逆变器09输出功率": 0, "逆变器09输出电流": 0, "逆变器10输出功率": 0, "逆变器10输出电流": 0, "逆变器11输出功率": 0, "逆变器11输出电流": 0, "逆变器12输出功率": 0, "逆变器12输出电流": 0, "逆变器13输出功率": 0, "逆变器13输出电流": 0, "逆变器14输出功率": 0, "逆变器14输出电流": 0, "逆变器15输出功率": 0, "逆变器15输出电流": 0, "逆变器16输出功率": 0, "逆变器16输出电流": 0}}, "commStatus": {"commFailedTime": 0, "commFailedCount": 0, "commSuccessTime": 1702827723130}}', 1702827723138, 1702827723138),
	(23338, 'CE+T UPS设备-1', 'CE+T UPS', '深圳安圣电气有限公司', 'Read System Measures Table', 'manager', '674809c2-be68-479d-bc3a-786536f793e2', '{}', '{"value": {"status": {"devAddr": 1, "负载比": 9, "组1输入电压": 54.1, "组2输入电压": 0.0, "组3输入电压": 0.0, "组4输入电压": 0.0, "逆变器01温度": 0, "逆变器02温度": 59, "逆变器03温度": 0, "逆变器04温度": 0, "逆变器05温度": 0, "逆变器06温度": 0, "逆变器07温度": 0, "逆变器08温度": 0, "逆变器09温度": 0, "逆变器10温度": 0, "逆变器11温度": 0, "逆变器12温度": 0, "逆变器13温度": 0, "逆变器14温度": 0, "逆变器15温度": 0, "逆变器16温度": 0, "系统输出功率": 889, "系统输出电压": 229, "系统输出电流": 5.3, "系统输出频率": 50.0, "逆变器01输出功率": 304, "逆变器01输出电流": 1, "逆变器02输出功率": 304, "逆变器02输出电流": 2, "逆变器03输出功率": 281, "逆变器03输出电流": 1, "逆变器04输出功率": 0, "逆变器04输出电流": 0, "逆变器05输出功率": 0, "逆变器05输出电流": 0, "逆变器06输出功率": 1, "逆变器06输出电流": 0, "逆变器07输出功率": 256, "逆变器07输出电流": 0, "逆变器08输出功率": 0, "逆变器08输出电流": 0, "逆变器09输出功率": 0, "逆变器09输出电流": 0, "逆变器10输出功率": 0, "逆变器10输出电流": 0, "逆变器11输出功率": 0, "逆变器11输出电流": 0, "逆变器12输出功率": 0, "逆变器12输出电流": 0, "逆变器13输出功率": 0, "逆变器13输出电流": 0, "逆变器14输出功率": 0, "逆变器14输出电流": 0, "逆变器15输出功率": 0, "逆变器15输出电流": 0, "逆变器16输出功率": 0, "逆变器16输出电流": 0}}, "commStatus": {"commFailedTime": 0, "commFailedCount": 0, "commSuccessTime": 1702827770556}}', 1702827771427, 1702827771427),
	(23339, 'CE+T UPS设备-1', 'CE+T UPS', '深圳安圣电气有限公司', 'Read System Measures Table', 'manager', '36745e73-e2a0-452e-9583-c498bb22b4e7', '{}', '{"value": {"status": {"devAddr": 1, "负载比": 9, "组1输入电压": 54.1, "组2输入电压": 0.0, "组3输入电压": 0.0, "组4输入电压": 0.0, "逆变器01温度": 0, "逆变器02温度": 59, "逆变器03温度": 0, "逆变器04温度": 0, "逆变器05温度": 0, "逆变器06温度": 0, "逆变器07温度": 0, "逆变器08温度": 0, "逆变器09温度": 0, "逆变器10温度": 0, "逆变器11温度": 0, "逆变器12温度": 0, "逆变器13温度": 0, "逆变器14温度": 0, "逆变器15温度": 0, "逆变器16温度": 0, "系统输出功率": 889, "系统输出电压": 229, "系统输出电流": 5.3, "系统输出频率": 50.0, "逆变器01输出功率": 304, "逆变器01输出电流": 1, "逆变器02输出功率": 304, "逆变器02输出电流": 2, "逆变器03输出功率": 281, "逆变器03输出电流": 1, "逆变器04输出功率": 0, "逆变器04输出电流": 0, "逆变器05输出功率": 0, "逆变器05输出电流": 0, "逆变器06输出功率": 1, "逆变器06输出电流": 0, "逆变器07输出功率": 256, "逆变器07输出电流": 0, "逆变器08输出功率": 0, "逆变器08输出电流": 0, "逆变器09输出功率": 0, "逆变器09输出电流": 0, "逆变器10输出功率": 0, "逆变器10输出电流": 0, "逆变器11输出功率": 0, "逆变器11输出电流": 0, "逆变器12输出功率": 0, "逆变器12输出电流": 0, "逆变器13输出功率": 0, "逆变器13输出电流": 0, "逆变器14输出功率": 0, "逆变器14输出电流": 0, "逆变器15输出功率": 0, "逆变器15输出电流": 0, "逆变器16输出功率": 0, "逆变器16输出电流": 0}}, "commStatus": {"commFailedTime": 0, "commFailedCount": 0, "commSuccessTime": 1702827787960}}', 1702827788688, 1702827788688),
	(23340, 'CE+T UPS设备-1', 'CE+T UPS', '深圳安圣电气有限公司', 'Read System Measures Table', 'manager', '6bb8ac47-c329-4ec5-8788-59d011548bea', '{}', '{"value": {"status": {"devAddr": 1, "负载比": 9, "组1输入电压": 54.1, "组2输入电压": 0.0, "组3输入电压": 0.0, "组4输入电压": 0.0, "逆变器01温度": 0, "逆变器02温度": 59, "逆变器03温度": 0, "逆变器04温度": 0, "逆变器05温度": 0, "逆变器06温度": 0, "逆变器07温度": 0, "逆变器08温度": 0, "逆变器09温度": 0, "逆变器10温度": 0, "逆变器11温度": 0, "逆变器12温度": 0, "逆变器13温度": 0, "逆变器14温度": 0, "逆变器15温度": 0, "逆变器16温度": 0, "系统输出功率": 889, "系统输出电压": 229, "系统输出电流": 5.3, "系统输出频率": 50.0, "逆变器01输出功率": 304, "逆变器01输出电流": 1, "逆变器02输出功率": 304, "逆变器02输出电流": 2, "逆变器03输出功率": 281, "逆变器03输出电流": 1, "逆变器04输出功率": 0, "逆变器04输出电流": 0, "逆变器05输出功率": 0, "逆变器05输出电流": 0, "逆变器06输出功率": 0, "逆变器06输出电流": 0, "逆变器07输出功率": 0, "逆变器07输出电流": 0, "逆变器08输出功率": 0, "逆变器08输出电流": 0, "逆变器09输出功率": 0, "逆变器09输出电流": 0, "逆变器10输出功率": 0, "逆变器10输出电流": 0, "逆变器11输出功率": 0, "逆变器11输出电流": 0, "逆变器12输出功率": 0, "逆变器12输出电流": 0, "逆变器13输出功率": 0, "逆变器13输出电流": 0, "逆变器14输出功率": 0, "逆变器14输出电流": 0, "逆变器15输出功率": 0, "逆变器15输出电流": 0, "逆变器16输出功率": 0, "逆变器16输出电流": 0}}, "commStatus": {"commFailedTime": 0, "commFailedCount": 0, "commSuccessTime": 1702827820175}}', 1702827820337, 1702827820337),
	(23341, 'CE+T UPS设备-1', 'CE+T UPS', '深圳安圣电气有限公司', 'Read System Measures Table', 'manager', '01944663-5a01-4027-857a-7aa1dd267f36', '{}', '{"value": {"status": {"devAddr": 1, "负载比": 9, "组1输入电压": 54.1, "组2输入电压": 0.0, "组3输入电压": 0.0, "组4输入电压": 0.0, "逆变器01温度": 0, "逆变器02温度": 59, "逆变器03温度": 0, "逆变器04温度": 0, "逆变器05温度": 0, "逆变器06温度": 0, "逆变器07温度": 0, "逆变器08温度": 0, "逆变器09温度": 0, "逆变器10温度": 0, "逆变器11温度": 0, "逆变器12温度": 0, "逆变器13温度": 0, "逆变器14温度": 0, "逆变器15温度": 0, "逆变器16温度": 0, "系统输出功率": 889, "系统输出电压": 229, "系统输出电流": 5.3, "系统输出频率": 50.0, "逆变器01输出功率": 304, "逆变器01输出电流": 1, "逆变器02输出功率": 304, "逆变器02输出电流": 2, "逆变器03输出功率": 281, "逆变器03输出电流": 1, "逆变器04输出功率": 0, "逆变器04输出电流": 0, "逆变器05输出功率": 0, "逆变器05输出电流": 0, "逆变器06输出功率": 1, "逆变器06输出电流": 0, "逆变器07输出功率": 256, "逆变器07输出电流": 0, "逆变器08输出功率": 0, "逆变器08输出电流": 0, "逆变器09输出功率": 0, "逆变器09输出电流": 0, "逆变器10输出功率": 0, "逆变器10输出电流": 0, "逆变器11输出功率": 0, "逆变器11输出电流": 0, "逆变器12输出功率": 0, "逆变器12输出电流": 0, "逆变器13输出功率": 0, "逆变器13输出电流": 0, "逆变器14输出功率": 0, "逆变器14输出电流": 0, "逆变器15输出功率": 0, "逆变器15输出电流": 0, "逆变器16输出功率": 0, "逆变器16输出电流": 0}}, "commStatus": {"commFailedTime": 0, "commFailedCount": 0, "commSuccessTime": 1702827826468}}', 1702827826791, 1702827826791),
	(23342, 'CE+T UPS设备-1', 'CE+T UPS', '深圳安圣电气有限公司', 'Read System Measures Table', 'manager', '3fde26b6-c947-4fe3-850d-892f073f40b8', '{}', '{"value": {"status": {"devAddr": 1, "负载比": 9, "组1输入电压": 54.1, "组2输入电压": 0.0, "组3输入电压": 0.0, "组4输入电压": 0.0, "逆变器01温度": 0, "逆变器02温度": 59, "逆变器03温度": 0, "逆变器04温度": 0, "逆变器05温度": 0, "逆变器06温度": 0, "逆变器07温度": 0, "逆变器08温度": 0, "逆变器09温度": 0, "逆变器10温度": 0, "逆变器11温度": 0, "逆变器12温度": 0, "逆变器13温度": 0, "逆变器14温度": 0, "逆变器15温度": 0, "逆变器16温度": 0, "系统输出功率": 889, "系统输出电压": 229, "系统输出电流": 5.3, "系统输出频率": 50.0, "逆变器01输出功率": 304, "逆变器01输出电流": 1, "逆变器02输出功率": 304, "逆变器02输出电流": 2, "逆变器03输出功率": 281, "逆变器03输出电流": 1, "逆变器04输出功率": 0, "逆变器04输出电流": 0, "逆变器05输出功率": 0, "逆变器05输出电流": 0, "逆变器06输出功率": 0, "逆变器06输出电流": 0, "逆变器07输出功率": 0, "逆变器07输出电流": 0, "逆变器08输出功率": 0, "逆变器08输出电流": 0, "逆变器09输出功率": 0, "逆变器09输出电流": 0, "逆变器10输出功率": 0, "逆变器10输出电流": 0, "逆变器11输出功率": 0, "逆变器11输出电流": 0, "逆变器12输出功率": 0, "逆变器12输出电流": 0, "逆变器13输出功率": 0, "逆变器13输出电流": 0, "逆变器14输出功率": 0, "逆变器14输出电流": 0, "逆变器15输出功率": 0, "逆变器15输出电流": 0, "逆变器16输出功率": 0, "逆变器16输出电流": 0}}, "commStatus": {"commFailedTime": 0, "commFailedCount": 0, "commSuccessTime": 1702827833767}}', 1702827834712, 1702827834712),
	(23343, 'CE+T UPS设备-1', 'CE+T UPS', '深圳安圣电气有限公司', 'Read System Measures Table', 'manager', '1e8d1b67-cbcc-4e42-b645-fbb3c3969bb8', '{}', '{"value": {"status": {"devAddr": 1, "负载比": 9, "组1输入电压": 54.1, "组2输入电压": 0.0, "组3输入电压": 0.0, "组4输入电压": 0.0, "逆变器01温度": 0, "逆变器02温度": 59, "逆变器03温度": 0, "逆变器04温度": 0, "逆变器05温度": 0, "逆变器06温度": 0, "逆变器07温度": 0, "逆变器08温度": 0, "逆变器09温度": 0, "逆变器10温度": 0, "逆变器11温度": 0, "逆变器12温度": 0, "逆变器13温度": 0, "逆变器14温度": 0, "逆变器15温度": 0, "逆变器16温度": 0, "系统输出功率": 889, "系统输出电压": 229, "系统输出电流": 5.3, "系统输出频率": 50.0, "逆变器01输出功率": 304, "逆变器01输出电流": 1, "逆变器02输出功率": 304, "逆变器02输出电流": 2, "逆变器03输出功率": 281, "逆变器03输出电流": 1, "逆变器04输出功率": 0, "逆变器04输出电流": 0, "逆变器05输出功率": 0, "逆变器05输出电流": 0, "逆变器06输出功率": 0, "逆变器06输出电流": 0, "逆变器07输出功率": 0, "逆变器07输出电流": 0, "逆变器08输出功率": 0, "逆变器08输出电流": 0, "逆变器09输出功率": 0, "逆变器09输出电流": 0, "逆变器10输出功率": 0, "逆变器10输出电流": 0, "逆变器11输出功率": 0, "逆变器11输出电流": 0, "逆变器12输出功率": 0, "逆变器12输出电流": 0, "逆变器13输出功率": 0, "逆变器13输出电流": 0, "逆变器14输出功率": 0, "逆变器14输出电流": 0, "逆变器15输出功率": 0, "逆变器15输出电流": 0, "逆变器16输出功率": 0, "逆变器16输出电流": 0}}, "commStatus": {"commFailedTime": 0, "commFailedCount": 0, "commSuccessTime": 1702827845337}}', 1702827845740, 1702827845740),
	(23344, 'CE+T UPS设备-1', 'CE+T UPS', '深圳安圣电气有限公司', 'Read System Measures Table', 'manager', '3c3b9f4b-f71e-4629-831a-d002f6e8ad30', '{}', '{"value": {"status": {"devAddr": 1, "负载比": 9, "组1输入电压": 54.1, "组2输入电压": 0.0, "组3输入电压": 0.0, "组4输入电压": 0.0, "逆变器01温度": 0, "逆变器02温度": 59, "逆变器03温度": 0, "逆变器04温度": 0, "逆变器05温度": 0, "逆变器06温度": 0, "逆变器07温度": 0, "逆变器08温度": 0, "逆变器09温度": 0, "逆变器10温度": 0, "逆变器11温度": 0, "逆变器12温度": 0, "逆变器13温度": 0, "逆变器14温度": 0, "逆变器15温度": 0, "逆变器16温度": 0, "系统输出功率": 889, "系统输出电压": 229, "系统输出电流": 5.3, "系统输出频率": 50.0, "逆变器01输出功率": 304, "逆变器01输出电流": 1, "逆变器02输出功率": 304, "逆变器02输出电流": 2, "逆变器03输出功率": 281, "逆变器03输出电流": 1, "逆变器04输出功率": 0, "逆变器04输出电流": 0, "逆变器05输出功率": 0, "逆变器05输出电流": 0, "逆变器06输出功率": 0, "逆变器06输出电流": 0, "逆变器07输出功率": 0, "逆变器07输出电流": 0, "逆变器08输出功率": 0, "逆变器08输出电流": 0, "逆变器09输出功率": 0, "逆变器09输出电流": 0, "逆变器10输出功率": 0, "逆变器10输出电流": 0, "逆变器11输出功率": 0, "逆变器11输出电流": 0, "逆变器12输出功率": 0, "逆变器12输出电流": 0, "逆变器13输出功率": 0, "逆变器13输出电流": 0, "逆变器14输出功率": 0, "逆变器14输出电流": 0, "逆变器15输出功率": 0, "逆变器15输出电流": 0, "逆变器16输出功率": 0, "逆变器16输出电流": 0}}, "commStatus": {"commFailedTime": 0, "commFailedCount": 0, "commSuccessTime": 1702827916966}}', 1702827917850, 1702827917850),
	(23345, 'CE+T UPS设备-1', 'CE+T UPS', '深圳安圣电气有限公司', 'Read System Measures Table', 'manager', '4787c7e8-d3ed-4ee9-9176-6673b5aa5c8e', '{}', '{"value": {"status": {"devAddr": 1, "负载比": 9, "组1输入电压": 54.1, "组2输入电压": 0.0, "组3输入电压": 0.0, "组4输入电压": 0.0, "逆变器01温度": 0, "逆变器02温度": 59, "逆变器03温度": 0, "逆变器04温度": 0, "逆变器05温度": 0, "逆变器06温度": 0, "逆变器07温度": 0, "逆变器08温度": 0, "逆变器09温度": 0, "逆变器10温度": 0, "逆变器11温度": 0, "逆变器12温度": 0, "逆变器13温度": 0, "逆变器14温度": 0, "逆变器15温度": 0, "逆变器16温度": 0, "系统输出功率": 889, "系统输出电压": 229, "系统输出电流": 5.3, "系统输出频率": 50.0, "逆变器01输出功率": 304, "逆变器01输出电流": 1, "逆变器02输出功率": 304, "逆变器02输出电流": 2, "逆变器03输出功率": 281, "逆变器03输出电流": 1, "逆变器04输出功率": 0, "逆变器04输出电流": 0, "逆变器05输出功率": 0, "逆变器05输出电流": 0, "逆变器06输出功率": 1, "逆变器06输出电流": 0, "逆变器07输出功率": 256, "逆变器07输出电流": 0, "逆变器08输出功率": 0, "逆变器08输出电流": 0, "逆变器09输出功率": 0, "逆变器09输出电流": 0, "逆变器10输出功率": 0, "逆变器10输出电流": 0, "逆变器11输出功率": 0, "逆变器11输出电流": 0, "逆变器12输出功率": 0, "逆变器12输出电流": 0, "逆变器13输出功率": 0, "逆变器13输出电流": 0, "逆变器14输出功率": 0, "逆变器14输出电流": 0, "逆变器15输出功率": 0, "逆变器15输出电流": 0, "逆变器16输出功率": 0, "逆变器16输出电流": 0}}, "commStatus": {"commFailedTime": 0, "commFailedCount": 0, "commSuccessTime": 1702827934008}}', 1702827934056, 1702827934056),
	(23346, 'CE+T UPS设备-1', 'CE+T UPS', '深圳安圣电气有限公司', 'Read System Measures Table', 'manager', 'b5fcb95f-9ea5-46ca-87e5-ba4341b80e03', '{}', '{"value": {"status": {"devAddr": 1, "负载比": 9, "组1输入电压": 54.1, "组2输入电压": 0.0, "组3输入电压": 0.0, "组4输入电压": 0.0, "逆变器01温度": 0, "逆变器02温度": 59, "逆变器03温度": 0, "逆变器04温度": 0, "逆变器05温度": 0, "逆变器06温度": 0, "逆变器07温度": 0, "逆变器08温度": 0, "逆变器09温度": 0, "逆变器10温度": 0, "逆变器11温度": 0, "逆变器12温度": 0, "逆变器13温度": 0, "逆变器14温度": 0, "逆变器15温度": 0, "逆变器16温度": 0, "系统输出功率": 889, "系统输出电压": 229, "系统输出电流": 5.3, "系统输出频率": 50.0, "逆变器01输出功率": 304, "逆变器01输出电流": 1, "逆变器02输出功率": 304, "逆变器02输出电流": 2, "逆变器03输出功率": 281, "逆变器03输出电流": 1, "逆变器04输出功率": 0, "逆变器04输出电流": 0, "逆变器05输出功率": 0, "逆变器05输出电流": 0, "逆变器06输出功率": 0, "逆变器06输出电流": 0, "逆变器07输出功率": 0, "逆变器07输出电流": 0, "逆变器08输出功率": 0, "逆变器08输出电流": 0, "逆变器09输出功率": 0, "逆变器09输出电流": 0, "逆变器10输出功率": 0, "逆变器10输出电流": 0, "逆变器11输出功率": 0, "逆变器11输出电流": 0, "逆变器12输出功率": 0, "逆变器12输出电流": 0, "逆变器13输出功率": 0, "逆变器13输出电流": 0, "逆变器14输出功率": 0, "逆变器14输出电流": 0, "逆变器15输出功率": 0, "逆变器15输出电流": 0, "逆变器16输出功率": 0, "逆变器16输出电流": 0}}, "commStatus": {"commFailedTime": 0, "commFailedCount": 0, "commSuccessTime": 1702827936234}}', 1702827936331, 1702827936331),
	(23347, 'CE+T UPS设备-1', 'CE+T UPS', '深圳安圣电气有限公司', 'Read System Measures Table', 'manager', '25ad24a4-7fc9-4b0a-9697-02213aab109e', '{}', '{"value": {"status": {"devAddr": 1, "负载比": 9, "组1输入电压": 54.1, "组2输入电压": 0.0, "组3输入电压": 0.0, "组4输入电压": 0.0, "逆变器01温度": 0, "逆变器02温度": 59, "逆变器03温度": 0, "逆变器04温度": 0, "逆变器05温度": 0, "逆变器06温度": 0, "逆变器07温度": 0, "逆变器08温度": 0, "逆变器09温度": 0, "逆变器10温度": 0, "逆变器11温度": 0, "逆变器12温度": 0, "逆变器13温度": 0, "逆变器14温度": 0, "逆变器15温度": 0, "逆变器16温度": 0, "系统输出功率": 889, "系统输出电压": 229, "系统输出电流": 5.3, "系统输出频率": 50.0, "逆变器01输出功率": 304, "逆变器01输出电流": 1, "逆变器02输出功率": 304, "逆变器02输出电流": 2, "逆变器03输出功率": 281, "逆变器03输出电流": 1, "逆变器04输出功率": 0, "逆变器04输出电流": 0, "逆变器05输出功率": 0, "逆变器05输出电流": 0, "逆变器06输出功率": 1, "逆变器06输出电流": 0, "逆变器07输出功率": 256, "逆变器07输出电流": 0, "逆变器08输出功率": 0, "逆变器08输出电流": 0, "逆变器09输出功率": 0, "逆变器09输出电流": 0, "逆变器10输出功率": 0, "逆变器10输出电流": 0, "逆变器11输出功率": 0, "逆变器11输出电流": 0, "逆变器12输出功率": 0, "逆变器12输出电流": 0, "逆变器13输出功率": 0, "逆变器13输出电流": 0, "逆变器14输出功率": 0, "逆变器14输出电流": 0, "逆变器15输出功率": 0, "逆变器15输出电流": 0, "逆变器16输出功率": 0, "逆变器16输出电流": 0}}, "commStatus": {"commFailedTime": 0, "commFailedCount": 0, "commSuccessTime": 1702827940086}}', 1702827940771, 1702827940771),
	(23348, 'CE+T UPS设备-1', 'CE+T UPS', '深圳安圣电气有限公司', 'Read System Measures Table', 'manager', 'e0c529fc-fccc-40d8-a7c8-cbfee053f85b', '{}', '{"value": {"status": {"devAddr": 1, "负载比": 9, "组1输入电压": 54.1, "组2输入电压": 0.0, "组3输入电压": 0.0, "组4输入电压": 0.0, "逆变器01温度": 0, "逆变器02温度": 59, "逆变器03温度": 0, "逆变器04温度": 0, "逆变器05温度": 0, "逆变器06温度": 0, "逆变器07温度": 0, "逆变器08温度": 0, "逆变器09温度": 0, "逆变器10温度": 0, "逆变器11温度": 0, "逆变器12温度": 0, "逆变器13温度": 0, "逆变器14温度": 0, "逆变器15温度": 0, "逆变器16温度": 0, "系统输出功率": 889, "系统输出电压": 229, "系统输出电流": 5.3, "系统输出频率": 50.0, "逆变器01输出功率": 304, "逆变器01输出电流": 1, "逆变器02输出功率": 304, "逆变器02输出电流": 2, "逆变器03输出功率": 281, "逆变器03输出电流": 1, "逆变器04输出功率": 0, "逆变器04输出电流": 0, "逆变器05输出功率": 0, "逆变器05输出电流": 0, "逆变器06输出功率": 0, "逆变器06输出电流": 0, "逆变器07输出功率": 0, "逆变器07输出电流": 0, "逆变器08输出功率": 0, "逆变器08输出电流": 0, "逆变器09输出功率": 0, "逆变器09输出电流": 0, "逆变器10输出功率": 0, "逆变器10输出电流": 0, "逆变器11输出功率": 0, "逆变器11输出电流": 0, "逆变器12输出功率": 0, "逆变器12输出电流": 0, "逆变器13输出功率": 0, "逆变器13输出电流": 0, "逆变器14输出功率": 0, "逆变器14输出电流": 0, "逆变器15输出功率": 0, "逆变器15输出电流": 0, "逆变器16输出功率": 0, "逆变器16输出电流": 0}}, "commStatus": {"commFailedTime": 0, "commFailedCount": 0, "commSuccessTime": 1702828301922}}', 1702828336199, 1702828336199),
	(23349, 'CE+T UPS设备-1', 'CE+T UPS', '深圳安圣电气有限公司', 'Read System Measures Table', 'manager', 'db6a007a-956b-42c8-b4d0-1a13fa240d36', '{}', '{"value": {"status": {"devAddr": 1, "负载比": 9, "组1输入电压": 54.1, "组2输入电压": 0.0, "组3输入电压": 0.0, "组4输入电压": 0.0, "逆变器01温度": 0, "逆变器02温度": 59, "逆变器03温度": 0, "逆变器04温度": 0, "逆变器05温度": 0, "逆变器06温度": 0, "逆变器07温度": 0, "逆变器08温度": 0, "逆变器09温度": 0, "逆变器10温度": 0, "逆变器11温度": 0, "逆变器12温度": 0, "逆变器13温度": 0, "逆变器14温度": 0, "逆变器15温度": 0, "逆变器16温度": 0, "系统输出功率": 889, "系统输出电压": 229, "系统输出电流": 5.3, "系统输出频率": 50.0, "逆变器01输出功率": 304, "逆变器01输出电流": 1, "逆变器02输出功率": 304, "逆变器02输出电流": 2, "逆变器03输出功率": 281, "逆变器03输出电流": 1, "逆变器04输出功率": 0, "逆变器04输出电流": 0, "逆变器05输出功率": 0, "逆变器05输出电流": 0, "逆变器06输出功率": 0, "逆变器06输出电流": 0, "逆变器07输出功率": 0, "逆变器07输出电流": 0, "逆变器08输出功率": 0, "逆变器08输出电流": 0, "逆变器09输出功率": 0, "逆变器09输出电流": 0, "逆变器10输出功率": 0, "逆变器10输出电流": 0, "逆变器11输出功率": 0, "逆变器11输出电流": 0, "逆变器12输出功率": 0, "逆变器12输出电流": 0, "逆变器13输出功率": 0, "逆变器13输出电流": 0, "逆变器14输出功率": 0, "逆变器14输出电流": 0, "逆变器15输出功率": 0, "逆变器15输出电流": 0, "逆变器16输出功率": 0, "逆变器16输出电流": 0}}, "commStatus": {"commFailedTime": 0, "commFailedCount": 0, "commSuccessTime": 1702828295262}}', 1702828336232, 1702828336232),
	(23350, 'CE+T UPS设备-1', 'CE+T UPS', '深圳安圣电气有限公司', 'Read System Measures Table', 'manager', '160f65ff-d77d-47fc-b265-ee5488f38242', '{}', '{"value": {"status": {"devAddr": 1, "负载比": 9, "组1输入电压": 54.1, "组2输入电压": 0.0, "组3输入电压": 0.0, "组4输入电压": 0.0, "逆变器01温度": 0, "逆变器02温度": 59, "逆变器03温度": 0, "逆变器04温度": 0, "逆变器05温度": 0, "逆变器06温度": 0, "逆变器07温度": 0, "逆变器08温度": 0, "逆变器09温度": 0, "逆变器10温度": 0, "逆变器11温度": 0, "逆变器12温度": 0, "逆变器13温度": 0, "逆变器14温度": 0, "逆变器15温度": 0, "逆变器16温度": 0, "系统输出功率": 889, "系统输出电压": 229, "系统输出电流": 5.3, "系统输出频率": 50.0, "逆变器01输出功率": 304, "逆变器01输出电流": 1, "逆变器02输出功率": 304, "逆变器02输出电流": 2, "逆变器03输出功率": 281, "逆变器03输出电流": 1, "逆变器04输出功率": 0, "逆变器04输出电流": 0, "逆变器05输出功率": 0, "逆变器05输出电流": 0, "逆变器06输出功率": 1, "逆变器06输出电流": 0, "逆变器07输出功率": 256, "逆变器07输出电流": 0, "逆变器08输出功率": 0, "逆变器08输出电流": 0, "逆变器09输出功率": 0, "逆变器09输出电流": 0, "逆变器10输出功率": 0, "逆变器10输出电流": 0, "逆变器11输出功率": 0, "逆变器11输出电流": 0, "逆变器12输出功率": 0, "逆变器12输出电流": 0, "逆变器13输出功率": 0, "逆变器13输出电流": 0, "逆变器14输出功率": 0, "逆变器14输出电流": 0, "逆变器15输出功率": 0, "逆变器15输出电流": 0, "逆变器16输出功率": 0, "逆变器16输出电流": 0}}, "commStatus": {"commFailedTime": 0, "commFailedCount": 0, "commSuccessTime": 1702828286516}}', 1702828336271, 1702828336271),
	(23351, 'CE+T UPS设备-1', 'CE+T UPS', '深圳安圣电气有限公司', 'Read System Measures Table', 'manager', '9af1f9b0-af7d-4183-8763-222de29152d3', '{}', '{"value": {"status": {"devAddr": 1, "负载比": 9, "组1输入电压": 54.1, "组2输入电压": 0.0, "组3输入电压": 0.0, "组4输入电压": 0.0, "逆变器01温度": 0, "逆变器02温度": 59, "逆变器03温度": 0, "逆变器04温度": 0, "逆变器05温度": 0, "逆变器06温度": 0, "逆变器07温度": 0, "逆变器08温度": 0, "逆变器09温度": 0, "逆变器10温度": 0, "逆变器11温度": 0, "逆变器12温度": 0, "逆变器13温度": 0, "逆变器14温度": 0, "逆变器15温度": 0, "逆变器16温度": 0, "系统输出功率": 889, "系统输出电压": 229, "系统输出电流": 5.3, "系统输出频率": 50.0, "逆变器01输出功率": 304, "逆变器01输出电流": 1, "逆变器02输出功率": 304, "逆变器02输出电流": 2, "逆变器03输出功率": 281, "逆变器03输出电流": 1, "逆变器04输出功率": 0, "逆变器04输出电流": 0, "逆变器05输出功率": 0, "逆变器05输出电流": 0, "逆变器06输出功率": 0, "逆变器06输出电流": 0, "逆变器07输出功率": 0, "逆变器07输出电流": 0, "逆变器08输出功率": 0, "逆变器08输出电流": 0, "逆变器09输出功率": 0, "逆变器09输出电流": 0, "逆变器10输出功率": 0, "逆变器10输出电流": 0, "逆变器11输出功率": 0, "逆变器11输出电流": 0, "逆变器12输出功率": 0, "逆变器12输出电流": 0, "逆变器13输出功率": 0, "逆变器13输出电流": 0, "逆变器14输出功率": 0, "逆变器14输出电流": 0, "逆变器15输出功率": 0, "逆变器15输出电流": 0, "逆变器16输出功率": 0, "逆变器16输出电流": 0}}, "commStatus": {"commFailedTime": 0, "commFailedCount": 0, "commSuccessTime": 1702829531476}}', 1702830279309, 1702830279309),
	(23352, 'CE+T UPS设备-1', 'CE+T UPS', '深圳安圣电气有限公司', 'Read System Measures Table', 'manager', 'f953ee33-548a-4f57-ab46-334034aa723d', '{}', '{"value": {"status": {"devAddr": 1, "负载比": 9, "组1输入电压": 54.1, "组2输入电压": 0.0, "组3输入电压": 0.0, "组4输入电压": 0.0, "逆变器01温度": 0, "逆变器02温度": 59, "逆变器03温度": 0, "逆变器04温度": 0, "逆变器05温度": 0, "逆变器06温度": 0, "逆变器07温度": 0, "逆变器08温度": 0, "逆变器09温度": 0, "逆变器10温度": 0, "逆变器11温度": 0, "逆变器12温度": 0, "逆变器13温度": 0, "逆变器14温度": 0, "逆变器15温度": 0, "逆变器16温度": 0, "系统输出功率": 889, "系统输出电压": 229, "系统输出电流": 5.3, "系统输出频率": 50.0, "逆变器01输出功率": 304, "逆变器01输出电流": 1, "逆变器02输出功率": 304, "逆变器02输出电流": 2, "逆变器03输出功率": 281, "逆变器03输出电流": 1, "逆变器04输出功率": 0, "逆变器04输出电流": 0, "逆变器05输出功率": 0, "逆变器05输出电流": 0, "逆变器06输出功率": 1, "逆变器06输出电流": 0, "逆变器07输出功率": 256, "逆变器07输出电流": 0, "逆变器08输出功率": 0, "逆变器08输出电流": 0, "逆变器09输出功率": 0, "逆变器09输出电流": 0, "逆变器10输出功率": 0, "逆变器10输出电流": 0, "逆变器11输出功率": 0, "逆变器11输出电流": 0, "逆变器12输出功率": 0, "逆变器12输出电流": 0, "逆变器13输出功率": 0, "逆变器13输出电流": 0, "逆变器14输出功率": 0, "逆变器14输出电流": 0, "逆变器15输出功率": 0, "逆变器15输出电流": 0, "逆变器16输出功率": 0, "逆变器16输出电流": 0}}, "commStatus": {"commFailedTime": 0, "commFailedCount": 0, "commSuccessTime": 1702832629714}}', 1702832636177, 1702832636177),
	(23353, '范例：QD6000', 'ModBus Device', 'Fox Edge', 'Read Holding Register', 'manager', '6ba2b7b4-b2fe-4df9-92d4-2e08f3429680', '{"regCnt": 1, "devAddr": 1, "regAddr": 0, "tableName": "QD6000/v1/Holding Registers.csv", "modbusMode": "RTU", "operateName": "Read Holding Register", "templateName": "QD6000 Holding Registers"}', '{"value": {}, "commStatus": {"commFailedTime": 1705064114182, "commFailedCount": 1, "commSuccessTime": 0}}', 1705313415158, 1705313415158),
	(23354, '范例：QD6000', 'ModBus Device', 'Fox Edge', 'Read Holding Register', 'manager', '8ebdbd50-c507-4e0f-bb14-7126b32be8d6', '{"regCnt": 1, "devAddr": 1, "regAddr": 0, "tableName": "QD6000/v1/Holding Registers.csv", "modbusMode": "RTU", "operateName": "Read Holding Register", "templateName": "QD6000 Holding Registers"}', '{"value": {}, "commStatus": {"commFailedTime": 1705064058438, "commFailedCount": 1, "commSuccessTime": 0}}', 1705313415236, 1705313415236),
	(23355, '范例：QD6000', 'ModBus Device', 'Fox Edge', 'Read Holding Register', 'manager', '27f5bbaf-c149-4100-b56a-fb49f40a4615', '{"regCnt": 1, "devAddr": 1, "regAddr": 0, "tableName": "QD6000/v1/Holding Registers.csv", "modbusMode": "RTU", "operateName": "Read Holding Register", "templateName": "QD6000 Holding Registers"}', '{"value": {}, "commStatus": {"commFailedTime": 1705064043665, "commFailedCount": 1, "commSuccessTime": 0}}', 1705313415254, 1705313415254),
	(23356, '范例：QD6000', 'ModBus Device', 'Fox Edge', 'Read Holding Register', 'manager', 'e612ee01-e4ca-459d-870f-01721c263adb', '{"regCnt": 1, "devAddr": 1, "regAddr": 0, "tableName": "QD6000/v1/Holding Registers.csv", "modbusMode": "RTU", "operateName": "Read Holding Register", "templateName": "QD6000 Holding Registers"}', '{"value": {}, "commStatus": {"commFailedTime": 1705064042750, "commFailedCount": 1, "commSuccessTime": 0}}', 1705313415272, 1705313415272),
	(23357, '范例：QD6000', 'ModBus Device', 'Fox Edge', 'Read Holding Register', 'manager', '265a694f-629f-4668-972d-09f5beff9074', '{"regCnt": 1, "devAddr": 1, "regAddr": 0, "tableName": "QD6000/v1/Holding Registers.csv", "modbusMode": "RTU", "operateName": "Read Holding Register", "templateName": "QD6000 Holding Registers"}', '{"value": {}, "commStatus": {"commFailedTime": 1705064041558, "commFailedCount": 1, "commSuccessTime": 0}}', 1705313415296, 1705313415296),
	(23358, '范例：QD6000', 'ModBus Device', 'Fox Edge', 'Read Holding Register', 'manager', '6d4c19f3-bfd1-406c-baeb-1acd6c2dbb42', '{"regCnt": 1, "devAddr": 1, "regAddr": 0, "tableName": "QD6000/v1/Holding Registers.csv", "modbusMode": "RTU", "operateName": "Read Holding Register", "templateName": "QD6000 Holding Registers"}', '{"value": {}, "commStatus": {"commFailedTime": 1705064040327, "commFailedCount": 1, "commSuccessTime": 0}}', 1705313415332, 1705313415332),
	(23359, '范例：QD6000', 'ModBus Device', 'Fox Edge', 'Read Holding Register', 'manager', '270de65f-a613-488d-bc71-fe72c67920a0', '{"regCnt": 1, "devAddr": 1, "regAddr": 0, "tableName": "QD6000/v1/Holding Registers.csv", "modbusMode": "RTU", "operateName": "Read Holding Register", "templateName": "QD6000 Holding Registers"}', '{"value": {}, "commStatus": {"commFailedTime": 1705064008088, "commFailedCount": 1, "commSuccessTime": 0}}', 1705313415358, 1705313415358),
	(23360, '范例：海尔空调-YCJ-A0', '海尔空调-YCJ-A000', '海尔集团公司', '控制', 'manager', '449f37bb-db64-46f0-a0e0-15fa4381801c', '{"mode": "自动模式", "open": false, "temp": 0, "speed": "超高速", "damper": false, "devAddr": 0}', '{"value": {}, "commStatus": {"commFailedTime": 1711080194195, "commFailedCount": 1, "commSuccessTime": 0}}', 1711080194598, 1711080194598),
	(23361, '范例：海尔空调-YCJ-A0', '海尔空调-YCJ-A000', '海尔集团公司', '控制', 'manager', 'b8353d1c-e0c8-41e7-8b5f-0a8f0300b271', '{"mode": "自动模式", "open": false, "temp": 0, "speed": "超高速", "damper": false, "devAddr": 0}', '{"value": {}, "commStatus": {"commFailedTime": 1711080255016, "commFailedCount": 1, "commSuccessTime": 0}}', 1711080255441, 1711080255441),
	(23362, 'CE+T UPS设备-1', 'CE+T UPS', '深圳安圣电气有限公司', 'Read System Measures Table', 'manager', 'f0d520ca-2be0-434d-bb6c-dfe1a58c201e', '{}', '{"value": {}, "commStatus": {"commFailedTime": 1711082990738, "commFailedCount": 1, "commSuccessTime": 0}}', 1711082990959, 1711082990959),
	(23363, '范例：TCL柜式空调(KPRd)', '柜式空调(KPRd)', 'TCL科技集团股份有限公司', '查询运行状态', 'manager', '20ed690d-3b8c-4331-8866-a12698129db9', '{"devAddr": 0}', '{"value": {}, "commStatus": {"commFailedTime": 1711101652321, "commFailedCount": 1, "commSuccessTime": 0}}', 1711101653005, 1711101653005),
	(23364, '范例：TCL柜式空调(KPRd)', '柜式空调(KPRd)', 'TCL科技集团股份有限公司', '查询运行状态', 'manager', 'c476f824-4a9d-4c74-91b7-8e209f5ef654', '{"devAddr": 0}', '{"value": {}, "commStatus": {"commFailedTime": 1711109397647, "commFailedCount": 1, "commSuccessTime": 0}}', 1711109398275, 1711109398275),
	(23365, '范例：TCL柜式空调(KPRd)', '柜式空调(KPRd)', 'TCL科技集团股份有限公司', '设置运行状态', 'manager', '82614286-144b-44db-b003-ba325d2ed235', '{"模式": "自动", "运行": true, "风向": true, "风量": "自动", "devAddr": 0, "温度补偿": 0, "设定温度": 24}', '{"value": {"status": {"result": 0, "devAddr": 0}}, "commStatus": {"commFailedTime": 0, "commFailedCount": 0, "commSuccessTime": 1711116353860}}', 1711116354297, 1711116354297),
	(23366, '范例：TCL柜式空调(KPRd)', '柜式空调(KPRd)', 'TCL科技集团股份有限公司', '查询运行状态', 'manager', '7fad7c92-288d-4254-b852-8b5077e3435b', '{"devAddr": 0}', '{"value": {"status": {"result": 0, "模式": "制热", "除霜": false, "风量": "自动", "devAddr": 0, "压机状态": false, "室内温度": 0, "开关状态": false, "设定温度": 0, "过冷保护": false, "过热保护": false, "过热停机": false, "室外机保护": false, "管温进口AD值": 0, "防冷风(停送)": false, "防冷风(微风)": false, "除霜出口AD值": 0, "室内温度开故障": false, "电辅助加热暂停": false, "室内温度短路故障": false, "室内管温开路故障": false, "室内管温短路故障": false, "室外管温开路故障": false, "室外管温短路故障": false}}, "commStatus": {"commFailedTime": 0, "commFailedCount": 0, "commSuccessTime": 1711450794354}}', 1711450795567, 1711450795567),
	(23367, '范例：TCL柜式空调(KPRd)', '柜式空调(KPRd)', 'TCL科技集团股份有限公司', '用户开关空调', 'manager', 'df09e4ce-4eb7-487a-9ed9-35111f1e0b36', '{"运行": true, "devAddr": 0}', '{"value": {"status": {"result": 0, "运行": true, "devAddr": 0}}, "commStatus": {"commFailedTime": 0, "commFailedCount": 0, "commSuccessTime": 1711544034145}}', 1711544034695, 1711544034695),
	(23368, '范例：TCL柜式空调(KPRd)', '柜式空调(KPRd)', 'TCL科技集团股份有限公司', '用户开关空调', 'manager', '19490f5e-c803-4d1d-99f4-7fa1be51e96c', '{"运行": true, "devAddr": 0}', '{"value": {"status": {"result": 0, "运行": true, "devAddr": 0}}, "commStatus": {"commFailedTime": 0, "commFailedCount": 0, "commSuccessTime": 1711544088844}}', 1711544089033, 1711544089033),
	(23369, '范例：海尔空调-YCJ-A0', '海尔空调-YCJ-A000', '海尔集团公司', '控制', 'manager', 'ba94e038-9438-4b39-bcce-fe6592fff092', '{"mode": "自动模式", "open": false, "temp": 0, "speed": "超高速", "damper": false, "devAddr": 0}', '{"value": {"status": {"devAddr": 0, "success": true}}, "commStatus": {"commFailedTime": 0, "commFailedCount": 0, "commSuccessTime": 1711544424506}}', 1711544425352, 1711544425352),
	(23370, '范例：TCL柜式空调(KPRd)', '柜式空调(KPRd)', 'TCL科技集团股份有限公司', '用户开关空调', 'manager', '9b23f76e-b95d-4ee0-9e33-ce2058ab39b9', '{"运行": true, "devAddr": 0}', '{"value": {"status": {"result": 0, "运行": true, "devAddr": 0}}, "commStatus": {"commFailedTime": 0, "commFailedCount": 0, "commSuccessTime": 1711544447016}}', 1711544447564, 1711544447564),
	(23371, '范例：TCL柜式空调(KPRd)', '柜式空调(KPRd)', 'TCL科技集团股份有限公司', '用户开关空调', 'manager', 'cb871709-e913-4340-9678-86532e34bff9', '{"运行": true, "devAddr": 0}', '{"value": {"status": {"result": 0, "运行": true, "devAddr": 0}}, "commStatus": {"commFailedTime": 0, "commFailedCount": 0, "commSuccessTime": 1711547022994}}', 1711547023326, 1711547023326),
	(23372, '范例：TCL柜式空调(KPRd)', '柜式空调(KPRd)', 'TCL科技集团股份有限公司', '用户开关空调', 'manager', 'e7974385-2678-408e-9c4c-cf7fa85bbb9f', '{"运行": true, "devAddr": 0}', '{"value": {"status": {"result": 0, "运行": true, "devAddr": 0}}, "commStatus": {"commFailedTime": 0, "commFailedCount": 0, "commSuccessTime": 1711547091212}}', 1711547091379, 1711547091379),
	(23373, '范例：TCL柜式空调(KPRd)', '柜式空调(KPRd)', 'TCL科技集团股份有限公司', '用户开关空调', 'manager', '17b1c072-2ed8-4bdb-a6bf-2ac96cf0ba72', '{"运行": true, "devAddr": 0}', '{"value": {"status": {"result": 0, "运行": true, "devAddr": 0}}, "commStatus": {"commFailedTime": 0, "commFailedCount": 0, "commSuccessTime": 1711547105652}}', 1711547106054, 1711547106054),
	(23374, '范例：TCL柜式空调(KPRd)', '柜式空调(KPRd)', 'TCL科技集团股份有限公司', '用户开关空调', 'manager', '75bdbb62-3937-4faa-bfd4-46bb986231bb', '{"运行": true, "devAddr": 0}', '{"value": {"status": {"result": 0, "运行": true, "devAddr": 0}}, "commStatus": {"commFailedTime": 0, "commFailedCount": 0, "commSuccessTime": 1711547129620}}', 1711547129906, 1711547129906),
	(23375, '范例：TCL柜式空调(KPRd)', '柜式空调(KPRd)', 'TCL科技集团股份有限公司', '用户开关空调', 'manager', 'db81eb21-b99d-4f1a-86ab-98a4d0b1ddf8', '{"运行": true, "devAddr": 0}', '{"value": {"status": {"result": 0, "运行": true, "devAddr": 0}}, "commStatus": {"commFailedTime": 0, "commFailedCount": 0, "commSuccessTime": 1711547131959}}', 1711547132151, 1711547132151),
	(23376, '范例：TCL柜式空调(KPRd)', '柜式空调(KPRd)', 'TCL科技集团股份有限公司', '用户开关空调', 'manager', 'eee4b220-cdd0-4bc8-b65d-a86ea23b582e', '{"运行": true, "devAddr": 0}', '{"value": {"status": {"result": 0, "运行": true, "devAddr": 0}}, "commStatus": {"commFailedTime": 0, "commFailedCount": 0, "commSuccessTime": 1711547133253}}', 1711547133277, 1711547133277),
	(23377, '范例：TCL柜式空调(KPRd)', '柜式空调(KPRd)', 'TCL科技集团股份有限公司', '用户开关空调', 'manager', '57face1e-23de-49f0-8805-db4cfbe7e685', '{"运行": true, "devAddr": 0}', '{"value": {"status": {"result": 0, "运行": true, "devAddr": 0}}, "commStatus": {"commFailedTime": 0, "commFailedCount": 0, "commSuccessTime": 1711547134074}}', 1711547134429, 1711547134429),
	(23378, 'DLT645设备-01', 'DLT645 v1997', 'Fox Edge', '读数据', 'manager', '8d9f7310-e79b-4b80-9961-177f8a54982f', '{"tableName":"DLT645-v1997/v1/1.0.0/DLT645-1997.csv","objectName":"(当前)反向有功总电能","deviceAddress":"351253111111"}', '{"commStatus":{"commSuccessTime":0,"commFailedCount":1,"commFailedTime":1712465917393},"value":{}}', 1712465917644, 1712465917644),
	(23379, 'DLT645设备-01', 'DLT645 v1997', 'Fox Edge', '读数据', 'manager', '282ec091-d24e-464f-b938-d44b20c63e1e', '{"tableName":"DLT645-v1997/v1/1.0.0/DLT645-1997.csv","objectName":"(当前)正向有功总电能","deviceAddress":"351253111111"}', '{"commStatus":{"commSuccessTime":1712465922084,"commFailedCount":0,"commFailedTime":0},"value":{"status":{"(当前)正向有功总电能":1343.89}}}', 1712465922370, 1712465922370),
	(23380, '范例：宏冠风机(HF-315PE)', 'ModBus Device', 'Fox Edge', 'Read Holding Register', 'manager', '3a44acfe-4fb1-477d-bedc-5ab71b82379b', '{}', '{"commStatus":{"commSuccessTime":0,"commFailedCount":1,"commFailedTime":1712669481521},"value":{}}', 1712735356683, 1712735356683),
	(23381, '范例：宏冠风机(HF-315PE)', 'ModBus Device', 'Fox Edge', 'Read Holding Register', 'manager', '80a6884f-91c7-44b3-81f2-0abc20748fb9', '{"regCnt":10,"regAddr":4146,"tableName":"hgfan-hf315pe/v1/Holding Registers.csv","templateName":"hgfan-hf315pe Read Holding Registers"}', '{"commStatus":{"commSuccessTime":0,"commFailedCount":1,"commFailedTime":1713597363870},"value":{}}', 1713614644620, 1713614644620),
	(23382, '范例：宏冠风机(HF-315PE)', 'ModBus Device', 'Fox Edge', 'Read Holding Register', 'manager', '8714dc90-95d2-40ff-b211-a8918f006650', '{"regCnt":10,"regAddr":4146,"tableName":"hgfan-hf315pe/v1/Holding Registers.csv","templateName":"hgfan-hf315pe Read Holding Registers"}', '{"commStatus":{"commSuccessTime":0,"commFailedCount":1,"commFailedTime":1713597531223},"value":{}}', 1713614644654, 1713614644654),
	(23383, '范例：宏冠风机(HF-315PE)', 'ModBus Device', 'Fox Edge', 'Read Holding Register', 'manager', 'f5efafc1-a249-401d-a473-8aab87ee496c', '{"regCnt":10,"regAddr":4146,"tableName":"hgfan-hf315pe/v1/Holding Registers.csv","templateName":"hgfan-hf315pe Read Holding Registers"}', '{"commStatus":{"commSuccessTime":0,"commFailedCount":1,"commFailedTime":1713605268154},"value":{}}', 1713614644667, 1713614644667),
	(23384, '范例：宏冠风机(HF-315PE)', 'ModBus Device', 'Fox Edge', 'Read Holding Register', 'manager', '858e316a-bb83-4f5e-a8f5-1e78d2f8f969', '{"regCnt":10,"regAddr":4146,"tableName":"hgfan-hf315pe/v1/Holding Registers.csv","templateName":"hgfan-hf315pe Read Holding Registers"}', '{"commStatus":{"commSuccessTime":0,"commFailedCount":1,"commFailedTime":1713605363019},"value":{}}', 1713614644689, 1713614644689),
	(23385, '范例：宏冠风机(HF-315PE)', 'ModBus Device', 'Fox Edge', 'Read Holding Register', 'manager', '7b02dd28-ae35-4ed9-acf5-eeb78656a570', '{"regCnt":10,"regAddr":4146,"tableName":"hgfan-hf315pe/v1/Holding Registers.csv","templateName":"hgfan-hf315pe Read Holding Registers"}', '{"commStatus":{"commSuccessTime":0,"commFailedCount":1,"commFailedTime":1713605433684},"value":{}}', 1713614644701, 1713614644701),
	(23386, '范例：宏冠风机(HF-315PE)', 'ModBus Device', 'Fox Edge', 'Read Holding Register', 'manager', '8e42c281-2aed-4906-8bcb-80de3479a550', '{"regCnt":10,"regAddr":4146,"templateName":"范例：三相电表"}', '{"commStatus":{"commSuccessTime":0,"commFailedCount":1,"commFailedTime":1713605513120},"value":{}}', 1713614644704, 1713614644704),
	(23387, '范例：宏冠风机(HF-315PE)', 'ModBus Device', 'Fox Edge', 'Read Holding Register', 'manager', '6175471c-1a20-4492-890f-d1df89d9f2be', '{"regCnt":10,"regAddr":4146,"templateName":"范例：三相电表"}', '{"commStatus":{"commSuccessTime":0,"commFailedCount":1,"commFailedTime":1713605567082},"value":{}}', 1713614644721, 1713614644721),
	(23388, '范例：宏冠风机(HF-315PE)', 'ModBus Device', 'Fox Edge', 'Read Holding Register', 'manager', 'e8c720e5-c01f-414f-86a4-2ed871ff8e3a', '{"regCnt":10,"regAddr":4146,"templateName":"范例：三相电表"}', '{"commStatus":{"commSuccessTime":0,"commFailedCount":1,"commFailedTime":1713605649301},"value":{}}', 1713614644729, 1713614644729),
	(23389, '范例：宏冠风机(HF-315PE)', 'ModBus Device', 'Fox Edge', 'Read Holding Register', 'manager', '1b946515-3338-4fad-927e-dee0de9edd26', '{"regCnt":10,"regAddr":4146,"templateName":"范例：三相电表"}', '{"commStatus":{"commSuccessTime":0,"commFailedCount":1,"commFailedTime":1713605656494},"value":{}}', 1713614644739, 1713614644739),
	(23390, '范例：宏冠风机(HF-315PE)', 'ModBus Device', 'Fox Edge', 'Read Holding Register', 'manager', '04141103-4c43-4cde-9b40-20f461edb850', '{"regCnt":10,"regAddr":4146,"templateName":"范例：三相电表"}', '{"commStatus":{"commSuccessTime":0,"commFailedCount":1,"commFailedTime":1713605670884},"value":{}}', 1713614644755, 1713614644755),
	(23391, '范例：宏冠风机(HF-315PE)', 'ModBus Device', 'Fox Edge', 'Read Holding Register', 'manager', 'b92450c3-e7d7-436e-ac85-f555fca8fac5', '{"regCnt":10,"regAddr":4146,"templateName":"范例：三相电表"}', '{"commStatus":{"commSuccessTime":0,"commFailedCount":1,"commFailedTime":1713605744572},"value":{}}', 1713614644775, 1713614644775),
	(23392, '范例：宏冠风机(HF-315PE)', 'ModBus Device', 'Fox Edge', 'Read Holding Register', 'manager', 'e7fdf1fb-c7c9-4c0c-a361-e5b8744c705b', '{"regCnt":10,"regAddr":4146,"templateName":"范例：三相电表"}', '{"commStatus":{"commSuccessTime":0,"commFailedCount":1,"commFailedTime":1713605761892},"value":{}}', 1713614644787, 1713614644787),
	(23393, '范例：宏冠风机(HF-315PE)', 'ModBus Device', 'Fox Edge', 'Read Holding Register', 'manager', 'ecd65125-32a3-4755-b5a2-69de2e9ba7a3', '{"regCnt":10,"regAddr":4146,"tableName":"hgfan-hf315pe/v1/Holding Registers.csv","templateName":"hgfan-hf315pe Read Holding Registers"}', '{"commStatus":{"commSuccessTime":0,"commFailedCount":1,"commFailedTime":1713605766816},"value":{}}', 1713614644817, 1713614644817),
	(23394, '范例：宏冠风机(HF-315PE)', 'ModBus Device', 'Fox Edge', 'Read Holding Register', 'manager', 'b484a519-545f-4de2-bba9-340ede5bff7f', '{"regCnt":10,"regAddr":4146,"tableName":"hgfan-hf315pe/v1/Holding Registers.csv","templateName":"hgfan-hf315pe Read Holding Registers"}', '{"commStatus":{"commSuccessTime":0,"commFailedCount":1,"commFailedTime":1713605775213},"value":{}}', 1713614644821, 1713614644821),
	(23395, '范例：宏冠风机(HF-315PE)', 'ModBus Device', 'Fox Edge', 'Read Holding Register', 'manager', '6be5686c-8e00-4956-9e68-a9f5bb249825', '{"regCnt":10,"regAddr":4146,"tableName":"hgfan-hf315pe/v1/Holding Registers.csv","templateName":"hgfan-hf315pe Read Holding Registers"}', '{"commStatus":{"commSuccessTime":0,"commFailedCount":1,"commFailedTime":1713605777756},"value":{}}', 1713614644846, 1713614644846),
	(23396, '范例（ModBus）：正泰三相电表DT-SU666', 'ModBus Device', 'Fox Edge', 'Read Holding Register', 'manager', '215293c0-5c0c-4ac2-8605-a980f056686a', '{"regCnt":10,"regAddr":4146,"tableName":"chint-dt-su666/v1/Holding Registers.csv","templateName":"chint-dt-su666 Read Holding Registers"}', '{"commStatus":{"commSuccessTime":0,"commFailedCount":1,"commFailedTime":1713605782314},"value":{}}', 1713614644857, 1713614644857),
	(23397, '范例（ModBus）：正泰三相电表DT-SU666', 'ModBus Device', 'Fox Edge', 'Read Holding Register', 'manager', 'cb168394-4ebf-41a6-8cca-a65e4d6da8e7', '{"regCnt":10,"regAddr":4146,"tableName":"chint-dt-su666/v1/Holding Registers.csv","templateName":"chint-dt-su666 Read Holding Registers"}', '{"commStatus":{"commSuccessTime":0,"commFailedCount":1,"commFailedTime":1713605787705},"value":{}}', 1713614644872, 1713614644872),
	(23398, '范例（ModBus）：正泰三相电表DT-SU666', 'ModBus Device', 'Fox Edge', 'Read Holding Register', 'manager', '87144a23-e0e2-4363-9e2a-2566e75b3ceb', '{"regCnt":10,"regAddr":4136,"tableName":"chint-dt-su666/v1/Holding Registers.csv","templateName":"chint-dt-su666 Read Holding Registers"}', '{"commStatus":{"commSuccessTime":0,"commFailedCount":1,"commFailedTime":1713605791696},"value":{}}', 1713614644894, 1713614644894),
	(23399, '范例（ModBus）：正泰三相电表DT-SU666', 'ModBus Device', 'Fox Edge', 'Read Holding Register', 'manager', 'cdfd0a25-0363-45d4-a5a1-3c093807928d', '{"regCnt":10,"regAddr":4126,"tableName":"chint-dt-su666/v1/Holding Registers.csv","templateName":"chint-dt-su666 Read Holding Registers"}', '{"commStatus":{"commSuccessTime":0,"commFailedCount":1,"commFailedTime":1713605796065},"value":{}}', 1713614644905, 1713614644905),
	(23400, '范例（ModBus）：正泰三相电表DT-SU666', 'ModBus Device', 'Fox Edge', 'Read Holding Register', 'manager', 'b08d34dd-0a48-48d2-b3c7-0bf49cd26d16', '{"regCnt":10,"regAddr":4126,"tableName":"chint-dt-su666/v1/Holding Registers.csv","templateName":"chint-dt-su666 Read Holding Registers"}', '{"commStatus":{"commSuccessTime":0,"commFailedCount":1,"commFailedTime":1713605889645},"value":{}}', 1713614644915, 1713614644915),
	(23401, '范例（ModBus）：正泰三相电表DT-SU666', 'ModBus Device', 'Fox Edge', 'Read Holding Register', 'manager', '936d8968-6943-4890-b129-196001f357e9', '{"regCnt":10,"regAddr":4126,"tableName":"chint-dt-su666/v1/Holding Registers.csv","templateName":"chint-dt-su666 Read Holding Registers"}', '{"commStatus":{"commSuccessTime":0,"commFailedCount":1,"commFailedTime":1713605918618},"value":{}}', 1713614644923, 1713614644923),
	(23402, '范例（ModBus）：正泰三相电表DT-SU666', 'ModBus Device', 'Fox Edge', 'Read Holding Register', 'manager', '44fd453b-da0d-4440-8046-d3ab3f1984b4', '{"regCnt":10,"regAddr":4126,"tableName":"chint-dt-su666/v1/Holding Registers.csv","templateName":"chint-dt-su666 Read Holding Registers"}', '{"commStatus":{"commSuccessTime":0,"commFailedCount":1,"commFailedTime":1713606009342},"value":{}}', 1713614644929, 1713614644929),
	(23403, '范例（ModBus）：正泰三相电表DT-SU666', 'ModBus Device', 'Fox Edge', 'Read Holding Register', 'manager', 'c7c7db08-44fa-429c-acfa-158f21914c62', '{"regCnt":10,"regAddr":4126,"tableName":"chint-dt-su666/v1/Holding Registers.csv","templateName":"chint-dt-su666 Read Holding Registers"}', '{"commStatus":{"commSuccessTime":1713606464416,"commFailedCount":0,"commFailedTime":0},"value":{"status":{"(当前)正向有功总电能":82.56400146484376,"(当前)正向有功费率2电能":0.0,"(当前)正向有功费率1电能":82.56400146484376,"(当前)正向有功费率4电能":0.0,"(当前)正向有功费率3电能":0.0}}}', 1713614645095, 1713614645095),
	(23404, '范例（ModBus）：正泰三相电表DT-SU666', 'ModBus Device', 'Fox Edge', 'Read Holding Register', 'manager', '5187b5d4-9467-4c0a-a9fa-9dde3afd0ae5', '{"regCnt":10,"regAddr":4126,"tableName":"chint-dt-su666/v1/Holding Registers.csv","templateName":"chint-dt-su666 Read Holding Registers"}', '{"commStatus":{"commSuccessTime":1713606471886,"commFailedCount":0,"commFailedTime":0},"value":{"status":{"(当前)正向有功总电能":82.56400146484376,"(当前)正向有功费率2电能":0.0,"(当前)正向有功费率1电能":82.56400146484376,"(当前)正向有功费率4电能":0.0,"(当前)正向有功费率3电能":0.0}}}', 1713614645104, 1713614645104),
	(23405, '范例：宏冠风机(HF-315PE)', 'ModBus Device', 'Fox Edge', 'Read Holding Register', 'manager', '6262168a-80d7-44c5-99de-b6f6cf5b4689', '{"regCnt":10,"regAddr":4146,"templateName":"范例：三相电表"}', '{"commStatus":{"commSuccessTime":0,"commFailedCount":1,"commFailedTime":1713606493674},"value":{}}', 1713614645104, 1713614645104),
	(23406, '范例：宏冠风机(HF-315PE)', 'ModBus Device', 'Fox Edge', 'Read Holding Register', 'manager', 'a51daed9-918c-45cd-a683-f14624ad22f9', '{"regCnt":10,"regAddr":4146,"templateName":"范例：三相电表"}', '{"commStatus":{"commSuccessTime":0,"commFailedCount":1,"commFailedTime":1713606497018},"value":{}}', 1713614645124, 1713614645124),
	(23407, '范例：宏冠风机(HF-315PE)', 'ModBus Device', 'Fox Edge', 'Read Holding Register', 'manager', 'b2d157a2-5977-48d8-a504-c2d2bd3d5f9d', '{"regCnt":10,"regAddr":4146,"tableName":"hgfan-hf315pe/v1/Holding Registers.csv","templateName":"hgfan-hf315pe Read Holding Registers"}', '{"commStatus":{"commSuccessTime":0,"commFailedCount":1,"commFailedTime":1713606502157},"value":{}}', 1713614645132, 1713614645132),
	(23408, '范例（ModBus）：正泰三相电表DT-SU666', 'ModBus Device', 'Fox Edge', 'Read Holding Register', 'manager', '6cfa1f0f-06ad-4272-b9e9-bdcc31a3adca', '{"regCnt":10,"regAddr":4146,"tableName":"chint-dt-su666/v1/Holding Registers.csv","templateName":"chint-dt-su666 Read Holding Registers"}', '{"commStatus":{"commSuccessTime":1713606507247,"commFailedCount":0,"commFailedTime":0},"value":{"status":{"(当前)第一象限无功总电能":3.13700008392334,"(当前)第一象限无功费率2电能":0.0,"(当前)第一象限无功费率1电能":3.13700008392334,"(当前)第一象限无功费率4电能":0.0,"(当前)第一象限无功费率3电能":0.0}}}', 1713614645345, 1713614645345),
	(23409, '范例：宏冠风机(HF-315PE)', 'ModBus Device', 'Fox Edge', 'Read Holding Register', 'manager', 'd8e84f97-e96a-4115-ac07-b69981f7b1b2', '{"regCnt":10,"regAddr":4146,"templateName":"范例：三相电表"}', '{"commStatus":{"commSuccessTime":0,"commFailedCount":1,"commFailedTime":1713606795476},"value":{}}', 1713614645353, 1713614645353),
	(23410, '范例（ModBus）：正泰三相电表DT-SU666', 'ModBus Device', 'Fox Edge', 'Read Holding Register', 'manager', '8e784c87-f5e7-43a6-b93b-91e33f2c4f0f', '{"regCnt":10,"regAddr":4146,"tableName":"chint-dt-su666/v1/Holding Registers.csv","templateName":"chint-dt-su666 Read Holding Registers"}', '{"commStatus":{"commSuccessTime":1713606829371,"commFailedCount":0,"commFailedTime":0},"value":{"status":{"(当前)第一象限无功总电能":3.13700008392334,"(当前)第一象限无功费率2电能":0.0,"(当前)第一象限无功费率1电能":3.13700008392334,"(当前)第一象限无功费率4电能":0.0,"(当前)第一象限无功费率3电能":0.0}}}', 1713614645372, 1713614645372),
	(23411, '范例：宏冠风机(HF-315PE)', 'ModBus Device', 'Fox Edge', 'Read Holding Register', 'manager', '1b3fcd23-f89d-4aba-bfdb-16036f97482f', '{"regCnt":10,"regAddr":4146,"templateName":"范例：三相电表"}', '{"commStatus":{"commSuccessTime":0,"commFailedCount":1,"commFailedTime":1713606885145},"value":{}}', 1713614645372, 1713614645372),
	(23412, '范例：宏冠风机(HF-315PE)', 'ModBus Device', 'Fox Edge', 'Read Holding Register', 'manager', 'ce12e5c2-698b-46c9-950e-d008a13ff0b0', '{"regCnt":10,"regAddr":4146,"templateName":"范例：三相电表"}', '{"commStatus":{"commSuccessTime":0,"commFailedCount":1,"commFailedTime":1713607044153},"value":{}}', 1713614645395, 1713614645395),
	(23413, '范例：宏冠风机(HF-315PE)', 'ModBus Device', 'Fox Edge', 'Read Holding Register', 'manager', 'feb81346-6524-4873-b57b-6458f18b7cca', '{"regCnt":10,"regAddr":4146,"templateName":"范例：三相电表"}', '{"commStatus":{"commSuccessTime":0,"commFailedCount":1,"commFailedTime":1713607471381},"value":{}}', 1713614645438, 1713614645438),
	(23414, '范例：宏冠风机(HF-315PE)', 'ModBus Device', 'Fox Edge', 'Read Holding Register', 'manager', 'fcd081c4-2413-424f-a34e-230dc27c8c40', '{"regCnt":10,"regAddr":4146,"templateName":"范例：三相电表"}', '{"commStatus":{"commSuccessTime":0,"commFailedCount":1,"commFailedTime":1713607540565},"value":{}}', 1713614645453, 1713614645453),
	(23415, '范例：宏冠风机(HF-315PE)', 'ModBus Device', 'Fox Edge', 'Read Holding Register', 'manager', 'e8baf966-37d7-4fd7-9a8f-c3aacb1cf3ff', '{"regCnt":10,"regAddr":4146,"templateName":"范例：三相电表"}', '{"commStatus":{"commSuccessTime":0,"commFailedCount":1,"commFailedTime":1713608423397},"value":{}}', 1713614645548, 1713614645548),
	(23416, '范例：宏冠风机(HF-315PE)', 'ModBus Device', 'Fox Edge', 'Read Holding Register', 'manager', '4d7e0648-ab05-4d00-9a52-85e85396657f', '{"regCnt":10,"regAddr":4146,"templateName":"范例：三相电表"}', '{"commStatus":{"commSuccessTime":0,"commFailedCount":1,"commFailedTime":1713608427423},"value":{}}', 1713614645556, 1713614645556),
	(23417, '范例：宏冠风机(HF-315PE)', 'ModBus Device', 'Fox Edge', 'Read Holding Register', 'manager', 'b78274f6-864e-4b2b-a1fe-0ea4ddcb8da9', '{"regCnt":10,"regAddr":4146,"templateName":"范例：三相电表"}', '{"commStatus":{"commSuccessTime":0,"commFailedCount":1,"commFailedTime":1713608438219},"value":{}}', 1713614645569, 1713614645569),
	(23418, '范例（ModBus）：正泰三相电表DT-SU666', 'ModBus Device', 'Fox Edge', 'Read Holding Register', 'manager', '2bb66328-4482-4128-8ebf-fd2e9b2a24ad', '{"regCnt":10,"regAddr":4146,"tableName":"chint-dt-su666/v1/Holding Registers.csv","templateName":"chint-dt-su666 Read Holding Registers"}', '{"commStatus":{"commSuccessTime":1713608447211,"commFailedCount":0,"commFailedTime":0},"value":{"status":{"(当前)第一象限无功总电能":3.13700008392334,"(当前)第一象限无功费率2电能":0.0,"(当前)第一象限无功费率1电能":3.13700008392334,"(当前)第一象限无功费率4电能":0.0,"(当前)第一象限无功费率3电能":0.0}}}', 1713614645591, 1713614645591),
	(23419, '范例（ModBus）：正泰三相电表DT-SU666', 'ModBus Device', 'Fox Edge', 'Read Holding Register', 'manager', '529eb5cb-e458-4062-a5c9-236e4b16a0cc', '{"regCnt":10,"regAddr":4146,"tableName":"chint-dt-su666/v1/Holding Registers.csv","templateName":"chint-dt-su666 Read Holding Registers"}', '{"commStatus":{"commSuccessTime":1713608494933,"commFailedCount":0,"commFailedTime":0},"value":{"status":{"(当前)第一象限无功总电能":3.13700008392334,"(当前)第一象限无功费率2电能":0.0,"(当前)第一象限无功费率1电能":3.13700008392334,"(当前)第一象限无功费率4电能":0.0,"(当前)第一象限无功费率3电能":0.0}}}', 1713614645603, 1713614645603),
	(23420, '范例：宏冠风机(HF-315PE)', 'ModBus Device', 'Fox Edge', 'Read Holding Register', 'manager', 'e7a00ef4-7dac-488d-8493-d38e1a56dfa0', '{"regCnt":10,"regAddr":4146,"templateName":"范例：三相电表"}', '{"commStatus":{"commSuccessTime":0,"commFailedCount":1,"commFailedTime":1713608522395},"value":{}}', 1713614645612, 1713614645612),
	(23421, '范例：宏冠风机(HF-315PE)', 'ModBus Device', 'Fox Edge', 'Read Holding Register', 'manager', 'c90b5722-f7c1-4b5d-b332-fccc4e7a18c5', '{"regCnt":10,"regAddr":4146,"templateName":"范例：三相电表"}', '{"commStatus":{"commSuccessTime":0,"commFailedCount":1,"commFailedTime":1713608621387},"value":{}}', 1713614645621, 1713614645621),
	(23422, '范例（ModBus）：正泰三相电表DT-SU666', 'ModBus Device', 'Fox Edge', 'Read Holding Register', 'manager', '33810fc1-dd2d-4dbe-80f5-c2ee6aab1c27', '{"regCnt":10,"regAddr":4146,"templateName":"范例：三相电表"}', '{"commStatus":{"commSuccessTime":0,"commFailedCount":1,"commFailedTime":1713608644660},"value":{}}', 1713614645638, 1713614645638),
	(23423, '范例（ModBus）：正泰三相电表DT-SU666', 'ModBus Device', 'Fox Edge', 'Read Holding Register', 'manager', '9f6a4653-912c-4940-ae71-eb4b453f76fc', '{"regCnt":10,"regAddr":4146,"templateName":"范例：三相电表"}', '{"commStatus":{"commSuccessTime":0,"commFailedCount":1,"commFailedTime":1713608650599},"value":{}}', 1713614645639, 1713614645639),
	(23424, '范例（ModBus）：正泰三相电表DT-SU666', 'ModBus Device', 'Fox Edge', 'Read Holding Register', 'manager', '15000968-b1f9-47fd-90cd-d1c3a57918d4', '{"regCnt":10,"regAddr":4146,"templateName":"范例：三相电表"}', '{"commStatus":{"commSuccessTime":0,"commFailedCount":1,"commFailedTime":1713608666293},"value":{}}', 1713614645653, 1713614645653),
	(23425, '范例（ModBus）：正泰三相电表DT-SU666', 'ModBus Device', 'Fox Edge', 'Read Holding Register', 'manager', 'ff07992e-a5bb-42a5-a6c2-292795d01a88', '{"regCnt":10,"regAddr":4146,"templateName":"范例：三相电表"}', '{"commStatus":{"commSuccessTime":0,"commFailedCount":1,"commFailedTime":1713608694012},"value":{}}', 1713614645686, 1713614645686),
	(23426, '范例（ModBus）：正泰三相电表DT-SU666', 'ModBus Device', 'Fox Edge', 'Read Holding Register', 'manager', '39621753-610b-481b-b558-a6b0b5af30c0', '{"regCnt":10,"regAddr":4146,"templateName":"范例：三相电表"}', '{"commStatus":{"commSuccessTime":0,"commFailedCount":1,"commFailedTime":1713608726512},"value":{}}', 1713614645693, 1713614645693),
	(23427, '范例（ModBus）：正泰三相电表DT-SU666', 'ModBus Device', 'Fox Edge', 'Read Holding Register', 'manager', '126eac1f-dc72-47cb-ae1d-425d04e3c29b', '{"regCnt":10,"regAddr":4146,"templateName":"范例：三相电表"}', '{"commStatus":{"commSuccessTime":0,"commFailedCount":1,"commFailedTime":1713608759465},"value":{}}', 1713614645713, 1713614645713),
	(23428, '范例（ModBus）：正泰三相电表DT-SU666', 'ModBus Device', 'Fox Edge', 'Read Holding Register', 'manager', 'c0e025cd-9bbd-443e-841e-07a70f208fd8', '{"regCnt":10,"regAddr":4146,"templateName":"范例：三相电表"}', '{"commStatus":{"commSuccessTime":0,"commFailedCount":1,"commFailedTime":1713608776621},"value":{}}', 1713614645721, 1713614645721),
	(23429, '范例（ModBus）：正泰三相电表DT-SU666', 'ModBus Device', 'Fox Edge', 'Read Holding Register', 'manager', 'daa96d7b-fce1-4c7f-ab31-1eb48d6f908b', '{"regCnt":10,"regAddr":4146,"templateName":"范例：三相电表"}', '{"commStatus":{"commSuccessTime":1713608825951,"commFailedCount":0,"commFailedTime":0},"value":{"status":{"(当前)第一象限无功总电能":3.13700008392334,"(当前)第一象限无功费率2电能":0.0,"(当前)第一象限无功费率1电能":3.13700008392334,"(当前)第一象限无功费率4电能":0.0,"(当前)第一象限无功费率3电能":0.0}}}', 1713614645732, 1713614645732),
	(23430, '范例（ModBus）：正泰三相电表DT-SU666', 'ModBus Device', 'Fox Edge', 'Read Holding Register', 'manager', '02fed651-98af-47d2-932e-ab24073b3490', '{"regCnt":10,"regAddr":4146,"templateName":"范例：三相电表"}', '{"commStatus":{"commSuccessTime":1713608875654,"commFailedCount":0,"commFailedTime":0},"value":{"status":{"(当前)第一象限无功总电能":3.13700008392334,"(当前)第一象限无功费率2电能":0.0,"(当前)第一象限无功费率1电能":3.13700008392334,"(当前)第一象限无功费率4电能":0.0,"(当前)第一象限无功费率3电能":0.0}}}', 1713614645748, 1713614645748),
	(23431, '范例（ModBus）：正泰三相电表DT-SU666', 'ModBus Device', 'Fox Edge', 'Read Holding Register', 'manager', '393ce01f-1b9f-4f5d-8ed2-adc2d034ae0f', '{"regCnt":10,"regAddr":4146,"templateName":"范例：三相电表"}', '{"commStatus":{"commSuccessTime":1713608901134,"commFailedCount":0,"commFailedTime":0},"value":{"status":{"(当前)第一象限无功总电能":3.13700008392334,"(当前)第一象限无功费率2电能":0.0,"(当前)第一象限无功费率1电能":3.13700008392334,"(当前)第一象限无功费率4电能":0.0,"(当前)第一象限无功费率3电能":0.0}}}', 1713614645753, 1713614645753),
	(23432, '范例（ModBus）：正泰三相电表DT-SU666', 'ModBus Device', 'Fox Edge', 'Read Holding Register', 'manager', '4058b47a-b6b0-4299-98fd-4d8876466797', '{"regCnt":10,"regAddr":4146,"templateName":"范例：三相电表"}', '{"commStatus":{"commSuccessTime":1713608906952,"commFailedCount":0,"commFailedTime":0},"value":{"status":{"(当前)第一象限无功总电能":3.13700008392334,"(当前)第一象限无功费率2电能":0.0,"(当前)第一象限无功费率1电能":3.13700008392334,"(当前)第一象限无功费率4电能":0.0,"(当前)第一象限无功费率3电能":0.0}}}', 1713614645757, 1713614645757),
	(23433, '范例（ModBus）：正泰三相电表DT-SU666', 'ModBus Device', 'Fox Edge', 'Read Holding Register', 'manager', '7a2c8559-6472-4cf4-9736-e623eaf16f5f', '{"regCnt":10,"regAddr":4146,"templateName":"范例：三相电表"}', '{"commStatus":{"commSuccessTime":1713608911323,"commFailedCount":0,"commFailedTime":0},"value":{"status":{"(当前)第一象限无功总电能":3.13700008392334,"(当前)第一象限无功费率2电能":0.0,"(当前)第一象限无功费率1电能":3.13700008392334,"(当前)第一象限无功费率4电能":0.0,"(当前)第一象限无功费率3电能":0.0}}}', 1713614645774, 1713614645774),
	(23434, '范例（ModBus）：正泰三相电表DT-SU666', 'ModBus Device', 'Fox Edge', 'Read Holding Register', 'manager', 'a44da8a2-a41a-4ef3-a0da-0972a5b4db8c', '{"regCnt":10,"regAddr":4146,"templateName":"范例：三相电表"}', '{"commStatus":{"commSuccessTime":1713608924123,"commFailedCount":0,"commFailedTime":0},"value":{"status":{"(当前)第一象限无功总电能":3.13700008392334,"(当前)第一象限无功费率2电能":0.0,"(当前)第一象限无功费率1电能":3.13700008392334,"(当前)第一象限无功费率4电能":0.0,"(当前)第一象限无功费率3电能":0.0}}}', 1713614645788, 1713614645788),
	(23435, '范例（ModBus）：正泰三相电表DT-SU666', 'ModBus Device', 'Fox Edge', 'Read Holding Register', 'manager', '01d34e3b-8888-41d2-84b6-1e217de41d8e', '{"regCnt":10,"regAddr":4146,"templateName":"范例：三相电表"}', '{"commStatus":{"commSuccessTime":1713608943890,"commFailedCount":0,"commFailedTime":0},"value":{"status":{"(当前)第一象限无功总电能":3.13700008392334,"(当前)第一象限无功费率2电能":0.0,"(当前)第一象限无功费率1电能":3.13700008392334,"(当前)第一象限无功费率4电能":0.0,"(当前)第一象限无功费率3电能":0.0}}}', 1713614645813, 1713614645813),
	(23436, '范例（ModBus）：正泰三相电表DT-SU666', 'ModBus Device', 'Fox Edge', 'Read Holding Register', 'manager', '7c6d504d-a333-4ead-b013-b6afe0414e40', '{"regCnt":10,"regAddr":4146,"templateName":"范例：三相电表"}', '{"commStatus":{"commSuccessTime":1713608995247,"commFailedCount":0,"commFailedTime":0},"value":{"status":{"(当前)第一象限无功总电能":3.13700008392334,"(当前)第一象限无功费率2电能":0.0,"(当前)第一象限无功费率1电能":3.13700008392334,"(当前)第一象限无功费率4电能":0.0,"(当前)第一象限无功费率3电能":0.0}}}', 1713614645823, 1713614645823),
	(23437, '范例（ModBus）：正泰三相电表DT-SU666', 'ModBus Device', 'Fox Edge', 'Read Holding Register', 'manager', '693ee024-380d-4d50-8db5-01216d81da40', '{"regCnt":10,"regAddr":4146,"templateName":"范例：三相电表"}', '{"commStatus":{"commSuccessTime":1713609160340,"commFailedCount":0,"commFailedTime":0},"value":{"status":{"(当前)第一象限无功总电能":3.13700008392334,"(当前)第一象限无功费率2电能":0.0,"(当前)第一象限无功费率1电能":3.13700008392334,"(当前)第一象限无功费率4电能":0.0,"(当前)第一象限无功费率3电能":0.0}}}', 1713614645838, 1713614645838),
	(23438, '范例（ModBus）：正泰三相电表DT-SU666', 'ModBus Device', 'Fox Edge', 'Read Holding Register', 'manager', 'd176730e-e638-43ef-8556-74e0e1eea1a7', '{"regCnt":10,"regAddr":4146,"templateName":"范例：三相电表"}', '{"commStatus":{"commSuccessTime":0,"commFailedCount":1,"commFailedTime":1713609339245},"value":{}}', 1713614645838, 1713614645838),
	(23439, '范例（ModBus）：正泰三相电表DT-SU666', 'ModBus Device', 'Fox Edge', 'Read Holding Register', 'manager', '9ffe97db-992e-4316-ac34-2081c83a7d84', '{"regCnt":10,"regAddr":4146,"templateName":"范例：三相电表"}', '{"commStatus":{"commSuccessTime":0,"commFailedCount":1,"commFailedTime":1713609344220},"value":{}}', 1713614645854, 1713614645854),
	(23440, '范例（ModBus）：正泰三相电表DT-SU666', 'ModBus Device', 'Fox Edge', 'Read Holding Register', 'manager', 'a6df6d8a-5823-4511-bc83-94f626734927', '{"regCnt":10,"regAddr":4146,"templateName":"范例：三相电表"}', '{"commStatus":{"commSuccessTime":1713609369780,"commFailedCount":0,"commFailedTime":0},"value":{"status":{"(当前)第一象限无功总电能":3.13700008392334,"(当前)第一象限无功费率2电能":0.0,"(当前)第一象限无功费率1电能":3.13700008392334,"(当前)第一象限无功费率4电能":0.0,"(当前)第一象限无功费率3电能":0.0}}}', 1713614645854, 1713614645854),
	(23441, '范例（ModBus）：正泰三相电表DT-SU666', 'ModBus Device', 'Fox Edge', 'Read Holding Register', 'manager', '62be3f4f-3902-4d19-bc77-ee2ebbcafb28', '{"regCnt":10,"regAddr":4146,"templateName":"范例：三相电表"}', '{"commStatus":{"commSuccessTime":1713609391935,"commFailedCount":0,"commFailedTime":0},"value":{"status":{"(当前)第一象限无功总电能":3.13700008392334,"(当前)第一象限无功费率2电能":0.0,"(当前)第一象限无功费率1电能":3.13700008392334,"(当前)第一象限无功费率4电能":0.0,"(当前)第一象限无功费率3电能":0.0}}}', 1713614645887, 1713614645887),
	(23442, '范例（ModBus）：正泰三相电表DT-SU666', 'ModBus Device', 'Fox Edge', 'Read Holding Register', 'manager', 'a9259785-44b6-40d0-be8a-71f7caf4d34a', '{"regCnt":10,"regAddr":4146,"templateName":"范例：三相电表"}', '{"commStatus":{"commSuccessTime":0,"commFailedCount":1,"commFailedTime":1713609419437},"value":{}}', 1713614645904, 1713614645904),
	(23443, '范例（ModBus）：正泰三相电表DT-SU666', 'ModBus Device', 'Fox Edge', 'Read Holding Register', 'manager', 'd0092dfb-6234-4e99-bbbb-9e161a50f8e1', '{"regCnt":10,"regAddr":4146,"templateName":"范例：三相电表"}', '{"commStatus":{"commSuccessTime":0,"commFailedCount":1,"commFailedTime":1713609450094},"value":{}}', 1713614645922, 1713614645922),
	(23444, '范例（ModBus）：正泰三相电表DT-SU666', 'ModBus Device', 'Fox Edge', 'Read Holding Register', 'manager', 'a01357c9-9c2d-47ff-8b2c-7e25a046c0c7', '{"regCnt":10,"regAddr":4146,"templateName":"范例：三相电表"}', '{"commStatus":{"commSuccessTime":0,"commFailedCount":1,"commFailedTime":1713609461806},"value":{}}', 1713614645929, 1713614645929),
	(23445, '范例（ModBus）：正泰三相电表DT-SU666', 'ModBus Device', 'Fox Edge', 'Read Holding Register', 'manager', '45094aed-3d37-4335-b6ac-2ef507246a5a', '{"regCnt":10,"regAddr":4146,"templateName":"范例：三相电表"}', '{"commStatus":{"commSuccessTime":1713609631709,"commFailedCount":0,"commFailedTime":0},"value":{"status":{"(当前)第一象限无功总电能":3.13700008392334,"(当前)第一象限无功费率2电能":0.0,"(当前)第一象限无功费率1电能":3.13700008392334,"(当前)第一象限无功费率4电能":0.0,"(当前)第一象限无功费率3电能":0.0}}}', 1713614645944, 1713614645944),
	(23446, '范例（ModBus）：正泰三相电表DT-SU666', 'ModBus Device', 'Fox Edge', 'Read Holding Register', 'manager', '951c3924-8636-4391-85ae-912a25022620', '{"regCnt":10,"regAddr":4146,"templateName":"范例：三相电表"}', '{"commStatus":{"commSuccessTime":1713609639217,"commFailedCount":0,"commFailedTime":0},"value":{"status":{"(当前)第一象限无功总电能":3.13700008392334,"(当前)第一象限无功费率2电能":0.0,"(当前)第一象限无功费率1电能":3.13700008392334,"(当前)第一象限无功费率4电能":0.0,"(当前)第一象限无功费率3电能":0.0}}}', 1713614645956, 1713614645956),
	(23447, '范例（ModBus）：正泰三相电表DT-SU666', 'ModBus Device', 'Fox Edge', 'Read Holding Register', 'manager', 'f93bd95e-3c79-479a-b92f-e2ab19928da8', '{"regCnt":10,"regAddr":4146,"templateName":"范例：三相电表"}', '{"commStatus":{"commSuccessTime":0,"commFailedCount":1,"commFailedTime":1713614661930},"value":{}}', 1713614662917, 1713614662917),
	(23448, '范例（ModBus）：正泰三相电表DT-SU666', 'ModBus Device', 'Fox Edge', 'Read Holding Register', 'manager', '1b2ef003-6bad-480b-a4a8-7e195e74a301', '{"regCnt":10,"regAddr":4146,"templateName":"范例：三相电表"}', '{"commStatus":{"commSuccessTime":0,"commFailedCount":1,"commFailedTime":1713614667137},"value":{}}', 1713614667322, 1713614667322),
	(23449, '范例（ModBus）：正泰三相电表DT-SU666', 'ModBus Device', 'Fox Edge', 'Read Holding Register', 'manager', '07da5b71-cbf7-45df-a440-a935511f7a28', '{"regCnt":10,"regAddr":4146,"templateName":"范例：三相电表"}', '{"commStatus":{"commSuccessTime":0,"commFailedCount":1,"commFailedTime":1713619355809},"value":{}}', 1713619615106, 1713619615106),
	(23450, '范例（ModBus）：正泰三相电表DT-SU666', 'ModBus Device', 'Fox Edge', 'Read Holding Register', 'manager', '9626ccf0-79b5-4b7e-b554-a41c22036ad9', '{"regCnt":10,"regAddr":4146,"templateName":"范例：三相电表"}', '{"commStatus":{"commSuccessTime":1713619496088,"commFailedCount":0,"commFailedTime":0},"value":{"status":{"(当前)第一象限无功总电能":3.13700008392334,"(当前)第一象限无功费率2电能":0.0,"(当前)第一象限无功费率1电能":3.13700008392334,"(当前)第一象限无功费率4电能":0.0,"(当前)第一象限无功费率3电能":0.0}}}', 1713619615123, 1713619615123);

-- 正在导出表  fox_edge.tb_period_task 的数据：~5 rows (大约)
DELETE FROM `tb_period_task`;
INSERT INTO `tb_period_task` (`id`, `task_name`, `device_type`, `manufacturer`, `task_param`, `select_device`, `device_ids`, `object_ids`, `create_time`, `update_time`) VALUES
	(30, 'CE+T UPS 15分钟级任务', 'CE+T UPS', '深圳安圣电气有限公司', '{"mode": "interval", "timeUnit": "minute", "timeInterval": 15}', 0, '[2198, 2197, 2194, 2193, 2192, 2191, 2190, 2189]', '["48V直流熔丝断告警状态", "ADDR", "不同步告警状态", "是否工作在交流方式", "是否工作在在线方式", "是否工作在逆变方式", "是否有逆变器手动停", "是否由市电切换到手动旁路", "是否由逆变切换到手动旁路", "用户交流熔丝断告警状态"]', 1678179322939, 1678179538054),
	(32, 'CE+T UPS 1小时级任务', 'CE+T UPS', '深圳安圣电气有限公司', '{"mode": "interval", "timeUnit": "hour", "timeInterval": 1}', 0, '[2198, 2197, 2194, 2193, 2192, 2191, 2190, 2189]', '["逆变器01温度", "逆变器01输出功率", "逆变器01输出电流", "逆变器02温度"]', 1678179424596, 1678717472511),
	(33, 'CE+T UPS 1天任务', 'CE+T UPS', '深圳安圣电气有限公司', '{"mode": "interval", "timeUnit": "day", "timeInterval": 1}', 0, '[2198, 2197, 2194, 2193, 2192, 2191, 2190, 2189]', '["系统输出电压", "系统输出电流", "系统输出频率"]', 1678179442655, 1678717459645),
	(34, 'CJT188 10秒级任务', 'CJT188', 'Fox Edge', '{"mode": "interval", "timeUnit": "second", "timeInterval": 10}', 0, '[2204]', '["时间", "本月用量", "本月用量单位", "状态1", "状态2", "累计用量", "累计用量单位", "sn"]', 1678179504482, 1699502758108),
	(37, 'www', 'S7 PLC', 'Siemens', '{}', 0, '[]', '[]', 1699533503123, 1699533503123);

-- 正在导出表  fox_edge.tb_probe 的数据：~0 rows (大约)
DELETE FROM `tb_probe`;

-- 正在导出表  fox_edge.tb_repo_comp 的数据：~110 rows (大约)
DELETE FROM `tb_repo_comp`;
INSERT INTO `tb_repo_comp` (`id`, `comp_repo`, `comp_type`, `comp_name`, `comp_param`, `create_time`, `update_time`) VALUES
	(59, 'local', 'jsp-decoder', '武汉中科图灵科技有限公司:尼特烟雾传感器-4G-YG', '{"compId": "657a7e1e15134f0defa48315", "groupName": "public", "deviceType": "尼特烟雾传感器-4G-YG", "manufacturer": "武汉中科图灵科技有限公司", "installVersion": {"updateTime": "2023-12-14 18:14:30", "description": "升级到1.0.8版本"}}', 1701056809517, 1705584009798),
	(60, 'local', 'jsp-decoder', '武汉中科图灵科技有限公司:消防用水五合一（LoRaWan）', '{"compId": "657a7e3715134f0defa48317", "groupName": "public", "deviceType": "消防用水五合一（LoRaWan）", "manufacturer": "武汉中科图灵科技有限公司", "installVersion": {"updateTime": "2023-12-14 18:14:27", "description": "升级到1.0.8版本"}}', 1701056809517, 1705584009798),
	(106, 'local', 'app-service', 'kernel:gateway-service', '{"appName": "gateway-service", "appType": "kernel", "fileName": "fox-edge-server-kernel-gateway.jar", "confFiles": [], "loaderName": "", "springParam": ""}', 1701357059009, 1710253640619),
	(108, 'local', 'app-service', 'system:controller-service', '{"appName": "controller-service", "appType": "system", "fileName": "fox-edge-server-controller-service.jar", "confFiles": [], "loaderName": "", "springParam": ""}', 1701357059073, 1701404146898),
	(109, 'local', 'app-service', 'system:persist-service', '{"appName": "persist-service", "appType": "system", "fileName": "fox-edge-server-persist-service.jar", "confFiles": [], "loaderName": "", "springParam": ""}', 1701357059100, 1701404146924),
	(110, 'local', 'app-service', 'system:device-service', '{"appName": "device-service", "appType": "system", "fileName": "fox-edge-server-device-service.jar", "confFiles": [], "loaderName": "", "springParam": ""}', 1701357059137, 1701404146978),
	(111, 'local', 'app-service', 'service:channel-serialport', '{"appName": "channel-serialport", "appType": "service", "fileName": "fox-edge-server-channel-serialport.jar", "confFiles": [], "loaderName": "", "springParam": ""}', 1701357059170, 1701525005108),
	(112, 'local', 'app-service', 'service:channel-simulator-service', '{"appName": "channel-simulator-service", "appType": "service", "fileName": "fox-edge-server-channel-simulator-service.jar", "confFiles": [], "loaderName": "", "springParam": ""}', 1701357059195, 1701404147032),
	(113, 'local', 'app-service', 'service:channel-tcp-server', '{"appName": "channel-tcp-server", "appType": "service", "fileName": "fox-edge-server-channel-tcp-server.jar", "confFiles": [], "loaderName": "", "springParam": ""}', 1701357059210, 1701404147083),
	(114, 'local', 'app-service', 'service:channel-mqtt-client', '{"appName": "channel-mqtt-client", "appType": "service", "fileName": "fox-edge-server-channel-mqtt-client.jar", "confFiles": [], "loaderName": "", "springParam": ""}', 1701357059224, 1701404147113),
	(115, 'local', 'app-service', 'service:channel-udp-client', '{"appName": "channel-udp-client", "appType": "service", "fileName": "fox-edge-server-channel-udp-client.jar", "confFiles": [], "loaderName": "", "springParam": ""}', 1701357059234, 1703562946510),
	(116, 'local', 'app-service', 'service:channel-udp-server', '{"appName": "channel-udp-server", "appType": "service", "fileName": "fox-edge-server-channel-udp-server.jar", "confFiles": [], "loaderName": "", "springParam": ""}', 1701357059255, 1701404147176),
	(117, 'local', 'app-service', 'service:channel-tcp-client', '{"appName": "channel-tcp-client", "appType": "service", "fileName": "fox-edge-server-channel-tcp-client.jar", "confFiles": [], "loaderName": "", "springParam": ""}', 1701357059278, 1701404147220),
	(244, 'local', 'jar-decoder', 'fox-edge-server-protocol-core.v1.jar', '{"load": true, "size": 25800, "compId": "6496ee8772a7405ccb491030", "version": "1.0.4", "fileName": "fox-edge-server-protocol-core.v1.jar", "groupName": "public", "modelName": "fox-edge-server-protocol-core", "deviceType": "public", "manufacturer": "Fox-Edge", "modelVersion": "v1"}', 1701701547482, 1702211159958),
	(245, 'local', 'jar-decoder', 'fox-edge-server-protocol-utils.v1.jar', '{"load": true, "size": 16646, "compId": "650064fd77c101220309e1eb", "version": "1.0.9", "fileName": "fox-edge-server-protocol-utils.v1.jar", "groupName": "public", "modelName": "fox-edge-server-protocol-utils", "deviceType": "public", "manufacturer": "Fox-Edge", "modelVersion": "v1"}', 1701701547508, 1709274623298),
	(246, 'local', 'jar-decoder', 'fox-edge-server-protocol-modbus.v1.jar', '{"load":true,"size":33246,"compId":"6496eed572a7405ccb491035","version":"1.1.1","fileName":"fox-edge-server-protocol-modbus.v1.jar","groupName":"public","modelName":"fox-edge-server-protocol-modbus","deviceType":"ModBus Device","manufacturer":"Fox Edge","modelVersion":"v1"}', 1701701547582, 1712494297910),
	(247, 'local', 'jar-decoder', 'fox-edge-server-protocol-zktl-ctrl4g.v1.jar', '{"load": true, "size": 15783, "compId": "6504320efe022a399f976f3f", "version": "1.0.8", "fileName": "fox-edge-server-protocol-zktl-ctrl4g.v1.jar", "groupName": "public", "modelName": "fox-edge-server-protocol-zktl-ctrl4g", "deviceType": "4G控制器", "manufacturer": "武汉中科图灵科技有限公司", "modelVersion": "v1"}', 1701701547660, 1705328221544),
	(248, 'local', 'jar-decoder', 'hutool-core.v1.jar', '{"load": true, "size": 1216553, "compId": "6496ef5f72a7405ccb491043", "version": "5.8.3", "fileName": "hutool-core.v1.jar", "groupName": "public", "modelName": "hutool-core", "deviceType": "public", "manufacturer": "Fox-Edge", "modelVersion": "v1"}', 1701701547736, 1702211160539),
	(249, 'local', 'jar-decoder', 'fox-edge-server-protocol-mitsubishi-plc-fx-core.v1.jar', '{"load": true, "size": 12235, "compId": "6496ef2272a7405ccb49103c", "version": "1.0.7", "fileName": "fox-edge-server-protocol-mitsubishi-plc-fx-core.v1.jar", "groupName": "public", "modelName": "fox-edge-server-protocol-mitsubishi-plc-fx-core", "deviceType": "public", "manufacturer": "Fox-Edge", "modelVersion": "v1"}', 1701701547758, 1702211144021),
	(250, 'local', 'jar-decoder', 'fox-edge-server-protocol-bass260zj.v1.jar', '{"load": true, "size": 8031, "compId": "648db1a814a5937d50812cc3", "version": "1.0.8", "fileName": "fox-edge-server-protocol-bass260zj.v1.jar", "groupName": "public", "modelName": "fox-edge-server-protocol-bass260zj", "deviceType": "BASS260ZJ", "manufacturer": "广东高新兴", "modelVersion": "v1"}', 1701701547791, 1704028873396),
	(251, 'local', 'jar-decoder', 'fox-edge-server-protocol-cetups.v1.jar', '{"load": true, "size": 8334, "compId": "648db1ca14db021a7fb66243", "version": "1.0.4", "fileName": "fox-edge-server-protocol-cetups.v1.jar", "groupName": "public", "modelName": "fox-edge-server-protocol-cetups", "deviceType": "CE+T UPS", "manufacturer": "深圳安圣电气有限公司", "modelVersion": "v1"}', 1701701547822, 1702870998572),
	(252, 'local', 'jar-decoder', 'fox-edge-server-protocol-opc-ua.v1.jar', '{"load": true, "size": 17667, "compId": "64ad13966bba834e4622bbfe", "version": "1.0.4", "fileName": "fox-edge-server-protocol-opc-ua.v1.jar", "groupName": "public", "modelName": "fox-edge-server-protocol-opc-ua", "deviceType": "OPC-UA", "manufacturer": "Fox Edge", "modelVersion": "v1"}', 1701701547892, 1702870998626),
	(253, 'local', 'jar-decoder', 'fox-edge-server-protocol-dlt645-1997.v1.jar', '{"load": true, "size": 11208, "compId": "6496eec172a7405ccb491034", "version": "1.0.4", "fileName": "fox-edge-server-protocol-dlt645-1997.v1.jar", "groupName": "public", "modelName": "fox-edge-server-protocol-dlt645-1997", "deviceType": "DLT645 v1997", "manufacturer": "Fox Edge", "modelVersion": "v1"}', 1701701547919, 1702870998806),
	(254, 'local', 'jar-decoder', 'fox-edge-server-protocol-mitsubishi-plc-fx.v1.jar', '{"load": true, "size": 18409, "compId": "6496ef2272a7405ccb49103c", "version": "1.0.4", "fileName": "fox-edge-server-protocol-mitsubishi-plc-fx.v1.jar", "groupName": "public", "modelName": "fox-edge-server-protocol-mitsubishi-plc-fx", "deviceType": "mitsubishi-plc-fx", "manufacturer": "mitsubishi", "modelVersion": "v1"}', 1701701547941, 1702870998929),
	(255, 'local', 'jar-decoder', 'fox-edge-server-protocol-zktl-air6in1.v1.jar', '{"load": true, "size": 15826, "compId": "65006dc47148065d00ab3f7a", "version": "1.0.9", "fileName": "fox-edge-server-protocol-zktl-air6in1.v1.jar", "groupName": "public", "modelName": "fox-edge-server-protocol-zktl-air6in1", "deviceType": "六合一空气监测传感器", "manufacturer": "武汉中科图灵科技有限公司", "modelVersion": "v1"}', 1701701547956, 1709274629727),
	(256, 'local', 'jar-decoder', 'fox-edge-server-protocol-zs-sht30-1t-1h.v1.jar', '{"load": true, "size": 4785, "compId": "64aeae38064e024cea088590", "version": "1.0.4", "fileName": "fox-edge-server-protocol-zs-sht30-1t-1h.v1.jar", "groupName": "public", "modelName": "fox-edge-server-protocol-zs-sht30-1t-1h", "deviceType": "温湿度采集模块(ZS-SHT30-1T-1H-485)", "manufacturer": "中盛科技", "modelVersion": "v1"}', 1701701547996, 1702870999186),
	(257, 'local', 'jar-decoder', 'fox-edge-server-protocol-zxdu58.v1.jar', '{"load": true, "size": 10892, "compId": "65085b4fa23fde05f0f50e64", "version": "1.0.8", "fileName": "fox-edge-server-protocol-zxdu58.v1.jar", "groupName": "public", "modelName": "fox-edge-server-protocol-zxdu58", "deviceType": "ZXDU58", "manufacturer": "中兴通讯", "modelVersion": "v1"}', 1701701548014, 1703157369507),
	(258, 'local', 'jar-decoder', 'fox-edge-server-protocol-iec104-core.v1.jar', '{"load": true, "size": 42419, "compId": "6496ef0a72a7405ccb491039", "version": "1.0.4", "fileName": "fox-edge-server-protocol-iec104-core.v1.jar", "groupName": "public", "modelName": "fox-edge-server-protocol-iec104-core", "deviceType": "public", "manufacturer": "Fox-Edge", "modelVersion": "v1"}', 1701701548100, 1702211155317),
	(259, 'local', 'jar-decoder', 'fox-edge-server-protocol-telecom-core.v1.jar', '{"load": true, "size": 8727, "compId": "6496eef672a7405ccb491037", "version": "1.0.4", "fileName": "fox-edge-server-protocol-telecom-core.v1.jar", "groupName": "public", "modelName": "fox-edge-server-protocol-telecom-core", "deviceType": "public", "manufacturer": "Fox-Edge", "modelVersion": "v1"}', 1701701548131, 1702211166921),
	(260, 'local', 'jar-decoder', 'fox-edge-server-protocol-iec104-slaver.v1.jar', '{"load": true, "size": 25380, "compId": "6496ef1272a7405ccb49103a", "version": "1.0.4", "fileName": "fox-edge-server-protocol-iec104-slaver.v1.jar", "groupName": "public", "modelName": "fox-edge-server-protocol-iec104-slaver", "deviceType": "IEC104 Device", "manufacturer": "Fox Edge", "modelVersion": "v1"}', 1701701548158, 1702870998470),
	(261, 'local', 'jar-decoder', 'fox-edge-server-protocol-dlt645-core.v1.jar', '{"load": true, "size": 28919, "compId": "6496eeb872a7405ccb491033", "version": "1.0.4", "fileName": "fox-edge-server-protocol-dlt645-core.v1.jar", "groupName": "public", "modelName": "fox-edge-server-protocol-dlt645-core", "deviceType": "public", "manufacturer": "Fox-Edge", "modelVersion": "v1"}', 1701701548175, 1702211168423),
	(262, 'local', 'jar-decoder', 'fox-edge-server-protocol-shmeter.v1.jar', '{"load": true, "size": 5370, "compId": "6496ef4672a7405ccb491040", "version": "1.0.4", "fileName": "fox-edge-server-protocol-shmeter.v1.jar", "groupName": "public", "modelName": "fox-edge-server-protocol-shmeter", "deviceType": "ShangHai Electricity Meter", "manufacturer": "上海电表厂", "modelVersion": "v1"}', 1701701548207, 1702870998495),
	(263, 'local', 'jar-decoder', 'fox-edge-server-protocol-cjt188.v1.jar', '{"load": true, "size": 12701, "compId": "6496eea472a7405ccb491031", "version": "1.0.4", "fileName": "fox-edge-server-protocol-cjt188.v1.jar", "groupName": "public", "modelName": "fox-edge-server-protocol-cjt188", "deviceType": "CJT188", "manufacturer": "Fox Edge", "modelVersion": "v1"}', 1701701548223, 1702870998521),
	(264, 'local', 'jar-decoder', 'fox-edge-server-protocol-anno.v1.jar', '{"load":true,"size":6734,"compId":"6496ee7c72a7405ccb49102f","version":"1.1.1","fileName":"fox-edge-server-protocol-anno.v1.jar","groupName":"public","modelName":"fox-edge-server-protocol-anno","deviceType":"public","manufacturer":"Fox-Edge","modelVersion":"v1"}', 1701701548239, 1712494013071),
	(265, 'local', 'jar-decoder', 'fox-edge-server-protocol-zktl-electric.v1.jar', '{"load": true, "size": 23851, "compId": "65043231fe022a399f976f40", "version": "1.0.4", "fileName": "fox-edge-server-protocol-zktl-electric.v1.jar", "groupName": "public", "modelName": "fox-edge-server-protocol-zktl-electric", "deviceType": "电器火灾监控设备", "manufacturer": "武汉中科图灵科技有限公司", "modelVersion": "v1"}', 1701701548255, 1702870998674),
	(266, 'local', 'jar-decoder', 'fox-edge-server-protocol-cjt188-core.v1.jar', '{"load": true, "size": 10235, "compId": "6496eea472a7405ccb491031", "version": "1.0.4", "fileName": "fox-edge-server-protocol-cjt188-core.v1.jar", "groupName": "public", "modelName": "fox-edge-server-protocol-cjt188-core", "deviceType": "public", "manufacturer": "Fox-Edge", "modelVersion": "v1"}', 1701701548278, 1702211164053),
	(267, 'local', 'jar-decoder', 'fox-edge-server-protocol-s7plc-core.v1.jar', '{"load": true, "size": 194288, "compId": "65241594ee8d5b54f935ae39", "version": "1.0.4", "fileName": "fox-edge-server-protocol-s7plc-core.v1.jar", "groupName": "public", "modelName": "fox-edge-server-protocol-s7plc-core", "deviceType": "public", "manufacturer": "Fox-Edge", "modelVersion": "v1"}', 1701701548295, 1702211156973),
	(268, 'local', 'jar-decoder', 'fox-edge-server-protocol-snmp.v1.jar', '{"load": true, "size": 14884, "compId": "6496ef4e72a7405ccb491041", "version": "1.0.4", "fileName": "fox-edge-server-protocol-snmp.v1.jar", "groupName": "public", "modelName": "fox-edge-server-protocol-snmp", "deviceType": "SNMP Device", "manufacturer": "Fox Edge", "modelVersion": "v1"}', 1701701548339, 1702870998746),
	(269, 'local', 'jar-decoder', 'fox-edge-server-protocol-omron-fins-core.v1.jar', '{"load": true, "size": 23241, "compId": "6496ef3c72a7405ccb49103f", "version": "1.0.8", "fileName": "fox-edge-server-protocol-omron-fins-core.v1.jar", "groupName": "public", "modelName": "fox-edge-server-protocol-omron-fins-core", "deviceType": "public", "manufacturer": "Fox-Edge", "modelVersion": "v1"}', 1701701548391, 1703558394841),
	(271, 'local', 'jar-decoder', 'fox-edge-server-protocol-omron-fins.v1.jar', '{"load": true, "size": 7364, "compId": "6496ef3472a7405ccb49103e", "version": "1.0.8", "fileName": "fox-edge-server-protocol-omron-fins.v1.jar", "groupName": "public", "modelName": "fox-edge-server-protocol-omron-fins", "deviceType": "omron-fins", "manufacturer": "omron", "modelVersion": "v1"}', 1701701548465, 1702870998895),
	(272, 'local', 'jar-decoder', 'fox-edge-server-protocol-gdana-digester.v1.jar', '{"load": true, "size": 29448, "compId": "6496ef0072a7405ccb491038", "version": "1.0.4", "fileName": "fox-edge-server-protocol-gdana-digester.v1.jar", "groupName": "public", "modelName": "fox-edge-server-protocol-gdana-digester", "deviceType": "全自动消解控制器", "manufacturer": "广州格丹纳仪器有限公司", "modelVersion": "v1"}', 1701701548484, 1702870998993),
	(273, 'local', 'jar-decoder', 'fox-edge-server-protocol-s7plc.v1.jar', '{"load": true, "size": 17760, "compId": "652415e3ee8d5b54f935ae3a", "version": "1.0.4", "fileName": "fox-edge-server-protocol-s7plc.v1.jar", "groupName": "public", "modelName": "fox-edge-server-protocol-s7plc", "deviceType": "S7 PLC", "manufacturer": "Siemens", "modelVersion": "v1"}', 1701701548514, 1702870999225),
	(274, 'local', 'jar-decoder', 'fox-edge-server-protocol-zktl-air5in1.v1.jar', '{"load": true, "size": 18279, "compId": "65006dd07148065d00ab3f7b", "version": "1.0.4", "fileName": "fox-edge-server-protocol-zktl-air5in1.v1.jar", "groupName": "public", "modelName": "fox-edge-server-protocol-zktl-air5in1", "deviceType": "五合一空气监测传感器", "manufacturer": "武汉中科图灵科技有限公司", "modelVersion": "v1"}', 1701701548601, 1702870999123),
	(275, 'local', 'jar-decoder', 'fox-edge-server-protocol-yy-fj.v1.jar', '{"load": true, "size": 7850, "compId": "655477a3f86c8e6a14132426", "version": "1.0.7", "fileName": "fox-edge-server-protocol-yy-fj.v1.jar", "groupName": "public", "modelName": "fox-edge-server-protocol-yy-fj", "deviceType": "风机(JPF4826)", "manufacturer": "成都兢志成电子科技有限公司", "modelVersion": "v1"}', 1701761633773, 1704597600460),
	(276, 'local', 'jsp-decoder', '海湾安全技术有限公司:JB-QB-GST500', '{"compId": "657a7e4a15134f0defa48318", "groupName": "public", "deviceType": "JB-QB-GST500", "manufacturer": "海湾安全技术有限公司", "installVersion": {"updateTime": "2023-12-25 16:57:42", "description": "修改bug"}}', 1701916105294, 1705584009856),
	(279, 'local', 'app-service', 'service:channel-serialport-analyzer', '{"appName": "channel-serialport-analyzer", "appType": "service", "fileName": "fox-edge-server-channel-serialport-analyzer.jar", "confFiles": [], "loaderName": "", "springParam": ""}', 1702543643820, 1702543643820),
	(280, 'local', 'app-service', 'service:channel-s7plc-client', '{"appName": "channel-s7plc-client", "appType": "service", "fileName": "fox-edge-server-channel-s7plc-client.jar", "confFiles": [], "loaderName": "", "springParam": ""}', 1702544995871, 1702544995871),
	(281, 'local', 'app-service', 'service:channel-opc-ua', '{"appName": "channel-opc-ua", "appType": "service", "fileName": "fox-edge-server-channel-opc-ua.jar", "confFiles": [], "loaderName": "", "springParam": ""}', 1702544996250, 1702544996250),
	(282, 'local', 'app-service', 'service:link-tcp2tcp', '{"appName": "link-tcp2tcp", "appType": "service", "fileName": "fox-edge-server-link-tcp2tcp.jar", "confFiles": [], "loaderName": "", "springParam": ""}', 1702544996309, 1702544996309),
	(283, 'local', 'jar-decoder', 'fox-edge-server-protocol-lrw.v1.jar', '{"fileName": "fox-edge-server-protocol-lrw.v1.jar", "modelName": "fox-edge-server-protocol-lrw", "deviceType": "LRW解码器", "manufacturer": "Fox-Edge", "modelVersion": "v1"}', 1702555291037, 1702870998852),
	(284, 'local', 'app-service', 'service:iot-whzktl', '{"appName": "iot-whzktl", "appType": "service", "fileName": "fox-edge-server-iot-whzktl.jar", "confFiles": [], "loaderName": "", "springParam": ""}', 1702622219034, 1702622219034),
	(285, 'local', 'app-service', 'service:iot-thingspanel', '{"appName": "iot-thingspanel", "appType": "service", "fileName": "fox-edge-server-iot-thingspanel.jar", "confFiles": [], "loaderName": "", "springParam": ""}', 1702622219106, 1702622219106),
	(286, 'local', 'app-service', 'service:iot-huawei', '{"appName": "iot-huawei", "appType": "service", "fileName": "fox-edge-server-iot-huawei.jar", "confFiles": [], "loaderName": "", "springParam": "", "fileNameShow": "zktl-edge-server-iot-huawei.jar"}', 1702622219125, 1703562946432),
	(287, 'local', 'app-service', 'service:iot-thingsboard', '{"appName": "iot-thingsboard", "appType": "service", "fileName": "fox-edge-server-iot-thingsboard.jar", "confFiles": [], "loaderName": "", "springParam": ""}', 1702622219148, 1702622219148),
	(288, 'local', 'jsp-decoder', '华为技术有限公司:基站电源-ABC', '{"compId": "657a7e5815134f0defa48319", "groupName": "public", "deviceType": "基站电源-ABC", "manufacturer": "华为技术有限公司", "installVersion": {"id": "657ad588e81aa367295a0d72", "updateTime": "2023-12-14 18:14:32", "description": "升级到1.0.8版本"}}', 1702646396377, 1705584010292),
	(291, 'local', 'jar-decoder', 'fox-edge-server-protocol-modbus-core.v1.jar', '{"load":false,"size":23444,"compId":"6496eeec72a7405ccb491036","version":"1.1.1","fileName":"fox-edge-server-protocol-modbus-core.v1.jar","groupName":"public","modelName":"fox-edge-server-protocol-modbus-core","deviceType":"public","manufacturer":"Fox-Edge","modelVersion":"v1"}', 1703144823394, 1712494326742),
	(292, 'local', 'jsp-decoder', '海湾安全技术有限公司:JB-QB-GST9000', '{"compId": "659817ad3f159436119c87ca", "groupName": "public", "deviceType": "JB-QB-GST9000", "manufacturer": "海湾安全技术有限公司", "installVersion": {"updateTime": "2023-12-22 21:46:22", "description": "增加描述信息"}}', 1703166715208, 1705584086221),
	(299, 'local', 'jar-decoder', 'fox-edge-server-protocol-dahua-fire-core.v1.jar', '{"load": false, "size": 98270, "compId": "6590ee5b6dc56203cd2d1192", "version": "1.0.8", "fileName": "fox-edge-server-protocol-dahua-fire-core.v1.jar", "groupName": "public", "modelName": "fox-edge-server-protocol-dahua-fire-core", "deviceType": "消防主机", "manufacturer": "浙江大华股份技术有限公司", "modelVersion": "v1"}', 1704013523649, 1704028702219),
	(302, 'local', 'app-service', 'kernel:manager-service', '{"appName": "manager-service", "appType": "kernel", "fileName": "fox-edge-server-manager-service.jar", "confFiles": [], "loaderName": "", "springParam": ""}', 1704025036700, 1710253640783),
	(304, 'local', 'jsp-decoder', '中国环境保护设备:HJ212-2017', '{"compId": "659817773f159436119c87c8", "groupName": "public", "deviceType": "HJ212-2017", "manufacturer": "中国环境保护设备"}', 1704108861506, 1705584009908),
	(306, 'local', 'file-template', 'fox-edge-opc-ua', '{"compId": "64ad13db6bba834e4622bbff", "version": "1.0.0", "groupName": "public", "modelName": "fox-edge-opc-ua", "deviceType": "OPC-UA", "manufacturer": "Fox-Edge", "modelVersion": "v1"}', 1704256035185, 1704256056088),
	(307, 'local', 'file-template', 'dobot-mg400', '{"compId": "6510f3b349e74e708d2450db", "version": "1.0.0", "groupName": "public", "modelName": "dobot-mg400", "deviceType": "MG400", "manufacturer": "深圳市越疆科技有限公司", "modelVersion": "v1"}', 1704256040537, 1705570599875),
	(308, 'local', 'file-template', 's7plc-s1200', '{"compId": "652417b3ee8d5b54f935ae3c", "version": "1.0.0", "groupName": "public", "modelName": "s7plc-s1200", "deviceType": "s7plc-s1200", "manufacturer": "西门子", "modelVersion": "v1"}', 1704256041263, 1704256057166),
	(309, 'local', 'file-template', 'DLT645-v1997', '{"compId": "648db23314db021a7fb66244", "version": "1.0.0", "groupName": "public", "modelName": "DLT645-v1997", "deviceType": "DLT645-v1997", "manufacturer": "Fox-Edge", "modelVersion": "v1"}', 1704256041769, 1704256060022),
	(310, 'local', 'file-template', 'modbus', '{"compId": "6497fc7872a7405ccb491044", "version": "1.0.0", "groupName": "public", "modelName": "modbus", "deviceType": "ModBus", "manufacturer": "Fox-Edge", "modelVersion": "v1"}', 1704256042474, 1704256052812),
	(311, 'local', 'file-template', 'IEC104-slaver', '{"compId": "6497fc8c72a7405ccb491045", "version": "1.0.0", "groupName": "public", "modelName": "IEC104-slaver", "deviceType": "IEC104", "manufacturer": "Fox-Edge", "modelVersion": "v1"}', 1704256042714, 1704256055343),
	(312, 'local', 'file-template', 'mitsubishi-plc-fx', '{"compId": "6497fca572a7405ccb491046", "version": "1.0.0", "groupName": "public", "modelName": "mitsubishi-plc-fx", "deviceType": "PLC-FX", "manufacturer": "Mitsubishi", "modelVersion": "v1"}', 1704256043710, 1704256058338),
	(313, 'local', 'file-template', 'omron-fins', '{"compId": "6497fcb772a7405ccb491047", "version": "1.0.0", "groupName": "public", "modelName": "omron-fins", "deviceType": "PLC-Fins", "manufacturer": "OMRON", "modelVersion": "v1"}', 1704256044269, 1704256053489),
	(314, 'local', 'file-template', 'snmp', '{"compId": "6497fcca72a7405ccb491048", "version": "1.0.0", "groupName": "public", "modelName": "snmp", "deviceType": "SNMP", "manufacturer": "Fox-Edge", "modelVersion": "v1"}', 1704256045214, 1704256054374),
	(315, 'local', 'jsp-decoder', '海康威视:消防主机', '{"compId": "65a4a697e3759913c2dfae08", "groupName": "public", "deviceType": "消防主机", "manufacturer": "海康威视", "installVersion": {"id": "65a928c7c339613c6fd56f1d", "updateTime": "2024-01-18 21:33:59", "description": "111"}}', 1705154027486, 1705585354858),
	(316, 'local', 'app-service', 'service:channel-hikvision-fire', '{"appName": "channel-hikvision-fire", "appType": "service", "fileName": "fox-edge-server-channel-hikvision-fire.jar", "confFiles": [], "loaderName": "", "springParam": ""}', 1705328127049, 1705328127049),
	(317, 'local', 'jar-decoder', 'fox-edge-server-protocol-hikvision-fire-core.v1.jar', '{"load":false,"size":42804,"compId":"65a7a29882b9700261190ca7","version":"1.1.1","fileName":"fox-edge-server-protocol-hikvision-fire-core.v1.jar","groupName":"public","modelName":"fox-edge-server-protocol-hikvision-fire-core","deviceType":"public","manufacturer":"Fox-Edge","modelVersion":"v1"}', 1705498239513, 1712495199559),
	(318, 'local', 'jar-decoder', 'fox-edge-server-protocol-hj212-2017.v1.jar', '{"load": false, "size": 10012, "compId": "65a7a2d582b9700261190ca8", "version": "1.1.0", "fileName": "fox-edge-server-protocol-hj212-2017.v1.jar", "groupName": "public", "modelName": "fox-edge-server-protocol-hj212-2017", "deviceType": "public", "manufacturer": "Fox-Edge", "modelVersion": "v1"}', 1705498489177, 1705726558645),
	(319, 'local', 'jar-decoder', 'fox-edge-server-protocol-tsl-lfc705.v1.jar', '{"compId": "65a8eebf82b9700261190cae", "fileName": "fox-edge-server-protocol-tsl-lfc705.v1.jar", "modelName": "fox-edge-server-protocol-tsl-lfc705", "deviceType": "LRW解码器", "manufacturer": "Fox-Edge", "modelVersion": "v1"}', 1705579863960, 1705579863960),
	(320, 'local', 'jar-decoder', 'fox-edge-server-protocol-haier-ycj-a002.v1.jar', '{"load": true, "size": 17130, "compId": "65e08811e1a0cc65c163a257", "version": "1.1.0", "fileName": "fox-edge-server-protocol-haier-ycj-a002.v1.jar", "groupName": "public", "modelName": "fox-edge-server-protocol-haier-ycj-a002", "deviceType": "海尔空调-YCJ-A000", "manufacturer": "海尔集团公司", "modelVersion": "v1"}', 1709213839298, 1709274639217),
	(321, 'local', 'app-service', 'service:python-server-demo', '{"appName": "python-server-demo", "appType": "service", "fileName": "python-server-demo-20240312.py", "confFiles": [], "loaderName": "", "springParam": null}', 1710331733568, 1710331733568),
	(322, 'local', 'jar-decoder', 'fox-edge-server-protocol-s3p-core.v1.jar', '{"load": true, "size": 6737, "compId": "65eab166e1a0cc65c163a258", "version": "1.1.1", "fileName": "fox-edge-server-protocol-s3p-core.v1.jar", "groupName": "public", "modelName": "fox-edge-server-protocol-s3p-core", "deviceType": "public", "manufacturer": "Fox-Edge", "modelVersion": "v1"}', 1710335765052, 1711784049341),
	(325, 'local', 'app-service', 'system:device-graalvm', '{"appName": "device-graalvm", "appType": "system", "fileName": "fox-edge-server-device-graalvm.jar", "confFiles": [], "loaderName": "", "springParam": ""}', 1710774065380, 1711078102092),
	(326, 'local', 'jar-decoder', 'fox-edge-server-protocol-tcl-air-adapter.v1.jar', '{"load":true,"size":13722,"compId":"65fc4edfe1a0cc65c163a25d","version":"1.1.1","fileName":"fox-edge-server-protocol-tcl-air-adapter.v1.jar","groupName":"public","modelName":"fox-edge-server-protocol-tcl-air-adapter","deviceType":"柜式空调(KPRd)","manufacturer":"TCL科技集团股份有限公司","modelVersion":"v1"}', 1711078138862, 1712491128901),
	(327, 'local', 'app-service', 'service:channel-simulator', '{"appName": "channel-simulator", "appType": "service", "fileName": "fox-edge-server-channel-simulator.jar", "confFiles": [], "loaderName": "", "springParam": ""}', 1711114992657, 1711114992657),
	(328, 'local', 'file-template', 'rkckth-rs-m88', '{"compId": "6600f0c2e1a0cc65c163a25f", "version": "1.0.0", "groupName": "public", "modelName": "rkckth-rs-m88", "deviceType": "RS-M88", "manufacturer": "建大仁科", "modelVersion": "v1"}', 1711334311124, 1711337984577),
	(329, 'local', 'file-template', 'xxxx-xxx-xxx', '{"version": "1.0.0", "modelName": "xxxx-xxx-xxx", "deviceType": "xxx", "manufacturer": "xxxx", "modelVersion": "v1"}', 1711354341924, 1711354341924),
	(330, 'local', 'jar-decoder', 'fox-edge-server-protocol-yy-rs-ktcs-n01.v1.jar', '{"load": false, "size": 81987, "version": "1.1.1", "fileName": "fox-edge-server-protocol-yy-rs-ktcs-n01.v1.jar", "modelName": "fox-edge-server-protocol-yy-rs-ktcs-n01", "deviceType": "空调控制器(U1)", "manufacturer": "友邻技术有限公司", "modelVersion": "v1"}', 1711596385846, 1711597318037),
	(331, 'local', 'jar-decoder', 'fox-edge-server-protocol-haiwu-air-core.v1.jar', '{"load": true, "size": 18506, "version": "1.1.1", "fileName": "fox-edge-server-protocol-haiwu-air-core.v1.jar", "modelName": "fox-edge-server-protocol-haiwu-air-core", "deviceType": "海悟空调(Ver-1.0)", "manufacturer": "海悟空调有限公司", "modelVersion": "v1"}', 1711599245291, 1711599295725),
	(332, 'local', 'jar-decoder', 'fox-edge-server-protocol-tcl-air-adapter-1.1.1.jar', '{"fileName": "fox-edge-server-protocol-tcl-air-adapter-1.1.1.jar", "modelName": "fox-edge-server-protocol-tcl-air-adapter-1.1", "deviceType": "public", "manufacturer": "Fox-Edge", "modelVersion": "1"}', 1711783075619, 1711783075619),
	(333, 'local', 'jar-decoder', 'fox-edge-server-protocol-haiwu-air-v200.v1.jar', '{"load":true,"size":29148,"compId":"661289dee1a0cc65c163a266","version":"1.1.1","fileName":"fox-edge-server-protocol-haiwu-air-v200.v1.jar","groupName":"public","modelName":"fox-edge-server-protocol-haiwu-air-v200","deviceType":"基站空调(V2.00)","manufacturer":"广东海悟科技有限公司","modelVersion":"v1"}', 1711783075693, 1712491065255),
	(334, 'local', 'jar-decoder', 'fox-edge-server-protocol-haiwu-air-v100.v1.jar', '{"load":true,"size":29177,"compId":"6607ba46e1a0cc65c163a260","version":"1.1.1","fileName":"fox-edge-server-protocol-haiwu-air-v100.v1.jar","groupName":"public","modelName":"fox-edge-server-protocol-haiwu-air-v100","deviceType":"基站空调(V1.00)","manufacturer":"广东海悟科技有限公司","modelVersion":"v1"}', 1711783075712, 1712491063656),
	(335, 'local', 'jar-decoder', 'fox-edge-server-protocol-haiwu-air-v10d.v1.jar', '{"load":true,"size":29174,"compId":"6607ba52e1a0cc65c163a261","version":"1.1.1","fileName":"fox-edge-server-protocol-haiwu-air-v10d.v1.jar","groupName":"public","modelName":"fox-edge-server-protocol-haiwu-air-v10d","deviceType":"基站空调(V1.0D)","manufacturer":"广东海悟科技有限公司","modelVersion":"v1"}', 1711783075732, 1712491064409),
	(336, 'local', 'app-service', 'service:period-service', '{"fileName":"fox-edge-server-period-service.jar","loaderName":"","confFiles":[],"appName":"period-service","appType":"service","springParam":""}', 1712150882953, 1712150882953),
	(337, 'local', 'jar-decoder', 'fox-edge-server-protocol-midea-dcm9.v1.jar', '{"deviceType":"基站空调(V2.00)","modelName":"fox-edge-server-protocol-midea-dcm9","fileName":"fox-edge-server-protocol-midea-dcm9.v1.jar","compId":"661288f8e1a0cc65c163a265","modelVersion":"v1","manufacturer":"美的集团股份有限公司"}', 1712491091653, 1712491091653),
	(338, 'local', 'file-template', 'hgfan-hf315pe', '{"deviceType":"风机(HF-315PE)","manufacturer":"深圳市鸿冠电机有限公司","modelName":"hgfan-hf315pe","modelVersion":"v1","version":"1.0.0"}', 1712669212559, 1712669212559),
	(340, 'local', 'jsp-decoder', '海湾安全技术有限公司:JB-QB-GST200', '{"deviceType":"JB-QB-GST200","manufacturer":"海湾安全技术有限公司","groupName":"public","compId":"66162ca6e1a0cc65c163a268"}', 1712728628481, 1712729262058),
	(341, 'local', 'jsp-decoder', '海湾安全技术有限公司:JB-QB-GST1500H', '{"deviceType":"JB-QB-GST1500H","manufacturer":"海湾安全技术有限公司","groupName":"public","compId":"66169df5e1a0cc65c163a26c","installVersion":{"description":"验证通过","updateTime":"2024-04-10 22:11:38","id":"66169e1ae1a0cc65c163a26d"}}', 1712749723290, 1712828787806),
	(342, 'local', 'jsp-decoder', '北京利达华信电子有限公司:JB-QG-LD128E(Q)I', '{"deviceType":"JB-QG-LD128E(Q)I","manufacturer":"北京利达华信电子有限公司","groupName":"public","compId":"6617bf88e1a0cc65c163a26e","installVersion":{"description":"测试通过","updateTime":"2024-04-11 18:47:07","id":"6617bfabe1a0cc65c163a26f"}}', 1712827603231, 1712841381855),
	(344, 'local', 'jsp-decoder', '北京利达华信电子有限公司:JB-QT-LD188EL', '{"deviceType":"JB-QT-LD188EL","manufacturer":"北京利达华信电子有限公司","groupName":"public","compId":"6618c37fe1a0cc65c163a274"}', 1712842531556, 1712898965832),
	(345, 'local', 'jsp-decoder', '北京利达华信电子有限公司:JB-QG-LD128E(Q)II', '{"deviceType":"JB-QG-LD128E(Q)II","manufacturer":"北京利达华信电子有限公司","groupName":"public","compId":"66190e2ce1a0cc65c163a279"}', 1712917290572, 1712918083087),
	(346, 'local', 'jsp-decoder', '泰和安消防科技有限公司:JB-QB-TX3001DY', '{"deviceType":"JB-QB-TX3001DY","manufacturer":"泰和安消防科技有限公司","groupName":"public","compId":"66194837e1a0cc65c163a27e"}', 1712918748818, 1712932959527),
	(347, 'local', 'jsp-decoder', '泰和安消防科技有限公司:JB-TGL-TX3006C', '{"deviceType":"JB-TGL-TX3006C","manufacturer":"泰和安消防科技有限公司","groupName":"public","compId":"661b5a09e1a0cc65c163a286"}', 1712991037036, 1713068588893),
	(348, 'local', 'jsp-decoder', '上海松江飞繁电子有限公司:JB-3208G', '{"deviceType":"JB-3208G","manufacturer":"上海松江飞繁电子有限公司","groupName":"public","compId":"661b94c7e1a0cc65c163a289"}', 1713076092111, 1713084137122),
	(349, 'local', 'jsp-decoder', '上海松江飞繁电子有限公司:JB-3101G', '{"deviceType":"JB-3101G","manufacturer":"上海松江飞繁电子有限公司","groupName":"public","compId":"661bd558e1a0cc65c163a28d"}', 1713096429884, 1713100168080),
	(350, 'local', 'jsp-decoder', '青鸟消防股份有限公司:JB-TG-JBF-11S', '{"deviceType":"JB-TG-JBF-11S","manufacturer":"青鸟消防股份有限公司","groupName":"public","compId":"661ce166e1a0cc65c163a28f"}', 1713100457638, 1713168781069),
	(352, 'local', 'jsp-decoder', '青鸟消防股份有限公司:JB-QB-JBF-5010', '{"deviceType":"JB-QB-JBF-5010","manufacturer":"青鸟消防股份有限公司","groupName":"public","compId":"661cf43de1a0cc65c163a291"}', 1713171219721, 1713173649536),
	(354, 'local', 'jsp-decoder', '青鸟消防股份有限公司:JB-QB-JBF-5009', '{"deviceType":"JB-QB-JBF-5009","manufacturer":"青鸟消防股份有限公司","groupName":"public","compId":"661d4583e1a0cc65c163a293"}', 1713175239536, 1713194513150),
	(355, 'local', 'jsp-decoder', '德国西门子股份有限公司:JB-TBZL-FC720W', '{"deviceType":"JB-TBZL-FC720W","manufacturer":"德国西门子股份有限公司","groupName":"public","compId":"661e144ae1a0cc65c163a295"}', 1713234914601, 1713247361798),
	(356, 'local', 'jsp-decoder', '深圳市赋安安全系统有限公司:JB-LTZ2-FS5116', '{"deviceType":"JB-LTZ2-FS5116","manufacturer":"深圳市赋安安全系统有限公司","groupName":"public","compId":"661e86f8e1a0cc65c163a29d"}', 1713263237387, 1713276699596),
	(357, 'local', 'jsp-decoder', '青岛鼎信通讯消防安全有限公司:JB-QT-TS3200', '{"deviceType":"JB-QT-TS3200","manufacturer":"青岛鼎信通讯消防安全有限公司","groupName":"public","compId":"661f8cd5e1a0cc65c163a29f"}', 1713317833814, 1713343753178),
	(358, 'local', 'jsp-decoder', '北京防威威盛机电设备有限责任公司:JB-QGZ2L-FW19000G', '{"deviceType":"JB-QGZ2L-FW19000G","manufacturer":"北京防威威盛机电设备有限责任公司","groupName":"public","compId":"661fc381e1a0cc65c163a2a2"}', 1713344587599, 1713357779180),
	(359, 'local', 'jsp-decoder', '福建闽安安全技术有限责任公司:JB-TB-MASYS5000', '{"deviceType":"JB-TB-MASYS5000","manufacturer":"福建闽安安全技术有限责任公司","groupName":"public","compId":"661fdbd9e1a0cc65c163a2a5"}', 1713359778346, 1713363970925),
	(360, 'local', 'jsp-decoder', '蚌埠依爱消防电子有限责任公司:JB-TBL-EI8000S', '{"deviceType":"JB-TBL-EI8000S","manufacturer":"蚌埠依爱消防电子有限责任公司","groupName":"public","compId":"662240c7e1a0cc65c163a2ab"}', 1713498493607, 1713520915558),
	(367, 'local', 'jsn-decoder', '正泰集团股份有限公司:三相电表(DT-SU666)', '{"deviceType":"三相电表(DT-SU666)","manufacturer":"正泰集团股份有限公司"}', 1713540553959, 1713540553959);

-- 正在导出表  fox_edge.tb_trigger 的数据：~4 rows (大约)
DELETE FROM `tb_trigger`;
INSERT INTO `tb_trigger` (`id`, `model_name`, `method_name`, `manufacturer`, `create_time`, `update_time`) VALUES
	(1, '简单触发器', '数字.比较.阈值.告警触发器', 'FoxTeam', 1661422196643, 1661422196643),
	(2, '简单触发器', '布尔.比较.阈值.告警触发器', 'FoxTeam', 1661422196733, 1661422196733),
	(3, '防抖触发器', '数字.平均.次数.均值触发器', 'FoxTeam', 1661609704467, 1661609704467),
	(4, '原生值触发器', '对象.相同.原生触发器', 'FoxTeam', 1661610692650, 1661610692650);

-- 正在导出表  fox_edge.tb_trigger_config 的数据：~7 rows (大约)
DELETE FROM `tb_trigger_config`;
INSERT INTO `tb_trigger_config` (`id`, `trigger_config_name`, `object_range`, `device_name`, `device_type`, `manufacturer`, `objects_name`, `trigger_model_name`, `trigger_method_name`, `queue_deep`, `trigger_param`, `create_time`, `update_time`) VALUES
	(1, '初级过压告警', 'Global', '', '', '', '["A相电压", "B相电压", "C相电压", "(当前)正向有功总电能"]', '简单触发器', '数字.比较.阈值.告警触发器', 5, '{"operator": ">", "threshold": 150}', 1659070403700, 1659070403700),
	(2, '初级过压告警', 'Device', '浙江移动-丽水移动-丹霞山5号基站-4号电源设备:6', 'DLT645 v1997', 'Fox Edge', '["A相电压", "B相电压", "C相电压"]', '简单触发器', '数字.比较.阈值.告警触发器', 5, '{"operator": ">", "threshold": 150}', 1659070403700, 1659070403700),
	(3, '严重过压告警', 'Device', '浙江移动-丽水移动-丹霞山5号基站-4号电源设备:6', 'DLT645 v1997', 'Fox Edge', '["A相电压", "B相电压", "C相电压"]', '简单触发器', '数字.比较.阈值.告警触发器', 5, '{"operator": ">", "threshold": 200}', 1659070403700, 1659070403700),
	(4, '严重低压告警', 'Device', '浙江移动-丽水移动-丹霞山5号基站-4号电源设备:6', 'DLT645 v1997', 'Fox Edge', '["A相电压", "B相电压", "C相电压"]', '简单触发器', '数字.比较.阈值.告警触发器', 5, '{"operator": "<", "threshold": 150}', 1659070403700, 1659070403700),
	(5, '平均值', 'Global', '', 'DLT645 v1997', 'Fox Edge', '["A相电压", "B相电压", "C相电压", "(当前)正向有功总电能"]', '防抖触发器', '数字.平均.次数.均值触发器', 5, '{"size": 5}', 1659070403700, 1659070403700),
	(6, '原始值', 'Global', '', '', '', '[]', '原生值触发器', '对象.相同.原生触发器', 5, '{}', 1659070403700, 1659070403700),
	(7, '平均值', 'Global', '', 'CE+T UPS', '深圳安圣电气有限公司', '["系统输出功率", "逆变器06输出功率", "逆变器01输出功率", "逆变器03输出功率"]', '防抖触发器', '数字.平均.次数.均值触发器', 5, '{"size": 5}', 1659070403700, 1659070403700);

-- 正在导出表  fox_edge.tb_trigger_object 的数据：~0 rows (大约)
DELETE FROM `tb_trigger_object`;

-- 正在导出表  fox_edge.tb_user 的数据：~2 rows (大约)
DELETE FROM `tb_user`;
INSERT INTO `tb_user` (`id`, `username`, `password`, `user_type`, `role`, `permission`, `menu`, `create_time`, `update_time`) VALUES
	(1, 'admin', '$2a$10$CoUy1K.W3WjxeeV91FJzEu7u2IQTQKm31lgsJHbvD3Lc2EPNXCDOy', 'system', 'ADMIN', 'ADMIN', 'ADMIN', 1651806258856, 1651831121752),
	(2, 'system', '$2a$10$CoUy1K.W3WjxeeV91FJzEu7u2IQTQKm31lgsJHbvD3Lc2EPNXCDOy', 'system', 'ADMIN', 'ADMIN', 'ADMIN', 1651806258856, 1651831121752);

-- 正在导出表  fox_edge.tb_user_menu 的数据：~6 rows (大约)
DELETE FROM `tb_user_menu`;
INSERT INTO `tb_user_menu` (`id`, `name`, `menu`, `create_time`, `update_time`) VALUES
	(1, 'ADMIN', '[{\r\n	"meta": {\r\n		"icon": "template-manage",\r\n		"roles": ["ADMIN"],\r\n		"title": "任务管理",\r\n		"hidden": false,\r\n		"keepAlive": true,\r\n		"alwaysShow": true\r\n	},\r\n	"path": "/task",\r\n	"children": [{\r\n		"meta": {\r\n			"icon": "operate-monitor-task",\r\n			"roles": ["ADMIN"],\r\n			"title": "设备监控任务",\r\n			"hidden": false,\r\n			"keepAlive": true,\r\n			"alwaysShow": false\r\n		},\r\n		"name": "operate-monitor-task",\r\n		"path": "operate-monitor-task",\r\n		"component": "system/device/operate/task/monitor/index"\r\n	}, {\r\n		"meta": {\r\n			"icon": "operate-manual-task",\r\n			"roles": ["ADMIN"],\r\n			"title": "设备操作任务",\r\n			"hidden": false,\r\n			"keepAlive": true,\r\n			"alwaysShow": false\r\n		},\r\n		"name": "operate-manual-task",\r\n		"path": "operate-manual-task",\r\n		"component": "system/device/operate/task/manual/index"\r\n	}, {\r\n		"meta": {\r\n			"icon": "operate-channel-task",\r\n			"roles": ["ADMIN"],\r\n			"title": "通道操作任务",\r\n			"hidden": false,\r\n			"keepAlive": true,\r\n			"alwaysShow": false\r\n		},\r\n		"name": "operate-channel-task",\r\n		"path": "operate-channel-task",\r\n		"component": "system/device/operate/task/channel/index"\r\n	}],\r\n	"redirect": "/system/device",\r\n	"component": "Layout"\r\n}, {\r\n	"meta": {\r\n		"icon": "system",\r\n		"roles": ["ADMIN"],\r\n		"title": "系统管理",\r\n		"hidden": false,\r\n		"keepAlive": true,\r\n		"alwaysShow": true\r\n	},\r\n	"path": "/system",\r\n	"children": [{\r\n		"meta": {\r\n			"icon": "system-config",\r\n			"roles": ["ADMIN"],\r\n			"title": "系统参数",\r\n			"hidden": false,\r\n			"keepAlive": true,\r\n			"alwaysShow": false\r\n		},\r\n		"name": "config",\r\n		"path": "config",\r\n		"component": "system/config/index"\r\n	}, {\r\n		"meta": {\r\n			"icon": "user",\r\n			"roles": ["ADMIN"],\r\n			"title": "用户管理",\r\n			"hidden": false,\r\n			"keepAlive": true,\r\n			"alwaysShow": false\r\n		},\r\n		"name": "user",\r\n		"path": "user",\r\n		"component": "system/user/index"\r\n	},  {\r\n		"meta": {\r\n			"icon": "process-status",\r\n			"roles": ["ADMIN"],\r\n			"title": "服务模块",\r\n			"hidden": false,\r\n			"keepAlive": true,\r\n			"alwaysShow": false\r\n		},\r\n		"name": "process-status",\r\n		"path": "process-status",\r\n		"component": "system/service/process/index"\r\n	}, {\r\n		"meta": {\r\n			"icon": "console",\r\n			"roles": ["ADMIN"],\r\n			"title": "前台日志",\r\n			"hidden": false,\r\n			"keepAlive": true,\r\n			"alwaysShow": false\r\n		},\r\n		"name": "console",\r\n		"path": "console",\r\n		"component": "system/console/index"\r\n	}],\r\n	"redirect": "/system/device",\r\n	"component": "Layout"\r\n}, {\r\n	"meta": {\r\n		"icon": "repo-comp-manage",\r\n		"roles": ["ADMIN"],\r\n		"title": "组件仓库",\r\n		"hidden": false,\r\n		"keepAlive": true,\r\n		"alwaysShow": true\r\n	},\r\n	"path": "/repo-comp/cloud",\r\n	"children": [{\r\n		"meta": {\r\n			"icon": "repo-comp-service",\r\n			"roles": ["ADMIN"],\r\n			"title": "服务模块",\r\n			"hidden": false,\r\n			"keepAlive": true,\r\n			"alwaysShow": false\r\n		},\r\n		"name": "cloud/service",\r\n		"path": "repo-comp-service",\r\n		"component": "system/repo-comp/cloud/service/index"\r\n	}, {\r\n		"meta": {\r\n			"icon": "repo-comp-jar-decoder",\r\n			"roles": ["ADMIN"],\r\n			"title": "静态解码",\r\n			"hidden": false,\r\n			"keepAlive": true,\r\n			"alwaysShow": false\r\n		},\r\n		"name": "cloud/jar-decoder",\r\n		"path": "jar-decoder",\r\n		"component": "system/repo-comp/cloud/jar-decoder/index"\r\n	}, {\r\n		"meta": {\r\n			"icon": "repo-comp-jsp-decoder",\r\n			"roles": ["ADMIN"],\r\n			"title": "动态解码",\r\n			"hidden": false,\r\n			"keepAlive": true,\r\n			"alwaysShow": false\r\n		},\r\n		"name": "cloud/jsp-decoder/comp-list",\r\n		"path": "jsp-decoder/comp-list",\r\n		"component": "system/repo-comp/cloud/jsp-decoder/comp-list/index"\r\n	}, {\r\n		"meta": {\r\n			"icon": "repo-comp-decoder",\r\n			"roles": ["ADMIN"],\r\n			"title": "版本列表",\r\n			"hidden": true,\r\n			"keepAlive": true,\r\n			"alwaysShow": false\r\n		},\r\n		"name": "cloud/jsp-decoder/version-list",\r\n		"path": "jsp-decoder/version-list",\r\n		"component": "system/repo-comp/cloud/jsp-decoder/version-list/index"\r\n	}, {\r\n		"meta": {\r\n			"icon": "repo-comp-decoder",\r\n			"roles": ["ADMIN"],\r\n			"title": "操作列表",\r\n			"hidden": true,\r\n			"keepAlive": true,\r\n			"alwaysShow": false\r\n		},\r\n		"name": "cloud/jsp-decoder/operate-list",\r\n		"path": "jsp-decoder/operate-list",\r\n		"component": "system/repo-comp/cloud/jsp-decoder/operate-list/index"\r\n	}, {\r\n		"meta": {\r\n			"icon": "repo-comp-decoder",\r\n			"roles": ["ADMIN"],\r\n			"title": "操作详情",\r\n			"hidden": true,\r\n			"keepAlive": true,\r\n			"alwaysShow": false\r\n		},\r\n		"name": "cloud/jsp-decoder/version-info",\r\n		"path": "jsp-decoder/version-info",\r\n		"component": "system/repo-comp/cloud/jsp-decoder/operate-info/index"\r\n	}, {\r\n		"meta": {\r\n			"icon": "repo-comp-template",\r\n			"roles": ["ADMIN"],\r\n			"title": "文件模板",\r\n			"hidden": false,\r\n			"keepAlive": true,\r\n			"alwaysShow": false\r\n		},\r\n		"name": "cloud/repo-comp-template",\r\n		"path": "repo-comp-template",\r\n		"component": "system/repo-comp/cloud/template/index"\r\n	}, {\r\n		"meta": {\r\n			"icon": "repo-comp-webpack",\r\n			"roles": ["ADMIN"],\r\n			"title": "前端模块",\r\n			"hidden": false,\r\n			"keepAlive": true,\r\n			"alwaysShow": false\r\n		},\r\n		"name": "cloud/repo-comp-webpack",\r\n		"path": "repo-comp-webpack",\r\n		"component": "system/repo-comp/cloud/webpack/index"\r\n	}, {\r\n		"meta": {\r\n			"icon": "repo-comp-product",\r\n			"roles": ["ADMIN"],\r\n			"title": "适配产品",\r\n			"hidden": false,\r\n			"keepAlive": true,\r\n			"alwaysShow": false\r\n		},\r\n		"name": "cloud/repo-comp-product",\r\n		"path": "repo-comp-product",\r\n		"component": "system/repo-comp/cloud/product/index"\r\n	}, {\r\n		"meta": {\r\n			"icon": "repo-comp-product-detail",\r\n			"roles": ["ADMIN"],\r\n			"title": "产品详情",\r\n			"hidden": true,\r\n			"keepAlive": true,\r\n			"alwaysShow": false\r\n		},\r\n		"name": "cloud/repo-comp-product-detail",\r\n		"path": "repo-comp-product-detail",\r\n		"component": "system/repo-comp/cloud/product/detail/index"\r\n	}],\r\n	"redirect": "/system/repo-comp",\r\n	"component": "Layout"\r\n}, {\r\n	"meta": {\r\n		"icon": "repo-comp-manage",\r\n		"roles": ["ADMIN"],\r\n		"title": "本地组件",\r\n		"hidden": false,\r\n		"keepAlive": true,\r\n		"alwaysShow": true\r\n	},\r\n	"path": "/repo-comp/local",\r\n	"children": [{\r\n		"meta": {\r\n			"icon": "repo-comp-jar-decoder",\r\n			"roles": ["ADMIN"],\r\n			"title": "服务模块",\r\n			"hidden": false,\r\n			"keepAlive": true,\r\n			"alwaysShow": false\r\n		},\r\n		"name": "local/app-service/comp-list",\r\n		"path": "app-service/comp-list",\r\n		"component": "system/repo-comp/local/app-service/comp-list/index"\r\n	}, {\r\n		"meta": {\r\n			"icon": "repo-comp-jar-decoder",\r\n			"roles": ["ADMIN"],\r\n			"title": "静态解码",\r\n			"hidden": false,\r\n			"keepAlive": true,\r\n			"alwaysShow": false\r\n		},\r\n		"name": "local/jar-decoder/comp-list",\r\n		"path": "jar-decoder/comp-list",\r\n		"component": "system/repo-comp/local/jar-decoder/comp-list/index"\r\n	}, {\r\n		"meta": {\r\n			"icon": "repo-comp-jar-decoder",\r\n			"roles": ["ADMIN"],\r\n			"title": "操作列表",\r\n			"hidden": true,\r\n			"keepAlive": true,\r\n			"alwaysShow": false\r\n		},\r\n		"name": "local/jar-decoder/operate-list",\r\n		"path": "jar-decoder/operate-list",\r\n		"component": "system/repo-comp/local/jar-decoder/operate-list/index"\r\n	}, {\r\n		"meta": {\r\n			"icon": "repo-comp-jsp-decoder",\r\n			"roles": ["ADMIN"],\r\n			"title": "动态解码",\r\n			"hidden": false,\r\n			"keepAlive": true,\r\n			"alwaysShow": false\r\n		},\r\n		"name": "local/jsp-decoder/comp-list",\r\n		"path": "jsp-decoder/comp-list",\r\n		"component": "system/repo-comp/local/jsp-decoder/comp-list/index"\r\n	}, {\r\n		"meta": {\r\n			"icon": "repo-comp-jsp-decoder",\r\n			"roles": ["ADMIN"],\r\n			"title": "操作列表",\r\n			"hidden": true,\r\n			"keepAlive": true,\r\n			"alwaysShow": false\r\n		},\r\n		"name": "local/jsp-decoder/operate-list",\r\n		"path": "jsp-decoder/operate-list",\r\n		"component": "system/repo-comp/local/jsp-decoder/operate-list/index"\r\n	}, {\r\n		"meta": {\r\n			"icon": "repo-comp-decoder",\r\n			"roles": ["ADMIN"],\r\n			"title": "操作详情",\r\n			"hidden": true,\r\n			"keepAlive": true,\r\n			"alwaysShow": false\r\n		},\r\n		"name": "local/jsp-decoder/version-info",\r\n		"path": "jsp-decoder/version-info",\r\n		"component": "system/repo-comp/local/jsp-decoder/operate-info/index"\r\n	}\r\n	\r\n	\r\n	, {\r\n		"meta": {\r\n			"icon": "repo-comp-jsn-decoder",\r\n			"roles": ["ADMIN"],\r\n			"title": "动态模板",\r\n			"hidden": false,\r\n			"keepAlive": true,\r\n			"alwaysShow": false\r\n		},\r\n		"name": "local/jsn-decoder/comp-list",\r\n		"path": "jsn-decoder/comp-list",\r\n		"component": "system/repo-comp/local/jsn-decoder/comp-list/index"\r\n	}, {\r\n		"meta": {\r\n			"icon": "repo-comp-jsn-decoder",\r\n			"roles": ["ADMIN"],\r\n			"title": "模型列表",\r\n			"hidden": true,\r\n			"keepAlive": true,\r\n			"alwaysShow": false\r\n		},\r\n		"name": "local/jsn-decoder/model-list",\r\n		"path": "jsn-decoder/model-list",\r\n		"component": "system/repo-comp/local/jsn-decoder/model-list/index"\r\n	}, \r\n	\r\n	{\r\n		"meta": {\r\n			"icon": "repo-comp-jar-decoder",\r\n			"roles": ["ADMIN"],\r\n			"title": "文件模板",\r\n			"hidden": false,\r\n			"keepAlive": true,\r\n			"alwaysShow": false\r\n		},\r\n		"name": "local/file-template/comp-list",\r\n		"path": "file-template/comp-list",\r\n		"component": "system/repo-comp/local/file-template/comp-list/index"\r\n	}, {\r\n		"meta": {\r\n			"icon": "repo-comp-jar-decoder",\r\n			"roles": ["ADMIN"],\r\n			"title": "文件列表",\r\n			"hidden": true,\r\n			"keepAlive": true,\r\n			"alwaysShow": false\r\n		},\r\n		"name": "local/file-template/file-list",\r\n		"path": "file-template/file-list",\r\n		"component": "system/repo-comp/local/file-template/file-list/index"\r\n	}],\r\n	"redirect": "/system/repo-comp-local",\r\n	"component": "Layout"\r\n}, {\r\n	"meta": {\r\n		"icon": "device-manage",\r\n		"roles": ["ADMIN"],\r\n		"title": "设备管理",\r\n		"hidden": false,\r\n		"keepAlive": true,\r\n		"alwaysShow": true\r\n	},\r\n	"path": "/device",\r\n	"children": [{\r\n		"meta": {\r\n			"icon": "device-list",\r\n			"roles": ["ADMIN"],\r\n			"title": "设备列表",\r\n			"hidden": false,\r\n			"keepAlive": true,\r\n			"alwaysShow": false\r\n		},\r\n		"name": "device",\r\n		"path": "device",\r\n		"component": "system/device/entity/index"\r\n	}, {\r\n		"meta": {\r\n			"icon": "device-value",\r\n			"roles": ["ADMIN"],\r\n			"title": "设备数值",\r\n			"hidden": false,\r\n			"keepAlive": true,\r\n			"alwaysShow": false\r\n		},\r\n		"name": "device-value",\r\n		"path": "device-value",\r\n		"component": "system/device/value/index"\r\n	}, {\r\n		"meta": {\r\n			"icon": "device-mapper",\r\n			"roles": ["ADMIN"],\r\n			"title": "设备映射",\r\n			"hidden": false,\r\n			"keepAlive": true,\r\n			"alwaysShow": false\r\n		},\r\n		"name": "device-mapper",\r\n		"path": "device-mapper",\r\n		"component": "system/device/mapper/index"\r\n	}, {\r\n		"meta": {\r\n			"icon": "extend",\r\n			"roles": ["ADMIN"],\r\n			"title": "扩展信息",\r\n			"hidden": false,\r\n			"keepAlive": true,\r\n			"alwaysShow": false\r\n		},\r\n		"name": "device-extend",\r\n		"path": "device-extend",\r\n		"component": "system/extend/index"\r\n	}, {\r\n		"meta": {\r\n			"icon": "device-status",\r\n			"roles": ["ADMIN"],\r\n			"title": "通信状态",\r\n			"hidden": false,\r\n			"keepAlive": true,\r\n			"alwaysShow": false\r\n		},\r\n		"name": "device-status",\r\n		"path": "device-status",\r\n		"component": "system/device/status/index"\r\n	}],\r\n	"redirect": "/system/device",\r\n	"component": "Layout"\r\n}, {\r\n	"meta": {\r\n		"icon": "channel-manage",\r\n		"roles": ["ADMIN"],\r\n		"title": "通道管理",\r\n		"hidden": false,\r\n		"keepAlive": true,\r\n		"alwaysShow": true\r\n	},\r\n	"path": "/channel",\r\n	"children": [{\r\n		"meta": {\r\n			"icon": "channel",\r\n			"roles": ["ADMIN"],\r\n			"title": "通道列表",\r\n			"hidden": false,\r\n			"keepAlive": true,\r\n			"alwaysShow": false\r\n		},\r\n		"name": "channel",\r\n		"path": "channel",\r\n		"component": "system/channel/index"\r\n	}],\r\n	"redirect": "/system/channel",\r\n	"component": "Layout"\r\n}, {\r\n	"meta": {\r\n		"icon": "link-manage",\r\n		"roles": ["ADMIN"],\r\n		"title": "链路管理",\r\n		"hidden": false,\r\n		"keepAlive": true,\r\n		"alwaysShow": true\r\n	},\r\n	"path": "/link",\r\n	"children": [{\r\n		"meta": {\r\n			"icon": "link",\r\n			"roles": ["ADMIN"],\r\n			"title": "链路列表",\r\n			"hidden": false,\r\n			"keepAlive": true,\r\n			"alwaysShow": false\r\n		},\r\n		"name": "link",\r\n		"path": "link",\r\n		"component": "system/link/index"\r\n	}],\r\n	"redirect": "/system/link",\r\n	"component": "Layout"\r\n}, {\r\n	"meta": {\r\n		"icon": "model-manage",\r\n		"roles": ["ADMIN"],\r\n		"title": "模型管理",\r\n		"hidden": false,\r\n		"keepAlive": true,\r\n		"alwaysShow": true\r\n	},\r\n	"path": "/model",\r\n	"children": [{\r\n		"meta": {\r\n			"icon": "device-model",\r\n			"roles": ["ADMIN"],\r\n			"title": "设备模型",\r\n			"hidden": false,\r\n			"keepAlive": true,\r\n			"alwaysShow": false\r\n		},\r\n		"name": "device-model",\r\n		"path": "device-model",\r\n		"component": "system/device/model/index"\r\n	}],\r\n	"redirect": "/system/device/model",\r\n	"component": "Layout"\r\n}, {\r\n	"meta": {\r\n		"icon": "period-manage",\r\n		"roles": ["ADMIN"],\r\n		"title": "周期管理",\r\n		"hidden": false,\r\n		"keepAlive": true,\r\n		"alwaysShow": true\r\n	},\r\n	"path": "/period",\r\n	"children": [{\r\n		"meta": {\r\n			"icon": "period-task",\r\n			"roles": ["ADMIN"],\r\n			"title": "周期任务",\r\n			"hidden": false,\r\n			"keepAlive": true,\r\n			"alwaysShow": false\r\n		},\r\n		"name": "period-task",\r\n		"path": "period-task",\r\n		"component": "system/period/task/index"\r\n	}, {\r\n		"meta": {\r\n			"icon": "period-record",\r\n			"roles": ["ADMIN"],\r\n			"title": "周期记录",\r\n			"hidden": false,\r\n			"keepAlive": true,\r\n			"alwaysShow": false\r\n		},\r\n		"name": "period-record",\r\n		"path": "period-record",\r\n		"component": "system/period/record/index"\r\n	}],\r\n	"redirect": "/system/device",\r\n	"component": "Layout"\r\n}, {\r\n	"meta": {\r\n		"icon": "record-manage",\r\n		"roles": ["ADMIN"],\r\n		"title": "记录管理",\r\n		"hidden": false,\r\n		"keepAlive": true,\r\n		"alwaysShow": true\r\n	},\r\n	"path": "/record",\r\n	"children": [{\r\n		"meta": {\r\n			"icon": "device-record",\r\n			"roles": ["ADMIN"],\r\n			"title": "设备记录",\r\n			"hidden": false,\r\n			"keepAlive": true,\r\n			"alwaysShow": false\r\n		},\r\n		"name": "device-record",\r\n		"path": "device-record",\r\n		"component": "system/device/record/index"\r\n	}, {\r\n		"meta": {\r\n			"icon": "operate-record",\r\n			"roles": ["ADMIN"],\r\n			"title": "操作记录",\r\n			"hidden": false,\r\n			"keepAlive": true,\r\n			"alwaysShow": false\r\n		},\r\n		"name": "operate-record",\r\n		"path": "operate-record",\r\n		"component": "system/device/operate/record/index"\r\n	}, {\r\n		"meta": {\r\n			"icon": "history-record",\r\n			"roles": ["ADMIN"],\r\n			"title": "历史记录",\r\n			"hidden": false,\r\n			"keepAlive": true,\r\n			"alwaysShow": false\r\n		},\r\n		"name": "device-history",\r\n		"path": "device-history",\r\n		"component": "system/device/history/index"\r\n	}],\r\n	"redirect": "/system/device",\r\n	"component": "Layout"\r\n}, {\r\n	"meta": {\r\n		"icon": "link",\r\n		"roles": ["ADMIN"],\r\n		"title": "官方网站",\r\n		"hidden": false,\r\n		"keepAlive": true,\r\n		"alwaysShow": true\r\n	},\r\n	"path": "/website-link",\r\n	"children": [{\r\n		"meta": {\r\n			"icon": "link",\r\n			"roles": ["ADMIN"],\r\n			"title": "官方网站",\r\n			"hidden": false,\r\n			"keepAlive": true,\r\n			"alwaysShow": false\r\n		},\r\n		"path": "http://www.fox-tech.cn"\r\n	}, {\r\n		"meta": {\r\n			"icon": "link",\r\n			"roles": ["ADMIN"],\r\n			"title": "官方文档",\r\n			"hidden": false,\r\n			"keepAlive": true,\r\n			"alwaysShow": false\r\n		},\r\n		"path": "http://docs.fox-tech.cn"\r\n	}, {\r\n		"meta": {\r\n			"icon": "link",\r\n			"roles": ["ADMIN"],\r\n			"title": "官方源码",\r\n			"hidden": false,\r\n			"keepAlive": true,\r\n			"alwaysShow": false\r\n		},\r\n		"path": "https://gitee.com/fierce_wolf"\r\n	}, {\r\n		"meta": {\r\n			"icon": "link",\r\n			"roles": ["ADMIN"],\r\n			"title": "Fox-Cloud",\r\n			"hidden": false,\r\n			"keepAlive": true,\r\n			"alwaysShow": false\r\n		},\r\n		"path": "http://cloud.fox-tech.cn"\r\n	}],\r\n	"redirect": "noredirect",\r\n	"component": "Layout"\r\n}]', 1651831121752, 1651831121752),
	(2, 'UNREGISTERED-x', '[{"meta": {"icon": "template-manage", "roles": ["ADMIN"], "title": "注册管理", "hidden": false, "keepAlive": true, "alwaysShow": true}, "path": "/license", "children": [{"meta": {"icon": "operate-monitor-task", "roles": ["ADMIN"], "title": "设备注册", "hidden": false, "keepAlive": true, "alwaysShow": false}, "name": "license", "path": "license", "component": "system/license/index"}], "redirect": "/system/device", "component": "Layout"}]', 1651831121752, 1651831121752),
	(3, 'UNREGISTERED', '[{"meta": {"icon": "template-manage", "roles": ["ADMIN"], "title": "任务管理", "hidden": false, "keepAlive": true, "alwaysShow": true}, "path": "/task", "children": [{"meta": {"icon": "operate-monitor-task", "roles": ["ADMIN"], "title": "设备监控任务", "hidden": false, "keepAlive": true, "alwaysShow": false}, "name": "operate-monitor-task", "path": "operate-monitor-task", "component": "system/device/operate/task/monitor/index"}, {"meta": {"icon": "operate-manual-task", "roles": ["ADMIN"], "title": "设备操作任务", "hidden": false, "keepAlive": true, "alwaysShow": false}, "name": "operate-manual-task", "path": "operate-manual-task", "component": "system/device/operate/task/manual/index"}, {"meta": {"icon": "operate-channel-task", "roles": ["ADMIN"], "title": "通道操作任务", "hidden": false, "keepAlive": true, "alwaysShow": false}, "name": "operate-channel-task", "path": "operate-channel-task", "component": "system/device/operate/task/channel/index"}], "redirect": "/system/device", "component": "Layout"}, {"meta": {"icon": "system", "roles": ["ADMIN"], "title": "系统管理", "hidden": false, "keepAlive": true, "alwaysShow": true}, "path": "/system", "children": [{"meta": {"icon": "system-config", "roles": ["ADMIN"], "title": "系统配置", "hidden": false, "keepAlive": true, "alwaysShow": false}, "name": "config", "path": "config", "component": "system/config/index"}, {"meta": {"icon": "param-template", "roles": ["ADMIN"], "title": "参数模板", "hidden": false, "keepAlive": true, "alwaysShow": false}, "name": "param-template", "path": "param-template", "component": "system/param/template/index"}, {"meta": {"icon": "user", "roles": ["ADMIN"], "title": "用户管理", "hidden": false, "keepAlive": true, "alwaysShow": false}, "name": "user", "path": "user", "component": "system/user/index"}, {"meta": {"icon": "service-status", "roles": ["ADMIN"], "title": "服务状态", "hidden": false, "keepAlive": true, "alwaysShow": false}, "name": "service-status", "path": "service-status", "component": "system/service/status/index"}, {"meta": {"icon": "process-status", "roles": ["ADMIN"], "title": "进程状态", "hidden": false, "keepAlive": true, "alwaysShow": false}, "name": "process-status", "path": "process-status", "component": "system/service/process/index"}], "redirect": "/system/device", "component": "Layout"}, {"meta": {"icon": "device-manage", "roles": ["ADMIN"], "title": "设备管理", "hidden": false, "keepAlive": true, "alwaysShow": true}, "path": "/device", "children": [{"meta": {"icon": "device-list", "roles": ["ADMIN"], "title": "设备列表", "hidden": false, "keepAlive": true, "alwaysShow": false}, "name": "device", "path": "device", "component": "system/device/entity/index"}, {"meta": {"icon": "device-value", "roles": ["ADMIN"], "title": "设备数值", "hidden": false, "keepAlive": true, "alwaysShow": false}, "name": "device-value", "path": "device-value", "component": "system/device/value/index"}, {"meta": {"icon": "device-status", "roles": ["ADMIN"], "title": "通信状态", "hidden": false, "keepAlive": true, "alwaysShow": false}, "name": "device-status", "path": "device-status", "component": "system/device/status/index"}, {"meta": {"icon": "device-timeout", "roles": ["ADMIN"], "title": "通信超时", "hidden": false, "keepAlive": true, "alwaysShow": false}, "name": "device-timeout", "path": "device-timeout", "component": "system/device/timeout/index"}, {"meta": {"icon": "device-decoder", "roles": ["ADMIN"], "title": "解码模块", "hidden": false, "keepAlive": true, "alwaysShow": false}, "name": "decoder", "path": "decoder", "component": "system/device/decoder/index"}], "redirect": "/system/device", "component": "Layout"}, {"meta": {"icon": "channel-manage", "roles": ["ADMIN"], "title": "通道管理", "hidden": false, "keepAlive": true, "alwaysShow": true}, "path": "/channel", "children": [{"meta": {"icon": "channel", "roles": ["ADMIN"], "title": "通道列表", "hidden": false, "keepAlive": true, "alwaysShow": false}, "name": "channel", "path": "channel", "component": "system/channel/index"}], "redirect": "/system/channel", "component": "Layout"}, {"meta": {"icon": "trigger", "roles": ["ADMIN"], "title": "触发器管理", "hidden": false, "keepAlive": true, "alwaysShow": true}, "path": "/trigger", "children": [{"meta": {"icon": "trigger-method", "roles": ["ADMIN"], "title": "触发器定义", "hidden": false, "keepAlive": true, "alwaysShow": false}, "name": "device-trigger", "path": "device-trigger", "component": "system/device/trigger/index"}, {"meta": {"icon": "trigger-list", "roles": ["ADMIN"], "title": "触发器配置", "hidden": false, "keepAlive": true, "alwaysShow": false}, "name": "device-trigger-config", "path": "device-trigger-config", "component": "system/device/trigger/config/index"}, {"meta": {"icon": "trigger-value", "roles": ["ADMIN"], "title": "触发数值", "hidden": false, "keepAlive": true, "alwaysShow": false}, "name": "trigger-value", "path": "trigger-value", "component": "system/device/trigger/value/index"}], "redirect": "/system/device", "component": "Layout"}, {"meta": {"icon": "operate-manage", "roles": ["ADMIN"], "title": "操作管理", "hidden": false, "keepAlive": true, "alwaysShow": true}, "path": "/operate", "children": [{"meta": {"icon": "operate-method", "roles": ["ADMIN"], "title": "操作方法", "hidden": false, "keepAlive": true, "alwaysShow": false}, "name": "device-operate", "path": "device-operate", "component": "system/device/operate/method/index"}, {"meta": {"icon": "operate-record", "roles": ["ADMIN"], "title": "操作记录", "hidden": false, "keepAlive": true, "alwaysShow": false}, "name": "operate-record", "path": "operate-record", "component": "system/device/operate/record/index"}], "redirect": "/system/device", "component": "Layout"}, {"meta": {"icon": "record-manage", "roles": ["ADMIN"], "title": "记录管理", "hidden": false, "keepAlive": true, "alwaysShow": true}, "path": "/record", "children": [{"meta": {"icon": "record", "roles": ["ADMIN"], "title": "设备记录", "hidden": false, "keepAlive": true, "alwaysShow": false}, "name": "device-record", "path": "device-record", "component": "system/device/record/index"}, {"meta": {"icon": "history-record", "roles": ["ADMIN"], "title": "历史记录", "hidden": false, "keepAlive": true, "alwaysShow": false}, "name": "device-history", "path": "device-history", "component": "system/device/history/index"}], "redirect": "/system/device", "component": "Layout"}, {"meta": {"icon": "link", "roles": ["ADMIN"], "title": "外部链接", "hidden": false, "keepAlive": true, "alwaysShow": true}, "path": "/external-link", "children": [{"meta": {"icon": "link", "roles": ["ADMIN"], "title": "document", "hidden": false, "keepAlive": true, "alwaysShow": false}, "path": "https://gitee.com/fierce_wolf/fox-edge-server"}], "redirect": "noredirect", "component": "Layout"}]', 1651831121752, 1651831121752),
	(4, 'ADMIN-DOCKER', '[{"meta": {"icon": "template-manage", "roles": ["ADMIN"], "title": "任务管理", "hidden": false, "keepAlive": true, "alwaysShow": true}, "path": "/task", "children": [{"meta": {"icon": "operate-monitor-task", "roles": ["ADMIN"], "title": "设备监控任务", "hidden": false, "keepAlive": true, "alwaysShow": false}, "name": "operate-monitor-task", "path": "operate-monitor-task", "component": "system/device/operate/task/monitor/index"}, {"meta": {"icon": "operate-manual-task", "roles": ["ADMIN"], "title": "设备操作任务", "hidden": false, "keepAlive": true, "alwaysShow": false}, "name": "operate-manual-task", "path": "operate-manual-task", "component": "system/device/operate/task/manual/index"}, {"meta": {"icon": "operate-channel-task", "roles": ["ADMIN"], "title": "通道操作任务", "hidden": false, "keepAlive": true, "alwaysShow": false}, "name": "operate-channel-task", "path": "operate-channel-task", "component": "system/device/operate/task/channel/index"}], "redirect": "/system/device", "component": "Layout"}, {"meta": {"icon": "system", "roles": ["ADMIN"], "title": "系统管理", "hidden": false, "keepAlive": true, "alwaysShow": true}, "path": "/system", "children": [{"meta": {"icon": "system-config", "roles": ["ADMIN"], "title": "系统参数", "hidden": false, "keepAlive": true, "alwaysShow": false}, "name": "config", "path": "config", "component": "system/config/index"}, {"meta": {"icon": "user", "roles": ["ADMIN"], "title": "用户管理", "hidden": false, "keepAlive": true, "alwaysShow": false}, "name": "user", "path": "user", "component": "system/user/index"}, {"meta": {"icon": "device-template", "roles": ["ADMIN"], "title": "设备模板", "hidden": false, "keepAlive": true, "alwaysShow": false}, "name": "device-template", "path": "device-template", "component": "system/device/template/index"}, {"meta": {"icon": "process-status", "roles": ["ADMIN"], "title": "服务模块", "hidden": false, "keepAlive": true, "alwaysShow": false}, "name": "process-status", "path": "process-status", "component": "system/service/process/index"}, {"meta": {"icon": "service-status", "roles": ["ADMIN"], "title": "服务状态", "hidden": false, "keepAlive": true, "alwaysShow": false}, "name": "service-status", "path": "service-status", "component": "system/service/status/index"}, {"meta": {"icon": "console", "roles": ["ADMIN"], "title": "后台日志", "hidden": false, "keepAlive": true, "alwaysShow": false}, "name": "console", "path": "console", "component": "system/console/index"}], "redirect": "/system/device", "component": "Layout"}, {"meta": {"icon": "device-manage", "roles": ["ADMIN"], "title": "设备管理", "hidden": false, "keepAlive": true, "alwaysShow": true}, "path": "/device", "children": [{"meta": {"icon": "device-list", "roles": ["ADMIN"], "title": "设备列表", "hidden": false, "keepAlive": true, "alwaysShow": false}, "name": "device", "path": "device", "component": "system/device/entity/index"}, {"meta": {"icon": "device-value", "roles": ["ADMIN"], "title": "设备数值", "hidden": false, "keepAlive": true, "alwaysShow": false}, "name": "device-value", "path": "device-value", "component": "system/device/value/index"}, {"meta": {"icon": "device-mapper", "roles": ["ADMIN"], "title": "设备映射", "hidden": false, "keepAlive": true, "alwaysShow": false}, "name": "device-mapper", "path": "device-mapper", "component": "system/device/mapper/index"}, {"meta": {"icon": "extend", "roles": ["ADMIN"], "title": "扩展信息", "hidden": false, "keepAlive": true, "alwaysShow": false}, "name": "device-extend", "path": "device-extend", "component": "system/extend/index"}, {"meta": {"icon": "device-status", "roles": ["ADMIN"], "title": "通信状态", "hidden": false, "keepAlive": true, "alwaysShow": false}, "name": "device-status", "path": "device-status", "component": "system/device/status/index"}], "redirect": "/system/device", "component": "Layout"}, {"meta": {"icon": "channel-manage", "roles": ["ADMIN"], "title": "通道管理", "hidden": false, "keepAlive": true, "alwaysShow": true}, "path": "/channel", "children": [{"meta": {"icon": "channel", "roles": ["ADMIN"], "title": "通道列表", "hidden": false, "keepAlive": true, "alwaysShow": false}, "name": "channel", "path": "channel", "component": "system/channel/index"}], "redirect": "/system/channel", "component": "Layout"}, {"meta": {"icon": "link-manage", "roles": ["ADMIN"], "title": "链路管理", "hidden": false, "keepAlive": true, "alwaysShow": true}, "path": "/link", "children": [{"meta": {"icon": "link", "roles": ["ADMIN"], "title": "链路列表", "hidden": false, "keepAlive": true, "alwaysShow": false}, "name": "link", "path": "link", "component": "system/link/index"}], "redirect": "/system/link", "component": "Layout"}, {"meta": {"icon": "model-manage", "roles": ["ADMIN"], "title": "模型管理", "hidden": false, "keepAlive": true, "alwaysShow": true}, "path": "/model", "children": [{"meta": {"icon": "device-model", "roles": ["ADMIN"], "title": "设备模型", "hidden": false, "keepAlive": true, "alwaysShow": false}, "name": "device-model", "path": "device-model", "component": "system/device/model/index"}], "redirect": "/system/device/model", "component": "Layout"}, {"meta": {"icon": "period-manage", "roles": ["ADMIN"], "title": "周期管理", "hidden": false, "keepAlive": true, "alwaysShow": true}, "path": "/period", "children": [{"meta": {"icon": "period-task", "roles": ["ADMIN"], "title": "周期任务", "hidden": false, "keepAlive": true, "alwaysShow": false}, "name": "period-task", "path": "period-task", "component": "system/period/task/index"}, {"meta": {"icon": "period-record", "roles": ["ADMIN"], "title": "周期记录", "hidden": false, "keepAlive": true, "alwaysShow": false}, "name": "period-record", "path": "period-record", "component": "system/period/record/index"}], "redirect": "/system/device", "component": "Layout"}, {"meta": {"icon": "record-manage", "roles": ["ADMIN"], "title": "记录管理", "hidden": false, "keepAlive": true, "alwaysShow": true}, "path": "/record", "children": [{"meta": {"icon": "device-record", "roles": ["ADMIN"], "title": "设备记录", "hidden": false, "keepAlive": true, "alwaysShow": false}, "name": "device-record", "path": "device-record", "component": "system/device/record/index"}, {"meta": {"icon": "operate-record", "roles": ["ADMIN"], "title": "操作记录", "hidden": false, "keepAlive": true, "alwaysShow": false}, "name": "operate-record", "path": "operate-record", "component": "system/device/operate/record/index"}, {"meta": {"icon": "history-record", "roles": ["ADMIN"], "title": "历史记录", "hidden": false, "keepAlive": true, "alwaysShow": false}, "name": "device-history", "path": "device-history", "component": "system/device/history/index"}], "redirect": "/system/device", "component": "Layout"}, {"meta": {"icon": "link", "roles": ["ADMIN"], "title": "官方网站", "hidden": false, "keepAlive": true, "alwaysShow": true}, "path": "/website-link", "children": [{"meta": {"icon": "link", "roles": ["ADMIN"], "title": "官方网站", "hidden": false, "keepAlive": true, "alwaysShow": false}, "path": "http://www.fox-tech.cn"}, {"meta": {"icon": "link", "roles": ["ADMIN"], "title": "官方文档", "hidden": false, "keepAlive": true, "alwaysShow": false}, "path": "http://docs.fox-tech.cn"}, {"meta": {"icon": "link", "roles": ["ADMIN"], "title": "官方源码", "hidden": false, "keepAlive": true, "alwaysShow": false}, "path": "https://gitee.com/fierce_wolf"}, {"meta": {"icon": "link", "roles": ["ADMIN"], "title": "Fox-Cloud", "hidden": false, "keepAlive": true, "alwaysShow": false}, "path": "http://cloud.fox-tech.cn"}], "redirect": "noredirect", "component": "Layout"}]', 1651831121752, 1651831121752),
	(5, 'ADMIN_BAK', '[{"meta": {"icon": "template-manage", "roles": ["ADMIN"], "title": "任务管理", "hidden": false, "keepAlive": true, "alwaysShow": true}, "path": "/task", "children": [{"meta": {"icon": "operate-monitor-task", "roles": ["ADMIN"], "title": "设备监控任务", "hidden": false, "keepAlive": true, "alwaysShow": false}, "name": "operate-monitor-task", "path": "operate-monitor-task", "component": "system/device/operate/task/monitor/index"}, {"meta": {"icon": "operate-manual-task", "roles": ["ADMIN"], "title": "设备操作任务", "hidden": false, "keepAlive": true, "alwaysShow": false}, "name": "operate-manual-task", "path": "operate-manual-task", "component": "system/device/operate/task/manual/index"}, {"meta": {"icon": "operate-channel-task", "roles": ["ADMIN"], "title": "通道操作任务", "hidden": false, "keepAlive": true, "alwaysShow": false}, "name": "operate-channel-task", "path": "operate-channel-task", "component": "system/device/operate/task/channel/index"}], "redirect": "/system/device", "component": "Layout"}, {"meta": {"icon": "system", "roles": ["ADMIN"], "title": "系统管理", "hidden": false, "keepAlive": true, "alwaysShow": true}, "path": "/system", "children": [{"meta": {"icon": "system-config", "roles": ["ADMIN"], "title": "系统参数", "hidden": false, "keepAlive": true, "alwaysShow": false}, "name": "config", "path": "config", "component": "system/config/index"}, {"meta": {"icon": "user", "roles": ["ADMIN"], "title": "用户管理", "hidden": false, "keepAlive": true, "alwaysShow": false}, "name": "user", "path": "user", "component": "system/user/index"}, {"meta": {"icon": "device-template", "roles": ["ADMIN"], "title": "设备模板", "hidden": false, "keepAlive": true, "alwaysShow": false}, "name": "device-template", "path": "device-template", "component": "system/device/template/index"}, {"meta": {"icon": "process-status", "roles": ["ADMIN"], "title": "服务模块", "hidden": false, "keepAlive": true, "alwaysShow": false}, "name": "process-status", "path": "process-status", "component": "system/service/process/index"}, {"meta": {"icon": "service-status", "roles": ["ADMIN"], "title": "服务状态", "hidden": false, "keepAlive": true, "alwaysShow": false}, "name": "service-status", "path": "service-status", "component": "system/service/status/index"}, {"meta": {"icon": "console", "roles": ["ADMIN"], "title": "后台日志", "hidden": false, "keepAlive": true, "alwaysShow": false}, "name": "console", "path": "console", "component": "system/console/index"}], "redirect": "/system/device", "component": "Layout"}, {"meta": {"icon": "repo-comp-manage", "roles": ["ADMIN"], "title": "云端仓库", "hidden": false, "keepAlive": true, "alwaysShow": true}, "path": "/repo-comp/cloud", "children": [{"meta": {"icon": "repo-comp-service", "roles": ["ADMIN"], "title": "服务模块", "hidden": false, "keepAlive": true, "alwaysShow": false}, "name": "cloud/service", "path": "repo-comp-service", "component": "system/repo-comp/cloud/service/index"}, {"meta": {"icon": "repo-comp-jar-decoder", "roles": ["ADMIN"], "title": "静态解码", "hidden": false, "keepAlive": true, "alwaysShow": false}, "name": "cloud/jar-decoder", "path": "jar-decoder", "component": "system/repo-comp/cloud/jar-decoder/index"}, {"meta": {"icon": "repo-comp-jsp-decoder", "roles": ["ADMIN"], "title": "动态解码", "hidden": false, "keepAlive": true, "alwaysShow": false}, "name": "cloud/jsp-decoder/comp-list", "path": "jsp-decoder/comp-list", "component": "system/repo-comp/cloud/jsp-decoder/comp-list/index"}, {"meta": {"icon": "repo-comp-decoder", "roles": ["ADMIN"], "title": "版本列表", "hidden": true, "keepAlive": true, "alwaysShow": false}, "name": "cloud/jsp-decoder/version-list", "path": "jsp-decoder/version-list", "component": "system/repo-comp/cloud/jsp-decoder/version-list/index"}, {"meta": {"icon": "repo-comp-decoder", "roles": ["ADMIN"], "title": "操作列表", "hidden": true, "keepAlive": true, "alwaysShow": false}, "name": "cloud/jsp-decoder/operate-list", "path": "jsp-decoder/operate-list", "component": "system/repo-comp/cloud/jsp-decoder/operate-list/index"}, {"meta": {"icon": "repo-comp-decoder", "roles": ["ADMIN"], "title": "操作详情", "hidden": true, "keepAlive": true, "alwaysShow": false}, "name": "cloud/jsp-decoder/version-info", "path": "jsp-decoder/version-info", "component": "system/repo-comp/cloud/jsp-decoder/operate-info/index"}, {"meta": {"icon": "repo-comp-template", "roles": ["ADMIN"], "title": "模板模块", "hidden": false, "keepAlive": true, "alwaysShow": false}, "name": "cloud/repo-comp-template", "path": "repo-comp-template", "component": "system/repo-comp/cloud/template/index"}, {"meta": {"icon": "repo-comp-webpack", "roles": ["ADMIN"], "title": "前端模块", "hidden": false, "keepAlive": true, "alwaysShow": false}, "name": "cloud/repo-comp-webpack", "path": "repo-comp-webpack", "component": "system/repo-comp/cloud/webpack/index"}, {"meta": {"icon": "repo-comp-product", "roles": ["ADMIN"], "title": "适配产品", "hidden": false, "keepAlive": true, "alwaysShow": false}, "name": "cloud/repo-comp-product", "path": "repo-comp-product", "component": "system/repo-comp/cloud/product/index"}, {"meta": {"icon": "repo-comp-product-detail", "roles": ["ADMIN"], "title": "产品详情", "hidden": true, "keepAlive": true, "alwaysShow": false}, "name": "cloud/repo-comp-product-detail", "path": "repo-comp-product-detail", "component": "system/repo-comp/cloud/product/detail/index"}], "redirect": "/system/repo-comp", "component": "Layout"}, {"meta": {"icon": "repo-comp-manage", "roles": ["ADMIN"], "title": "本地仓库", "hidden": false, "keepAlive": true, "alwaysShow": true}, "path": "/repo-comp/local", "children": [{"meta": {"icon": "repo-comp-jar-decoder", "roles": ["ADMIN"], "title": "服务模块", "hidden": false, "keepAlive": true, "alwaysShow": false}, "name": "local/app-service/comp-list", "path": "app-service/comp-list", "component": "system/repo-comp/local/app-service/comp-list/index"}, {"meta": {"icon": "repo-comp-jar-decoder", "roles": ["ADMIN"], "title": "静态解码", "hidden": false, "keepAlive": true, "alwaysShow": false}, "name": "local/jar-decoder/comp-list", "path": "jar-decoder/comp-list", "component": "system/repo-comp/local/jar-decoder/comp-list/index"}, {"meta": {"icon": "repo-comp-jar-decoder", "roles": ["ADMIN"], "title": "操作列表", "hidden": true, "keepAlive": true, "alwaysShow": false}, "name": "local/jar-decoder/operate-list", "path": "jar-decoder/operate-list", "component": "system/repo-comp/local/jar-decoder/operate-list/index"}, {"meta": {"icon": "repo-comp-jsp-decoder", "roles": ["ADMIN"], "title": "动态解码", "hidden": false, "keepAlive": true, "alwaysShow": false}, "name": "local/jsp-decoder/comp-list", "path": "jsp-decoder/comp-list", "component": "system/repo-comp/local/jsp-decoder/comp-list/index"}, {"meta": {"icon": "repo-comp-jsp-decoder", "roles": ["ADMIN"], "title": "操作列表", "hidden": true, "keepAlive": true, "alwaysShow": false}, "name": "local/jsp-decoder/operate-list", "path": "jsp-decoder/operate-list", "component": "system/repo-comp/local/jsp-decoder/operate-list/index"}, {"meta": {"icon": "repo-comp-decoder", "roles": ["ADMIN"], "title": "操作详情", "hidden": true, "keepAlive": true, "alwaysShow": false}, "name": "local/jsp-decoder/version-info", "path": "jsp-decoder/version-info", "component": "system/repo-comp/local/jsp-decoder/operate-info/index"}, {"meta": {"icon": "repo-comp-jar-decoder", "roles": ["ADMIN"], "title": "文件模板", "hidden": false, "keepAlive": true, "alwaysShow": false}, "name": "local/file-template/comp-list", "path": "file-template/comp-list", "component": "system/repo-comp/local/file-template/comp-list/index"}, {"meta": {"icon": "repo-comp-jar-decoder", "roles": ["ADMIN"], "title": "文件列表", "hidden": true, "keepAlive": true, "alwaysShow": false}, "name": "local/file-template/file-list", "path": "file-template/file-list", "component": "system/repo-comp/local/file-template/file-list/index"}], "redirect": "/system/repo-comp-local", "component": "Layout"}, {"meta": {"icon": "device-manage", "roles": ["ADMIN"], "title": "设备管理", "hidden": false, "keepAlive": true, "alwaysShow": true}, "path": "/device", "children": [{"meta": {"icon": "device-list", "roles": ["ADMIN"], "title": "设备列表", "hidden": false, "keepAlive": true, "alwaysShow": false}, "name": "device", "path": "device", "component": "system/device/entity/index"}, {"meta": {"icon": "device-value", "roles": ["ADMIN"], "title": "设备数值", "hidden": false, "keepAlive": true, "alwaysShow": false}, "name": "device-value", "path": "device-value", "component": "system/device/value/index"}, {"meta": {"icon": "device-mapper", "roles": ["ADMIN"], "title": "设备映射", "hidden": false, "keepAlive": true, "alwaysShow": false}, "name": "device-mapper", "path": "device-mapper", "component": "system/device/mapper/index"}, {"meta": {"icon": "extend", "roles": ["ADMIN"], "title": "扩展信息", "hidden": false, "keepAlive": true, "alwaysShow": false}, "name": "device-extend", "path": "device-extend", "component": "system/extend/index"}, {"meta": {"icon": "device-status", "roles": ["ADMIN"], "title": "通信状态", "hidden": false, "keepAlive": true, "alwaysShow": false}, "name": "device-status", "path": "device-status", "component": "system/device/status/index"}, {"meta": {"icon": "device-timeout", "roles": ["ADMIN"], "title": "通信超时", "hidden": false, "keepAlive": true, "alwaysShow": false}, "name": "device-timeout", "path": "device-timeout", "component": "system/device/timeout/index"}], "redirect": "/system/device", "component": "Layout"}, {"meta": {"icon": "channel-manage", "roles": ["ADMIN"], "title": "通道管理", "hidden": false, "keepAlive": true, "alwaysShow": true}, "path": "/channel", "children": [{"meta": {"icon": "channel", "roles": ["ADMIN"], "title": "通道列表", "hidden": false, "keepAlive": true, "alwaysShow": false}, "name": "channel", "path": "channel", "component": "system/channel/index"}], "redirect": "/system/channel", "component": "Layout"}, {"meta": {"icon": "link-manage", "roles": ["ADMIN"], "title": "链路管理", "hidden": false, "keepAlive": true, "alwaysShow": true}, "path": "/link", "children": [{"meta": {"icon": "link", "roles": ["ADMIN"], "title": "链路列表", "hidden": false, "keepAlive": true, "alwaysShow": false}, "name": "link", "path": "link", "component": "system/link/index"}], "redirect": "/system/link", "component": "Layout"}, {"meta": {"icon": "model-manage", "roles": ["ADMIN"], "title": "模型管理", "hidden": false, "keepAlive": true, "alwaysShow": true}, "path": "/model", "children": [{"meta": {"icon": "device-model", "roles": ["ADMIN"], "title": "设备模型", "hidden": false, "keepAlive": true, "alwaysShow": false}, "name": "device-model", "path": "device-model", "component": "system/device/model/index"}], "redirect": "/system/device/model", "component": "Layout"}, {"meta": {"icon": "trigger", "roles": ["ADMIN"], "title": "触发器管理", "hidden": false, "keepAlive": true, "alwaysShow": true}, "path": "/trigger", "children": [{"meta": {"icon": "trigger-method", "roles": ["ADMIN"], "title": "触发器定义", "hidden": false, "keepAlive": true, "alwaysShow": false}, "name": "device-trigger", "path": "device-trigger", "component": "system/device/trigger/index"}, {"meta": {"icon": "trigger-list", "roles": ["ADMIN"], "title": "触发器配置", "hidden": false, "keepAlive": true, "alwaysShow": false}, "name": "device-trigger-config", "path": "device-trigger-config", "component": "system/device/trigger/config/index"}, {"meta": {"icon": "trigger-value", "roles": ["ADMIN"], "title": "触发数值", "hidden": false, "keepAlive": true, "alwaysShow": false}, "name": "trigger-value", "path": "trigger-value", "component": "system/device/trigger/value/index"}], "redirect": "/system/device", "component": "Layout"}, {"meta": {"icon": "period-manage", "roles": ["ADMIN"], "title": "周期管理", "hidden": false, "keepAlive": true, "alwaysShow": true}, "path": "/period", "children": [{"meta": {"icon": "period-task", "roles": ["ADMIN"], "title": "周期任务", "hidden": false, "keepAlive": true, "alwaysShow": false}, "name": "period-task", "path": "period-task", "component": "system/period/task/index"}, {"meta": {"icon": "period-record", "roles": ["ADMIN"], "title": "周期记录", "hidden": false, "keepAlive": true, "alwaysShow": false}, "name": "period-record", "path": "period-record", "component": "system/period/record/index"}], "redirect": "/system/device", "component": "Layout"}, {"meta": {"icon": "record-manage", "roles": ["ADMIN"], "title": "记录管理", "hidden": false, "keepAlive": true, "alwaysShow": true}, "path": "/record", "children": [{"meta": {"icon": "device-record", "roles": ["ADMIN"], "title": "设备记录", "hidden": false, "keepAlive": true, "alwaysShow": false}, "name": "device-record", "path": "device-record", "component": "system/device/record/index"}, {"meta": {"icon": "operate-record", "roles": ["ADMIN"], "title": "操作记录", "hidden": false, "keepAlive": true, "alwaysShow": false}, "name": "operate-record", "path": "operate-record", "component": "system/device/operate/record/index"}, {"meta": {"icon": "history-record", "roles": ["ADMIN"], "title": "历史记录", "hidden": false, "keepAlive": true, "alwaysShow": false}, "name": "device-history", "path": "device-history", "component": "system/device/history/index"}], "redirect": "/system/device", "component": "Layout"}, {"meta": {"icon": "link", "roles": ["ADMIN"], "title": "官方网站", "hidden": false, "keepAlive": true, "alwaysShow": true}, "path": "/website-link", "children": [{"meta": {"icon": "link", "roles": ["ADMIN"], "title": "官方网站", "hidden": false, "keepAlive": true, "alwaysShow": false}, "path": "http://www.fox-tech.cn"}, {"meta": {"icon": "link", "roles": ["ADMIN"], "title": "官方文档", "hidden": false, "keepAlive": true, "alwaysShow": false}, "path": "http://docs.fox-tech.cn"}, {"meta": {"icon": "link", "roles": ["ADMIN"], "title": "官方源码", "hidden": false, "keepAlive": true, "alwaysShow": false}, "path": "https://gitee.com/fierce_wolf"}, {"meta": {"icon": "link", "roles": ["ADMIN"], "title": "Fox-Cloud", "hidden": false, "keepAlive": true, "alwaysShow": false}, "path": "http://cloud.fox-tech.cn"}], "redirect": "noredirect", "component": "Layout"}]', 1651831121752, 1651831121752),
	(12, 'HEDY', '[{"meta": {"icon": "template-manage", "roles": ["ADMIN"], "title": "任务管理", "hidden": false, "keepAlive": true, "alwaysShow": true}, "path": "/task", "children": [{"meta": {"icon": "operate-monitor-task", "roles": ["ADMIN"], "title": "设备监控任务", "hidden": false, "keepAlive": true, "alwaysShow": false}, "name": "operate-monitor-task", "path": "operate-monitor-task", "component": "system/device/operate/task/monitor/index"}, {"meta": {"icon": "operate-manual-task", "roles": ["ADMIN"], "title": "设备操作任务", "hidden": false, "keepAlive": true, "alwaysShow": false}, "name": "operate-manual-task", "path": "operate-manual-task", "component": "system/device/operate/task/manual/index"}, {"meta": {"icon": "operate-channel-task", "roles": ["ADMIN"], "title": "通道操作任务", "hidden": false, "keepAlive": true, "alwaysShow": false}, "name": "operate-channel-task", "path": "operate-channel-task", "component": "system/device/operate/task/channel/index"}], "redirect": "/system/device", "component": "Layout"}, {"meta": {"icon": "system", "roles": ["ADMIN"], "title": "系统管理", "hidden": false, "keepAlive": true, "alwaysShow": true}, "path": "/system", "children": [{"meta": {"icon": "system-config", "roles": ["ADMIN"], "title": "系统参数", "hidden": false, "keepAlive": true, "alwaysShow": false}, "name": "config", "path": "config", "component": "system/config/index"}, {"meta": {"icon": "param-template", "roles": ["ADMIN"], "title": "参数模板", "hidden": false, "keepAlive": true, "alwaysShow": false}, "name": "param-template", "path": "param-template", "component": "system/param/template/index"}, {"meta": {"icon": "user", "roles": ["ADMIN"], "title": "用户管理", "hidden": false, "keepAlive": true, "alwaysShow": false}, "name": "user", "path": "user", "component": "system/user/index"}, {"meta": {"icon": "device-decoder", "roles": ["ADMIN"], "title": "设备解码", "hidden": false, "keepAlive": true, "alwaysShow": false}, "name": "device-decoder", "path": "device-decoder", "component": "system/device/decoder/index"}, {"meta": {"icon": "device-template", "roles": ["ADMIN"], "title": "设备模板", "hidden": false, "keepAlive": true, "alwaysShow": false}, "name": "device-template", "path": "device-template", "component": "system/device/template/index"}, {"meta": {"icon": "process-status", "roles": ["ADMIN"], "title": "服务模块", "hidden": false, "keepAlive": true, "alwaysShow": false}, "name": "process-status", "path": "process-status", "component": "system/service/process/index"}, {"meta": {"icon": "service-status", "roles": ["ADMIN"], "title": "服务状态", "hidden": false, "keepAlive": true, "alwaysShow": false}, "name": "service-status", "path": "service-status", "component": "system/service/status/index"}, {"meta": {"icon": "console", "roles": ["ADMIN"], "title": "后台日志", "hidden": false, "keepAlive": true, "alwaysShow": false}, "name": "console", "path": "console", "component": "system/console/index"}], "redirect": "/system/device", "component": "Layout"}, {"meta": {"icon": "repository-manage", "roles": ["ADMIN"], "title": "仓库管理", "hidden": false, "keepAlive": true, "alwaysShow": true}, "path": "/repository", "children": [{"meta": {"icon": "repository-decoder", "roles": ["ADMIN"], "title": "解码模块", "hidden": false, "keepAlive": true, "alwaysShow": false}, "name": "repository-decoder", "path": "repository-decoder", "component": "system/repository/decoder/index"}, {"meta": {"icon": "repository-template", "roles": ["ADMIN"], "title": "模板模块", "hidden": false, "keepAlive": true, "alwaysShow": false}, "name": "repository-template", "path": "repository-template", "component": "system/repository/template/index"}, {"meta": {"icon": "repository-webpack", "roles": ["ADMIN"], "title": "前端模块", "hidden": false, "keepAlive": true, "alwaysShow": false}, "name": "repository-webpack", "path": "repository-webpack", "component": "system/repository/webpack/index"}, {"meta": {"icon": "repository-service", "roles": ["ADMIN"], "title": "服务模块", "hidden": false, "keepAlive": true, "alwaysShow": false}, "name": "repository-service", "path": "repository-service", "component": "system/repository/service/index"}, {"meta": {"icon": "repository-product", "roles": ["ADMIN"], "title": "适配产品", "hidden": false, "keepAlive": true, "alwaysShow": false}, "name": "repository-product", "path": "repository-product", "component": "system/repository/product/index"}, {"meta": {"icon": "repository-product-detail", "roles": ["ADMIN"], "title": "产品详情", "hidden": true, "keepAlive": true, "alwaysShow": false}, "name": "repository-product-detail", "path": "repository-product-detail", "component": "system/repository/product/detail/index"}], "redirect": "/system/repository", "component": "Layout"}, {"meta": {"icon": "device-manage", "roles": ["ADMIN"], "title": "设备管理", "hidden": false, "keepAlive": true, "alwaysShow": true}, "path": "/device", "children": [{"meta": {"icon": "device-list", "roles": ["ADMIN"], "title": "设备列表", "hidden": false, "keepAlive": true, "alwaysShow": false}, "name": "device", "path": "device", "component": "system/device/entity/index"}, {"meta": {"icon": "device-value", "roles": ["ADMIN"], "title": "设备数值", "hidden": false, "keepAlive": true, "alwaysShow": false}, "name": "device-value", "path": "device-value", "component": "system/device/value/index"}, {"meta": {"icon": "device-mapper", "roles": ["ADMIN"], "title": "设备映射", "hidden": false, "keepAlive": true, "alwaysShow": false}, "name": "device-mapper", "path": "device-mapper", "component": "system/device/mapper/index"}, {"meta": {"icon": "device-status", "roles": ["ADMIN"], "title": "通信状态", "hidden": false, "keepAlive": true, "alwaysShow": false}, "name": "device-status", "path": "device-status", "component": "system/device/status/index"}, {"meta": {"icon": "device-timeout", "roles": ["ADMIN"], "title": "通信超时", "hidden": false, "keepAlive": true, "alwaysShow": false}, "name": "device-timeout", "path": "device-timeout", "component": "system/device/timeout/index"}], "redirect": "/system/device", "component": "Layout"}, {"meta": {"icon": "channel-manage", "roles": ["ADMIN"], "title": "通道管理", "hidden": false, "keepAlive": true, "alwaysShow": true}, "path": "/channel", "children": [{"meta": {"icon": "channel", "roles": ["ADMIN"], "title": "通道列表", "hidden": false, "keepAlive": true, "alwaysShow": false}, "name": "channel", "path": "channel", "component": "system/channel/index"}], "redirect": "/system/channel", "component": "Layout"}, {"meta": {"icon": "link-manage", "roles": ["ADMIN"], "title": "链路管理", "hidden": false, "keepAlive": true, "alwaysShow": true}, "path": "/link", "children": [{"meta": {"icon": "link", "roles": ["ADMIN"], "title": "链路列表", "hidden": false, "keepAlive": true, "alwaysShow": false}, "name": "link", "path": "link", "component": "system/link/index"}], "redirect": "/system/link", "component": "Layout"}, {"meta": {"icon": "trigger", "roles": ["ADMIN"], "title": "触发器管理", "hidden": false, "keepAlive": true, "alwaysShow": true}, "path": "/trigger", "children": [{"meta": {"icon": "trigger-method", "roles": ["ADMIN"], "title": "触发器定义", "hidden": false, "keepAlive": true, "alwaysShow": false}, "name": "device-trigger", "path": "device-trigger", "component": "system/device/trigger/index"}, {"meta": {"icon": "trigger-list", "roles": ["ADMIN"], "title": "触发器配置", "hidden": false, "keepAlive": true, "alwaysShow": false}, "name": "device-trigger-config", "path": "device-trigger-config", "component": "system/device/trigger/config/index"}, {"meta": {"icon": "trigger-value", "roles": ["ADMIN"], "title": "触发数值", "hidden": false, "keepAlive": true, "alwaysShow": false}, "name": "trigger-value", "path": "trigger-value", "component": "system/device/trigger/value/index"}], "redirect": "/system/device", "component": "Layout"}, {"meta": {"icon": "operate-manage", "roles": ["ADMIN"], "title": "操作管理", "hidden": false, "keepAlive": true, "alwaysShow": true}, "path": "/operate", "children": [{"meta": {"icon": "operate-method", "roles": ["ADMIN"], "title": "操作方法", "hidden": false, "keepAlive": true, "alwaysShow": false}, "name": "device-operate", "path": "device-operate", "component": "system/device/operate/method/index"}, {"meta": {"icon": "operate-record", "roles": ["ADMIN"], "title": "操作记录", "hidden": false, "keepAlive": true, "alwaysShow": false}, "name": "operate-record", "path": "operate-record", "component": "system/device/operate/record/index"}], "redirect": "/system/device", "component": "Layout"}, {"meta": {"icon": "period-manage", "roles": ["ADMIN"], "title": "周期管理", "hidden": false, "keepAlive": true, "alwaysShow": true}, "path": "/period", "children": [{"meta": {"icon": "period-task", "roles": ["ADMIN"], "title": "周期任务", "hidden": false, "keepAlive": true, "alwaysShow": false}, "name": "period-task", "path": "period-task", "component": "system/period/task/index"}, {"meta": {"icon": "period-record", "roles": ["ADMIN"], "title": "周期记录", "hidden": false, "keepAlive": true, "alwaysShow": false}, "name": "period-record", "path": "period-record", "component": "system/period/record/index"}], "redirect": "/system/device", "component": "Layout"}, {"meta": {"icon": "record-manage", "roles": ["ADMIN"], "title": "记录管理", "hidden": false, "keepAlive": true, "alwaysShow": true}, "path": "/record", "children": [{"meta": {"icon": "device-record", "roles": ["ADMIN"], "title": "设备记录", "hidden": false, "keepAlive": true, "alwaysShow": false}, "name": "device-record", "path": "device-record", "component": "system/device/record/index"}, {"meta": {"icon": "history-record", "roles": ["ADMIN"], "title": "历史记录", "hidden": false, "keepAlive": true, "alwaysShow": false}, "name": "device-history", "path": "device-history", "component": "system/device/history/index"}], "redirect": "/system/device", "component": "Layout"}]', 1651831121752, 1651831121752);

-- 正在导出表  fox_edge.tb_user_permission 的数据：~1 rows (大约)
DELETE FROM `tb_user_permission`;
INSERT INTO `tb_user_permission` (`id`, `name`, `permission`, `create_time`, `update_time`) VALUES
	(1, 'ADMIN', '["sys:user:view", "sys:user:edit", "sys:user:add", "sys:user:delete"]', 1651806258856, 1651806258856);

-- 正在导出表  fox_edge.tb_user_role 的数据：~1 rows (大约)
DELETE FROM `tb_user_role`;
INSERT INTO `tb_user_role` (`id`, `name`, `role`, `create_time`, `update_time`) VALUES
	(1, 'ADMIN', '["ADMIN"]', 1651831121752, 1651831121752);

/*!40103 SET TIME_ZONE=IFNULL(@OLD_TIME_ZONE, 'system') */;
/*!40101 SET SQL_MODE=IFNULL(@OLD_SQL_MODE, '') */;
/*!40014 SET FOREIGN_KEY_CHECKS=IFNULL(@OLD_FOREIGN_KEY_CHECKS, 1) */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40111 SET SQL_NOTES=IFNULL(@OLD_SQL_NOTES, 1) */;
